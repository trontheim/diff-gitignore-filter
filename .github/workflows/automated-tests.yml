name: Automated Tests and Quality Checks

on:
  push:
    branches: ['**']
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST: "1.88.0"
  MSRV: "1.82.0"

jobs:
  # Lefthook-based quality checks (replaces fmt, clippy, basic tests)
  lefthook-checks:
    name: Lefthook Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          components: rustfmt, clippy
          toolchain: ${{ env.RUST }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: lefthook-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            lefthook-${{ runner.os }}-cargo-
      - name: Cache tools
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: tools-${{ runner.os }}-lefthook-cocogitto
          restore-keys: |
            tools-${{ runner.os }}-
      - name: Install lefthook
        run: |
          if ! command -v lefthook &> /dev/null; then
            curl -1sLf 'https://dl.cloudsmith.io/public/evilmartians/lefthook/setup.deb.sh' | sudo -E bash
            sudo apt install lefthook
          fi
      - name: Install cocogitto
        run: |
          if ! command -v cog &> /dev/null; then
            cargo install cocogitto --locked
          fi
      - name: Run lefthook pre-push checks
        run: lefthook run pre-push
      - name: Validate commit messages (PR only)
        if: github.event_name == 'pull_request'
        run: |
          COMMIT_MSG=$(git log -1 --pretty=format:"%s")
          cog verify "$COMMIT_MSG"

  # Test matrix similar to Node.js versions in the example
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust:
          - "1.82.0"  # MSRV
          - "1.88.0"  # RUST
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: test-${{ matrix.rust }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            test-${{ matrix.rust }}-cargo-
      - name: Run tests on Rust ${{ matrix.rust }}
        run: cargo test --verbose --all-features --workspace
      - name: Run property-based tests
        run: cargo test --test property_tests --verbose
      - name: Run integration tests
        run: cargo test --test integration_tests --verbose
      - name: Run doc tests
        run: cargo test --doc --all-features

  msrv:
    name: MSRV Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust MSRV
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.MSRV }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: msrv-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            msrv-${{ runner.os }}-cargo-
      - name: Test with MSRV
        run: cargo test --verbose --all-features

  # Coverage similar to the example, but only for stable Rust
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: [lefthook-checks, test, msrv]
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: coverage-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            coverage-${{ runner.os }}-cargo-
      - name: Run tests with coverage
        run: |
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
          cargo llvm-cov --all-features --workspace --summary-only --fail-under-lines 85
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: false
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      - name: Security audit
        run: cargo audit --deny warnings

  # Cross-Platform Tests (simplified based on jira-timesheet-cli example)
  cross-platform-test:
    name: Cross Platform Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS Targets
          - os: macos-13
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          # Linux Targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
          # # Windows Targets
          # - os: windows-latest
          #   target: x86_64-pc-windows-msvc
          # - os: windows-latest
          #   target: aarch64-pc-windows-msvc

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        if: "!contains(matrix.target, 'windows')"
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST }}
          targets: ${{ matrix.target }}
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cross-test-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cross-test-${{ matrix.target }}-cargo-
      - name: Build and test on ${{ matrix.os }}
        run: |
          cargo build --release --target ${{ matrix.target }} --locked
          cargo test --target ${{ matrix.target }} --locked
      - name: Test binary functionality
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ./diff-gitignore-filter.exe --version || echo "Binary test completed"
          else
            ./diff-gitignore-filter --version || echo "Binary test completed"
          fi

  # Documentation Tests
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: docs-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docs-${{ runner.os }}-cargo-
      - name: Check documentation
        run: cargo doc --all-features --no-deps --document-private-items
      - name: Test documentation examples
        run: cargo test --doc --all-features

  # Benchmarks (optional, non-blocking)
  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Workaround for rustup cross-device link issue
        run: |
          export RUSTUP_HOME=/tmp/rustup
          export CARGO_HOME=/tmp/cargo
          echo "RUSTUP_HOME=/tmp/rustup" >> $GITHUB_ENV
          echo "CARGO_HOME=/tmp/cargo" >> $GITHUB_ENV
          echo "/tmp/cargo/bin" >> $GITHUB_PATH
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: bench-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            bench-${{ runner.os }}-cargo-
      - name: Run benchmarks
        run: cargo bench --all-features
