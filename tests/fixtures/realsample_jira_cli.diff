diff --git a/path/to/project-a/.git/COMMIT_EDITMSG b/path/to/project-a/.git/COMMIT_EDITMSG
deleted file mode 100644
index 170d45e..0000000
--- a/path/to/project-a/.git/COMMIT_EDITMSG
+++ /dev/null
@@ -1,7 +0,0 @@
-feat: add comprehensive test infrastructure
-
-- Add Vitest testing framework with coverage reporting
-- Configure MSW for API mocking and mock-fs for file system tests
-- Export JiraTimesheetCLI class for testing
-- Add test utilities for mocking Jira responses and file operations
-- Update gitignore for test coverage and cache directories
diff --git a/path/to/project-a/.git/FETCH_HEAD b/path/to/project-a/.git/FETCH_HEAD
deleted file mode 100644
index 567dbc1..0000000
--- a/path/to/project-a/.git/FETCH_HEAD
+++ /dev/null
@@ -1 +0,0 @@
-c0682810153a08a0b4e9216e8f0beaf03c97be86		branch 'main' of github.com:trontheim/jira-timesheet-cli
diff --git a/path/to/project-a/.git/HEAD b/path/to/project-a/.git/HEAD
deleted file mode 100644
index b870d82..0000000
--- a/path/to/project-a/.git/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/heads/main
diff --git a/path/to/project-a/.git/ORIG_HEAD b/path/to/project-a/.git/ORIG_HEAD
deleted file mode 100644
index 36ffe33..0000000
--- a/path/to/project-a/.git/ORIG_HEAD
+++ /dev/null
@@ -1 +0,0 @@
-3ab3962c3ef4800766474b12729d684f38d5fa55
diff --git a/path/to/project-a/.git/REBASE_HEAD b/path/to/project-a/.git/REBASE_HEAD
deleted file mode 100644
index 1ccfd5f..0000000
--- a/path/to/project-a/.git/REBASE_HEAD
+++ /dev/null
@@ -1 +0,0 @@
-d19f5257812aafde87130c3d36cb93a1420d5317
diff --git a/path/to/project-a/.git/config b/path/to/project-a/.git/config
deleted file mode 100644
index 593d2f0..0000000
--- a/path/to/project-a/.git/config
+++ /dev/null
@@ -1,14 +0,0 @@
-[core]
-	repositoryformatversion = 0
-	filemode = true
-	bare = false
-	logallrefupdates = true
-	ignorecase = true
-	precomposeunicode = true
-[remote "origin"]
-	url = git@github.com:trontheim/jira-timesheet-cli.git
-	fetch = +refs/heads/*:refs/remotes/origin/*
-[branch "main"]
-	remote = origin
-	merge = refs/heads/main
-	vscode-merge-base = origin/main
diff --git a/path/to/project-a/.git/fork-settings b/path/to/project-a/.git/fork-settings
deleted file mode 100644
index 1a8a0c4..0000000
--- a/path/to/project-a/.git/fork-settings
+++ /dev/null
@@ -1 +0,0 @@
-{"signOff":false,"leanBranchingMainBranch":null,"draftMessage":"","starredReferences":[],"leanBranchingNoFastForward":false,"hiddenReferences":[],"showBugtrackerLinks":true,"expandedSidebarItems":[{"children":[],"title":"Branches"},{"title":"Remotes","children":[]},{"title":"Tags","children":[]},{"title":"Stashes","children":[]}],"hideTags":false,"pushLastCustomRefspec":null,"hideUntrackedFiles":false,"hideStashes":false,"recentRevisionSearchQueries":[{"scope":"repository","searchString":"typescript","type":"message"},{"type":"diffContent","scope":"repository","searchString":"-macos-"},{"searchString":"-mac-os","type":"diffContent","scope":"repository"}],"trustSharedCommands":false,"recentNewBranchPrefix":null,"signingKey":null,"recentRemote":null,"filterReferences":[],"tabWidth":4}
\ No newline at end of file
diff --git a/path/to/project-a/.git/index b/path/to/project-a/.git/index
deleted file mode 100644
index 3f4e84b..0000000
Binary files a/path/to/project-a/.git/index and /dev/null differ
diff --git a/path/to/project-a/.git/info/refs b/path/to/project-a/.git/info/refs
deleted file mode 100644
index 7b02304..0000000
--- a/path/to/project-a/.git/info/refs
+++ /dev/null
@@ -1,3 +0,0 @@
-290adeff3f2e0f447a57d607634a13ee08ede4aa	refs/heads/main
-290adeff3f2e0f447a57d607634a13ee08ede4aa	refs/remotes/origin/HEAD
-290adeff3f2e0f447a57d607634a13ee08ede4aa	refs/remotes/origin/main
diff --git a/path/to/project-a/.git/logs/HEAD b/path/to/project-a/.git/logs/HEAD
deleted file mode 100644
index 651a750..0000000
--- a/path/to/project-a/.git/logs/HEAD
+++ /dev/null
@@ -1,129 +0,0 @@
-0000000000000000000000000000000000000000 aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 Sven Pöche <sven.poeche@mayflower.de> 1749146001 +0200	commit (initial): initial commit
-aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 ec2250f50c400b36211a21a29c0365612cd6ae33 Sven Pöche <sven.poeche@mayflower.de> 1749151940 +0200	commit: feat: add comprehensive test suite with Vitest
-ec2250f50c400b36211a21a29c0365612cd6ae33 5324cbfb0a0a65bb2bbed8e8474158deee6384d6 Sven Pöche <sven.poeche@mayflower.de> 1749152161 +0200	commit (amend): feat: add comprehensive test suite with Vitest
-5324cbfb0a0a65bb2bbed8e8474158deee6384d6 5324cbfb0a0a65bb2bbed8e8474158deee6384d6 Sven Pöche <sven.poeche@mayflower.de> 1749157986 +0200	reset: moving to HEAD
-5324cbfb0a0a65bb2bbed8e8474158deee6384d6 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 Sven Pöche <sven.poeche@mayflower.de> 1749164399 +0200	commit: test: refactor config management tests to use local CLI instances
-10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 0ea2408c62d34560ef37f09f74efcf26933da955 Sven Pöche <sven.poeche@mayflower.de> 1749164525 +0200	commit: build: add cross-platform binary generation with esbuild and pkg
-0ea2408c62d34560ef37f09f74efcf26933da955 c8b880d6ca8c71a60224566d207f6bf33d2044ec Sven Pöche <sven.poeche@mayflower.de> 1749204608 +0200	commit: feat: add date format conversion and improve output formatting
-c8b880d6ca8c71a60224566d207f6bf33d2044ec a6da8397b00ec5bd312f98f864b7439c45ae5c37 Sven Pöche <sven.poeche@mayflower.de> 1749212605 +0200	commit (amend): feat: add date format conversion and improve output formatting
-a6da8397b00ec5bd312f98f864b7439c45ae5c37 b6f4b3d5c37b85ccc59236830ccfcf550e06dc1e Sven Pöche <sven.poeche@mayflower.de> 1749212610 +0200	commit (amend): feat: add date format conversion and improve output formatting
-b6f4b3d5c37b85ccc59236830ccfcf550e06dc1e 78b09daa5d10640199cba768dd7d01b4fcd439d7 Sven Pöche <sven.poeche@mayflower.de> 1749216799 +0200	commit (amend): feat: add date format conversion and improve output formatting
-78b09daa5d10640199cba768dd7d01b4fcd439d7 276724b7d105cd7e15a29b74eb0d9154dd613caf Sven Pöche <sven.poeche@mayflower.de> 1749217171 +0200	commit: test: verbessere Environment-Variable-Isolation in Test-Setup
-276724b7d105cd7e15a29b74eb0d9154dd613caf 7d9990725c89bd32bf865083a4289bad33f841e1 Sven Pöche <sven.poeche@mayflower.de> 1749217982 +0200	commit: refactor: Hauptdatei von jira_timesheet_cli.js zu timesheet.js umbenannt
-7d9990725c89bd32bf865083a4289bad33f841e1 7e7d481c353ad68e68ccc65cbfd9fbcb47c882e8 Sven Pöche <sven.poeche@mayflower.de> 1749218572 +0200	commit: refactor: vereinfache CLI-Befehlsnamen von jira-timesheet zu timesheet
-7e7d481c353ad68e68ccc65cbfd9fbcb47c882e8 7d9990725c89bd32bf865083a4289bad33f841e1 Sven Pöche <sven.poeche@mayflower.de> 1749218757 +0200	reset: moving to 7d9990725c89bd32bf865083a4289bad33f841e1
-7d9990725c89bd32bf865083a4289bad33f841e1 276724b7d105cd7e15a29b74eb0d9154dd613caf Sven Pöche <sven.poeche@mayflower.de> 1749218779 +0200	reset: moving to 276724b7d105cd7e15a29b74eb0d9154dd613caf
-276724b7d105cd7e15a29b74eb0d9154dd613caf 92462389a632c08a3c786ce66313f4f0138c9f31 Sven Pöche <sven.poeche@mayflower.de> 1749219374 +0200	commit: refactor: umbenennung von jira-timesheet-cli zu timesheet
-92462389a632c08a3c786ce66313f4f0138c9f31 b94e052ea3590be327ed83be8af747c553b6b4ca Sven Pöche <sven.poeche@mayflower.de> 1749304465 +0200	commit: feat: add interactive init command with comprehensive API validation
-b94e052ea3590be327ed83be8af747c553b6b4ca 8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 Sven Pöche <sven.poeche@mayflower.de> 1749305755 +0200	commit: feat: add Homebrew support for macOS installation
-8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 0ac8357052a5abd8e93d0c96922ef2dab395924f Sven Pöche <sven.poeche@mayflower.de> 1749325731 +0200	commit: feat: füge GitHub Actions für CI/CD hinzu
-0ac8357052a5abd8e93d0c96922ef2dab395924f 84a4be0f18abc9546f519c060f17e76da66078d9 Sven Pöche <sven.poeche@mayflower.de> 1749327918 +0200	commit: chore: aktualisiere auf Node.js 22 und entferne node-fetch
-84a4be0f18abc9546f519c060f17e76da66078d9 0ac8357052a5abd8e93d0c96922ef2dab395924f Sven Pöche <sven.poeche@mayflower.de> 1749329249 +0200	reset: moving to 0ac8357052a5abd8e93d0c96922ef2dab395924f
-0ac8357052a5abd8e93d0c96922ef2dab395924f f27809fb83994a75a69d72984b42b540d3b853b2 Sven Pöche <sven.poeche@mayflower.de> 1749338143 +0200	commit: refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-f27809fb83994a75a69d72984b42b540d3b853b2 c9c81e6ae718dedadc0eb53b04b43f30b4b9f6a4 Sven Pöche <sven.poeche@mayflower.de> 1749395447 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-c9c81e6ae718dedadc0eb53b04b43f30b4b9f6a4 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467242 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-29e5f72608766e9efeadb688906d32c8d6947e04 0000000000000000000000000000000000000000 Sven Pöche <sven.poeche@mayflower.de> 1749467299 +0200	Branch: renamed refs/heads/main to refs/heads/main
-29e5f72608766e9efeadb688906d32c8d6947e04 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467299 +0200	Branch: renamed refs/heads/main to refs/heads/main
-29e5f72608766e9efeadb688906d32c8d6947e04 b833b058e491f7f32cf56d9ff72a8599e4726126 Sven Pöche <sven.poeche@mayflower.de> 1749467539 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-b833b058e491f7f32cf56d9ff72a8599e4726126 0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 Sven Pöche <sven.poeche@mayflower.de> 1749468012 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 b66cd775731f828ec8175f0fd64caa9cf017a22f Sven Pöche <sven.poeche@mayflower.de> 1749469913 +0200	commit: feat: configure timezone via config file
-b66cd775731f828ec8175f0fd64caa9cf017a22f 5c70f075123d575d55a8870473098bd0e3e8f511 Sven Pöche <sven.poeche@mayflower.de> 1749470438 +0200	commit: chore: add contribution guidelines, deployment docs and pkg config
-5c70f075123d575d55a8870473098bd0e3e8f511 b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 Sven Pöche <sven.poeche@mayflower.de> 1749477326 +0200	commit: ci: enhance release workflow with cross-platform binary tests and checksums
-b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 42f2379299290271df081475dcadd4ca436d3edb Sven Pöche <sven.poeche@mayflower.de> 1749477538 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-42f2379299290271df081475dcadd4ca436d3edb e2f43f006742b3b5517e6acb1bb12e612cfbd23c Sven Pöche <sven.poeche@mayflower.de> 1749478974 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-e2f43f006742b3b5517e6acb1bb12e612cfbd23c b94e052ea3590be327ed83be8af747c553b6b4ca Sven Pöche <sven.poeche@mayflower.de> 1749479448 +0200	rebase (start): checkout b94e052ea3590be327ed83be8af747c553b6b4ca
-b94e052ea3590be327ed83be8af747c553b6b4ca 8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 Sven Pöche <sven.poeche@mayflower.de> 1749479448 +0200	rebase: fast-forward
-8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 253e7fb04fa95740efc7da0ebeac8d5b098c4c99 Sven Pöche <sven.poeche@mayflower.de> 1749481015 +0200	commit (amend): feat: add Homebrew support for macOS installation
-253e7fb04fa95740efc7da0ebeac8d5b098c4c99 cdd40caea425e439ea16fdfee0a90dde11631bec Sven Pöche <sven.poeche@mayflower.de> 1749481017 +0200	rebase (edit): feat: füge GitHub Actions für CI/CD hinzu
-cdd40caea425e439ea16fdfee0a90dde11631bec e593a40b98ebb8761ede815da31a254f4c21adfb Sven Pöche <sven.poeche@mayflower.de> 1749481202 +0200	commit (amend): feat: füge GitHub Actions für CI/CD hinzu
-e593a40b98ebb8761ede815da31a254f4c21adfb 257b7432c9fdbd265b6872f25896fbf5c0036999 Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (continue): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-257b7432c9fdbd265b6872f25896fbf5c0036999 a6c9b8d5d69b36f757c7c341b4c6f1b335838e09 Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (pick): feat: configure timezone via config file
-a6c9b8d5d69b36f757c7c341b4c6f1b335838e09 e0af9316b9a74dab2b8f462663e755a958114f1e Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (pick): chore: add contribution guidelines, deployment docs and pkg config
-e0af9316b9a74dab2b8f462663e755a958114f1e e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (pick): ci: enhance release workflow with cross-platform binary tests and checksums
-e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (finish): returning to refs/heads/main
-e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb e593a40b98ebb8761ede815da31a254f4c21adfb Sven Pöche <sven.poeche@mayflower.de> 1749482392 +0200	rebase (start): checkout e593a40b98ebb8761ede815da31a254f4c21adfb
-e593a40b98ebb8761ede815da31a254f4c21adfb 257b7432c9fdbd265b6872f25896fbf5c0036999 Sven Pöche <sven.poeche@mayflower.de> 1749482392 +0200	rebase: fast-forward
-257b7432c9fdbd265b6872f25896fbf5c0036999 0a598bbc83fb4089dd57e344e54c4f9350d859ec Sven Pöche <sven.poeche@mayflower.de> 1749482672 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-0a598bbc83fb4089dd57e344e54c4f9350d859ec 54293fc2ad81bbd3b477f668e9ce5f625eead906 Sven Pöche <sven.poeche@mayflower.de> 1749482674 +0200	rebase (pick): feat: configure timezone via config file
-54293fc2ad81bbd3b477f668e9ce5f625eead906 7b0151d5157be40158903782d69fc55404be2207 Sven Pöche <sven.poeche@mayflower.de> 1749482674 +0200	rebase (pick): chore: add contribution guidelines, deployment docs and pkg config
-7b0151d5157be40158903782d69fc55404be2207 199448f2fb790f99f7fb513459fa42185d737c13 Sven Pöche <sven.poeche@mayflower.de> 1749482674 +0200	rebase (pick): ci: enhance release workflow with cross-platform binary tests and checksums
-199448f2fb790f99f7fb513459fa42185d737c13 199448f2fb790f99f7fb513459fa42185d737c13 Sven Pöche <sven.poeche@mayflower.de> 1749482674 +0200	rebase (finish): returning to refs/heads/main
-199448f2fb790f99f7fb513459fa42185d737c13 e593a40b98ebb8761ede815da31a254f4c21adfb Sven Pöche <sven.poeche@mayflower.de> 1749482690 +0200	rebase (start): checkout e593a40b98ebb8761ede815da31a254f4c21adfb
-e593a40b98ebb8761ede815da31a254f4c21adfb 0a598bbc83fb4089dd57e344e54c4f9350d859ec Sven Pöche <sven.poeche@mayflower.de> 1749482690 +0200	rebase: fast-forward
-0a598bbc83fb4089dd57e344e54c4f9350d859ec 6f16be9e381463d9ea593ff1b39ff8b1ddc460ab Sven Pöche <sven.poeche@mayflower.de> 1749482718 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-6f16be9e381463d9ea593ff1b39ff8b1ddc460ab 5a791a5dffb131cfccaa23af6cd9e74ab718bcc8 Sven Pöche <sven.poeche@mayflower.de> 1749482720 +0200	rebase (pick): feat: configure timezone via config file
-5a791a5dffb131cfccaa23af6cd9e74ab718bcc8 80b46c865128c1acd3483758af4aeb6c594676cd Sven Pöche <sven.poeche@mayflower.de> 1749482720 +0200	rebase (pick): chore: add contribution guidelines, deployment docs and pkg config
-80b46c865128c1acd3483758af4aeb6c594676cd 9372b6358bce27925cb30988649e63fdb48f97c0 Sven Pöche <sven.poeche@mayflower.de> 1749482720 +0200	rebase (pick): ci: enhance release workflow with cross-platform binary tests and checksums
-9372b6358bce27925cb30988649e63fdb48f97c0 9372b6358bce27925cb30988649e63fdb48f97c0 Sven Pöche <sven.poeche@mayflower.de> 1749482720 +0200	rebase (finish): returning to refs/heads/main
-9372b6358bce27925cb30988649e63fdb48f97c0 b94e052ea3590be327ed83be8af747c553b6b4ca Sven Pöche <sven.poeche@mayflower.de> 1749482733 +0200	rebase (start): checkout b94e052ea3590be327ed83be8af747c553b6b4ca
-b94e052ea3590be327ed83be8af747c553b6b4ca 253e7fb04fa95740efc7da0ebeac8d5b098c4c99 Sven Pöche <sven.poeche@mayflower.de> 1749482733 +0200	rebase: fast-forward
-253e7fb04fa95740efc7da0ebeac8d5b098c4c99 c4f9dd588c590d65ba3917b7a29f1f964836f45e Sven Pöche <sven.poeche@mayflower.de> 1749482916 +0200	commit (amend): feat: add Homebrew support for macOS installation
-c4f9dd588c590d65ba3917b7a29f1f964836f45e 59ea57553c959795f9964857af8fc194b0c3772f Sven Pöche <sven.poeche@mayflower.de> 1749482919 +0200	rebase (pick): feat: füge GitHub Actions für CI/CD hinzu
-59ea57553c959795f9964857af8fc194b0c3772f 85228578892f9b7633e48c372b69758120de08c3 Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (continue): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-85228578892f9b7633e48c372b69758120de08c3 232856a0e05a2c8eb6539c07dbb4d26eaeabddf6 Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (pick): feat: configure timezone via config file
-232856a0e05a2c8eb6539c07dbb4d26eaeabddf6 6282eb6ed3fe021119af68993277499599dc83da Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (pick): chore: add contribution guidelines, deployment docs and pkg config
-6282eb6ed3fe021119af68993277499599dc83da 9b53f9698d8c8e67f0cdb842ff02804a343fb97b Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (pick): ci: enhance release workflow with cross-platform binary tests and checksums
-9b53f9698d8c8e67f0cdb842ff02804a343fb97b 9b53f9698d8c8e67f0cdb842ff02804a343fb97b Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (finish): returning to refs/heads/main
-9b53f9698d8c8e67f0cdb842ff02804a343fb97b b94e052ea3590be327ed83be8af747c553b6b4ca Sven Pöche <sven.poeche@mayflower.de> 1749483326 +0200	rebase (start): checkout b94e052ea3590be327ed83be8af747c553b6b4ca
-b94e052ea3590be327ed83be8af747c553b6b4ca c4f9dd588c590d65ba3917b7a29f1f964836f45e Sven Pöche <sven.poeche@mayflower.de> 1749483326 +0200	rebase: fast-forward
-c4f9dd588c590d65ba3917b7a29f1f964836f45e d9c74bdd8fb90e68f6a3cecd2dcddafaa58de576 Sven Pöche <sven.poeche@mayflower.de> 1749483359 +0200	commit (amend): feat: add Homebrew support for macOS installation
-d9c74bdd8fb90e68f6a3cecd2dcddafaa58de576 e0f74c9d3887177e482f70187847e1bcbcf70d18 Sven Pöche <sven.poeche@mayflower.de> 1749483360 +0200	rebase (pick): feat: füge GitHub Actions für CI/CD hinzu
-e0f74c9d3887177e482f70187847e1bcbcf70d18 d865692e69c627063b52710183519bde9a2f7379 Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (continue): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-d865692e69c627063b52710183519bde9a2f7379 453948c9a073cf4792463a1713382845fe125141 Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (pick): feat: configure timezone via config file
-453948c9a073cf4792463a1713382845fe125141 a9b6228b36a112d9695589a3049d65e8a16e8fee Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (pick): chore: add contribution guidelines, deployment docs and pkg config
-a9b6228b36a112d9695589a3049d65e8a16e8fee c6204d15fe40f7fd5fc46076861cb8039918ffa0 Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (pick): ci: enhance release workflow with cross-platform binary tests and checksums
-c6204d15fe40f7fd5fc46076861cb8039918ffa0 c6204d15fe40f7fd5fc46076861cb8039918ffa0 Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (finish): returning to refs/heads/main
-c6204d15fe40f7fd5fc46076861cb8039918ffa0 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 Sven Pöche <sven.poeche@mayflower.de> 1749483670 +0200	rebase (start): checkout 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08
-10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 0ea2408c62d34560ef37f09f74efcf26933da955 Sven Pöche <sven.poeche@mayflower.de> 1749483670 +0200	rebase: fast-forward
-0ea2408c62d34560ef37f09f74efcf26933da955 a09bbbc3c93f1621737ac4c4130ca684940a642d Sven Pöche <sven.poeche@mayflower.de> 1749483719 +0200	commit (amend): build: add cross-platform binary generation with esbuild and pkg
-a09bbbc3c93f1621737ac4c4130ca684940a642d 0498ed4b69fc9c7c7f27608c744a2479f7f1ef0b Sven Pöche <sven.poeche@mayflower.de> 1749483724 +0200	rebase (edit): feat: add date format conversion and improve output formatting
-0498ed4b69fc9c7c7f27608c744a2479f7f1ef0b fffae5b18fc59b69d996a8290226bfa7f83bc2fe Sven Pöche <sven.poeche@mayflower.de> 1749483736 +0200	commit (amend): feat: add date format conversion and improve output formatting
-fffae5b18fc59b69d996a8290226bfa7f83bc2fe ded7f7e89446beda7ab94dcc31c37f2df533db0e Sven Pöche <sven.poeche@mayflower.de> 1749483737 +0200	rebase (edit): test: verbessere Environment-Variable-Isolation in Test-Setup
-ded7f7e89446beda7ab94dcc31c37f2df533db0e 00d2a1d92ad38e5f020547ae029cc0032a2d8ea5 Sven Pöche <sven.poeche@mayflower.de> 1749483746 +0200	commit (amend): test: verbessere Environment-Variable-Isolation in Test-Setup
-00d2a1d92ad38e5f020547ae029cc0032a2d8ea5 04fb1458c6c82ea1e5f3e33265e47d3c6569263b Sven Pöche <sven.poeche@mayflower.de> 1749483822 +0200	rebase (continue): refactor: umbenennung von jira-timesheet-cli zu timesheet
-04fb1458c6c82ea1e5f3e33265e47d3c6569263b 8335cc8f742ce81ef2e1a2eff54c547f480e2182 Sven Pöche <sven.poeche@mayflower.de> 1749483822 +0200	rebase (edit): feat: add interactive init command with comprehensive API validation
-8335cc8f742ce81ef2e1a2eff54c547f480e2182 1dc5ebfe62acb7fa64956ff32fe6705f66ed6ab4 Sven Pöche <sven.poeche@mayflower.de> 1749483824 +0200	commit (amend): feat: add interactive init command with comprehensive API validation
-1dc5ebfe62acb7fa64956ff32fe6705f66ed6ab4 6ab590799060e7491da79b82abe6a3d7b2bf8a2f Sven Pöche <sven.poeche@mayflower.de> 1749483826 +0200	rebase (edit): feat: add Homebrew support for macOS installation
-6ab590799060e7491da79b82abe6a3d7b2bf8a2f 74704c1dd1f6b592f3db7c33b02d688c73672f02 Sven Pöche <sven.poeche@mayflower.de> 1749483828 +0200	commit (amend): feat: add Homebrew support for macOS installation
-74704c1dd1f6b592f3db7c33b02d688c73672f02 06bfcaae962992967d5d7bf3f0c245d666c97d40 Sven Pöche <sven.poeche@mayflower.de> 1749483829 +0200	rebase (edit): feat: füge GitHub Actions für CI/CD hinzu
-06bfcaae962992967d5d7bf3f0c245d666c97d40 316caebd12f54b691c39325705b3f7b0c69b8e98 Sven Pöche <sven.poeche@mayflower.de> 1749483830 +0200	commit (amend): feat: füge GitHub Actions für CI/CD hinzu
-316caebd12f54b691c39325705b3f7b0c69b8e98 6b9e62ea31b90184331e7e0618212b66cf6407ac Sven Pöche <sven.poeche@mayflower.de> 1749483831 +0200	rebase (edit): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-6b9e62ea31b90184331e7e0618212b66cf6407ac dfe19a5121ff81b7f4b6c1f036d10108a95a334e Sven Pöche <sven.poeche@mayflower.de> 1749483833 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-dfe19a5121ff81b7f4b6c1f036d10108a95a334e 0b0d30f831b5a3b9ce9c7aa159de1455fc6d6138 Sven Pöche <sven.poeche@mayflower.de> 1749483834 +0200	rebase (edit): feat: configure timezone via config file
-0b0d30f831b5a3b9ce9c7aa159de1455fc6d6138 3a93363f2042428bb6f6180c49e53d3801d22f38 Sven Pöche <sven.poeche@mayflower.de> 1749483835 +0200	commit (amend): feat: configure timezone via config file
-3a93363f2042428bb6f6180c49e53d3801d22f38 a4faef2f5de16105f6c68d8139662d15de9aac15 Sven Pöche <sven.poeche@mayflower.de> 1749483836 +0200	rebase (edit): chore: add contribution guidelines, deployment docs and pkg config
-a4faef2f5de16105f6c68d8139662d15de9aac15 2decdab6da0d80b94773e31eda1a0ab07fa2a6a0 Sven Pöche <sven.poeche@mayflower.de> 1749483837 +0200	commit (amend): chore: add contribution guidelines, deployment docs and pkg config
-2decdab6da0d80b94773e31eda1a0ab07fa2a6a0 d19f5257812aafde87130c3d36cb93a1420d5317 Sven Pöche <sven.poeche@mayflower.de> 1749483838 +0200	rebase (edit): ci: enhance release workflow with cross-platform binary tests and checksums
-d19f5257812aafde87130c3d36cb93a1420d5317 d19f5257812aafde87130c3d36cb93a1420d5317 Sven Pöche <sven.poeche@mayflower.de> 1749483839 +0200	rebase (finish): returning to refs/heads/main
-d19f5257812aafde87130c3d36cb93a1420d5317 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 Sven Pöche <sven.poeche@mayflower.de> 1749483860 +0200	rebase (start): checkout 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08
-10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 a09bbbc3c93f1621737ac4c4130ca684940a642d Sven Pöche <sven.poeche@mayflower.de> 1749483860 +0200	rebase: fast-forward
-a09bbbc3c93f1621737ac4c4130ca684940a642d fffae5b18fc59b69d996a8290226bfa7f83bc2fe Sven Pöche <sven.poeche@mayflower.de> 1749483878 +0200	rebase: fast-forward
-fffae5b18fc59b69d996a8290226bfa7f83bc2fe 00d2a1d92ad38e5f020547ae029cc0032a2d8ea5 Sven Pöche <sven.poeche@mayflower.de> 1749483886 +0200	rebase: fast-forward
-00d2a1d92ad38e5f020547ae029cc0032a2d8ea5 04fb1458c6c82ea1e5f3e33265e47d3c6569263b Sven Pöche <sven.poeche@mayflower.de> 1749483894 +0200	rebase: fast-forward
-04fb1458c6c82ea1e5f3e33265e47d3c6569263b 1dc5ebfe62acb7fa64956ff32fe6705f66ed6ab4 Sven Pöche <sven.poeche@mayflower.de> 1749483899 +0200	rebase: fast-forward
-1dc5ebfe62acb7fa64956ff32fe6705f66ed6ab4 74704c1dd1f6b592f3db7c33b02d688c73672f02 Sven Pöche <sven.poeche@mayflower.de> 1749483903 +0200	rebase: fast-forward
-74704c1dd1f6b592f3db7c33b02d688c73672f02 316caebd12f54b691c39325705b3f7b0c69b8e98 Sven Pöche <sven.poeche@mayflower.de> 1749483911 +0200	rebase: fast-forward
-316caebd12f54b691c39325705b3f7b0c69b8e98 dfe19a5121ff81b7f4b6c1f036d10108a95a334e Sven Pöche <sven.poeche@mayflower.de> 1749483920 +0200	rebase: fast-forward
-dfe19a5121ff81b7f4b6c1f036d10108a95a334e 04673b1923ee45e92c51a7b29fc91bbe7a203dc6 Sven Pöche <sven.poeche@mayflower.de> 1749483938 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-04673b1923ee45e92c51a7b29fc91bbe7a203dc6 348f159add0c83be75c2afb159b8c591e301c6b9 Sven Pöche <sven.poeche@mayflower.de> 1749483942 +0200	rebase (edit): feat: configure timezone via config file
-348f159add0c83be75c2afb159b8c591e301c6b9 ff71598475187837d82369dae9fea83bcb8fe8fa Sven Pöche <sven.poeche@mayflower.de> 1749483954 +0200	rebase (edit): chore: add contribution guidelines, deployment docs and pkg config
-ff71598475187837d82369dae9fea83bcb8fe8fa ca35a5ac1d094557681a638b37b10175ae5e437b Sven Pöche <sven.poeche@mayflower.de> 1749483970 +0200	commit (amend): chore: add contribution guidelines, deployment docs and pkg config
-ca35a5ac1d094557681a638b37b10175ae5e437b b183f01f84e226562a5e1c35e34daf802d3f516c Sven Pöche <sven.poeche@mayflower.de> 1749483975 +0200	rebase (edit): ci: enhance release workflow with cross-platform binary tests and checksums
-b183f01f84e226562a5e1c35e34daf802d3f516c b183f01f84e226562a5e1c35e34daf802d3f516c Sven Pöche <sven.poeche@mayflower.de> 1749483983 +0200	rebase (finish): returning to refs/heads/main
-b183f01f84e226562a5e1c35e34daf802d3f516c 290adeff3f2e0f447a57d607634a13ee08ede4aa Sven Pöche <sven.poeche@mayflower.de> 1749484962 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-290adeff3f2e0f447a57d607634a13ee08ede4aa b7468cebcde0fb2218ecc4a0692493f42608077c Sven Pöche <sven.poeche@mayflower.de> 1749485425 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-b7468cebcde0fb2218ecc4a0692493f42608077c d9ef7f37d000fe762700c5c45790e0fa29da4525 Sven Pöche <sven.poeche@mayflower.de> 1749485793 +0200	commit: chore: update SHA256 sums in Brew formula
-d9ef7f37d000fe762700c5c45790e0fa29da4525 f3bdc2ef40532c75c94749e12343ef5554d4d7e1 Sven Pöche <sven.poeche@mayflower.de> 1749569318 +0200	commit: feat: add early JIRA_API_TOKEN validation
-f3bdc2ef40532c75c94749e12343ef5554d4d7e1 9f7191151831b0c7a61c1b34f023b65864008090 Sven Pöche <sven.poeche@mayflower.de> 1749569925 +0200	commit (amend): feat: add early JIRA_API_TOKEN validation
-9f7191151831b0c7a61c1b34f023b65864008090 c0682810153a08a0b4e9216e8f0beaf03c97be86 Sven Pöche <sven.poeche@mayflower.de> 1749571960 +0200	commit: ci: switch to ncipollo/release-action for GitHub releases
-c0682810153a08a0b4e9216e8f0beaf03c97be86 d925412a2db589ec4bf790dc529500dbf4919733 Valgard Trontheim <github@trontheim.de> 1749577977 +0200	commit: refactor: migrate Homebrew formula to separate repository
-d925412a2db589ec4bf790dc529500dbf4919733 aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 Valgard Trontheim <github@trontheim.de> 1749583122 +0200	reset: moving to HEAD~17
-aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 9a4d476de05703f14ba3c997732dd761317ea02c Valgard Trontheim <github@trontheim.de> 1749584203 +0200	commit (amend): initial commit
-9a4d476de05703f14ba3c997732dd761317ea02c 50dc7c1325e9ae45b3c63100b9a254a9ece7a375 Valgard Trontheim <github@trontheim.de> 1749585495 +0200	commit (amend): initial commit
-50dc7c1325e9ae45b3c63100b9a254a9ece7a375 50dc7c1325e9ae45b3c63100b9a254a9ece7a375 Valgard Trontheim <github@trontheim.de> 1749588339 +0200	reset: moving to HEAD
-50dc7c1325e9ae45b3c63100b9a254a9ece7a375 50dc7c1325e9ae45b3c63100b9a254a9ece7a375 Valgard Trontheim <github@trontheim.de> 1749589501 +0200	reset: moving to HEAD
-50dc7c1325e9ae45b3c63100b9a254a9ece7a375 223dbbabbfe294ad507ce9a5a98f54d56df263e0 Valgard Trontheim <github@trontheim.de> 1749589535 +0200	commit (amend): initial commit
-223dbbabbfe294ad507ce9a5a98f54d56df263e0 223dbbabbfe294ad507ce9a5a98f54d56df263e0 Valgard Trontheim <github@trontheim.de> 1749589585 +0200	reset: moving to HEAD
-223dbbabbfe294ad507ce9a5a98f54d56df263e0 60cda917426688ad151cd02fa4de7ac9a7c23984 Valgard Trontheim <github@trontheim.de> 1749589608 +0200	commit (amend): initial commit
-60cda917426688ad151cd02fa4de7ac9a7c23984 3ab3962c3ef4800766474b12729d684f38d5fa55 Valgard Trontheim <github@trontheim.de> 1749590375 +0200	commit: feat: add comprehensive test infrastructure
-3ab3962c3ef4800766474b12729d684f38d5fa55 3ab3962c3ef4800766474b12729d684f38d5fa55 Valgard Trontheim <github@trontheim.de> 1749727144 +0200	reset: moving to HEAD
diff --git a/path/to/project-a/.git/logs/refs/heads/main b/path/to/project-a/.git/logs/refs/heads/main
deleted file mode 100644
index d6fef04..0000000
--- a/path/to/project-a/.git/logs/refs/heads/main
+++ /dev/null
@@ -1,51 +0,0 @@
-0000000000000000000000000000000000000000 aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 Sven Pöche <sven.poeche@mayflower.de> 1749146001 +0200	commit (initial): initial commit
-aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 ec2250f50c400b36211a21a29c0365612cd6ae33 Sven Pöche <sven.poeche@mayflower.de> 1749151940 +0200	commit: feat: add comprehensive test suite with Vitest
-ec2250f50c400b36211a21a29c0365612cd6ae33 5324cbfb0a0a65bb2bbed8e8474158deee6384d6 Sven Pöche <sven.poeche@mayflower.de> 1749152161 +0200	commit (amend): feat: add comprehensive test suite with Vitest
-5324cbfb0a0a65bb2bbed8e8474158deee6384d6 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 Sven Pöche <sven.poeche@mayflower.de> 1749164399 +0200	commit: test: refactor config management tests to use local CLI instances
-10e7dd4a74114853b19aa5abe3a1da3bd7b71f08 0ea2408c62d34560ef37f09f74efcf26933da955 Sven Pöche <sven.poeche@mayflower.de> 1749164525 +0200	commit: build: add cross-platform binary generation with esbuild and pkg
-0ea2408c62d34560ef37f09f74efcf26933da955 c8b880d6ca8c71a60224566d207f6bf33d2044ec Sven Pöche <sven.poeche@mayflower.de> 1749204608 +0200	commit: feat: add date format conversion and improve output formatting
-c8b880d6ca8c71a60224566d207f6bf33d2044ec a6da8397b00ec5bd312f98f864b7439c45ae5c37 Sven Pöche <sven.poeche@mayflower.de> 1749212605 +0200	commit (amend): feat: add date format conversion and improve output formatting
-a6da8397b00ec5bd312f98f864b7439c45ae5c37 b6f4b3d5c37b85ccc59236830ccfcf550e06dc1e Sven Pöche <sven.poeche@mayflower.de> 1749212610 +0200	commit (amend): feat: add date format conversion and improve output formatting
-b6f4b3d5c37b85ccc59236830ccfcf550e06dc1e 78b09daa5d10640199cba768dd7d01b4fcd439d7 Sven Pöche <sven.poeche@mayflower.de> 1749216799 +0200	commit (amend): feat: add date format conversion and improve output formatting
-78b09daa5d10640199cba768dd7d01b4fcd439d7 276724b7d105cd7e15a29b74eb0d9154dd613caf Sven Pöche <sven.poeche@mayflower.de> 1749217171 +0200	commit: test: verbessere Environment-Variable-Isolation in Test-Setup
-276724b7d105cd7e15a29b74eb0d9154dd613caf 7d9990725c89bd32bf865083a4289bad33f841e1 Sven Pöche <sven.poeche@mayflower.de> 1749217982 +0200	commit: refactor: Hauptdatei von jira_timesheet_cli.js zu timesheet.js umbenannt
-7d9990725c89bd32bf865083a4289bad33f841e1 7e7d481c353ad68e68ccc65cbfd9fbcb47c882e8 Sven Pöche <sven.poeche@mayflower.de> 1749218572 +0200	commit: refactor: vereinfache CLI-Befehlsnamen von jira-timesheet zu timesheet
-7e7d481c353ad68e68ccc65cbfd9fbcb47c882e8 7d9990725c89bd32bf865083a4289bad33f841e1 Sven Pöche <sven.poeche@mayflower.de> 1749218757 +0200	reset: moving to 7d9990725c89bd32bf865083a4289bad33f841e1
-7d9990725c89bd32bf865083a4289bad33f841e1 276724b7d105cd7e15a29b74eb0d9154dd613caf Sven Pöche <sven.poeche@mayflower.de> 1749218779 +0200	reset: moving to 276724b7d105cd7e15a29b74eb0d9154dd613caf
-276724b7d105cd7e15a29b74eb0d9154dd613caf 92462389a632c08a3c786ce66313f4f0138c9f31 Sven Pöche <sven.poeche@mayflower.de> 1749219374 +0200	commit: refactor: umbenennung von jira-timesheet-cli zu timesheet
-92462389a632c08a3c786ce66313f4f0138c9f31 b94e052ea3590be327ed83be8af747c553b6b4ca Sven Pöche <sven.poeche@mayflower.de> 1749304465 +0200	commit: feat: add interactive init command with comprehensive API validation
-b94e052ea3590be327ed83be8af747c553b6b4ca 8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 Sven Pöche <sven.poeche@mayflower.de> 1749305755 +0200	commit: feat: add Homebrew support for macOS installation
-8877cf7a26b3da17cbdc6546ef5399c1f45c02b4 0ac8357052a5abd8e93d0c96922ef2dab395924f Sven Pöche <sven.poeche@mayflower.de> 1749325731 +0200	commit: feat: füge GitHub Actions für CI/CD hinzu
-0ac8357052a5abd8e93d0c96922ef2dab395924f 84a4be0f18abc9546f519c060f17e76da66078d9 Sven Pöche <sven.poeche@mayflower.de> 1749327918 +0200	commit: chore: aktualisiere auf Node.js 22 und entferne node-fetch
-84a4be0f18abc9546f519c060f17e76da66078d9 0ac8357052a5abd8e93d0c96922ef2dab395924f Sven Pöche <sven.poeche@mayflower.de> 1749329249 +0200	reset: moving to 0ac8357052a5abd8e93d0c96922ef2dab395924f
-0ac8357052a5abd8e93d0c96922ef2dab395924f f27809fb83994a75a69d72984b42b540d3b853b2 Sven Pöche <sven.poeche@mayflower.de> 1749338143 +0200	commit: refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-f27809fb83994a75a69d72984b42b540d3b853b2 c9c81e6ae718dedadc0eb53b04b43f30b4b9f6a4 Sven Pöche <sven.poeche@mayflower.de> 1749395447 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-c9c81e6ae718dedadc0eb53b04b43f30b4b9f6a4 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467242 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-29e5f72608766e9efeadb688906d32c8d6947e04 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467299 +0200	Branch: renamed refs/heads/main to refs/heads/main
-29e5f72608766e9efeadb688906d32c8d6947e04 b833b058e491f7f32cf56d9ff72a8599e4726126 Sven Pöche <sven.poeche@mayflower.de> 1749467539 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-b833b058e491f7f32cf56d9ff72a8599e4726126 0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 Sven Pöche <sven.poeche@mayflower.de> 1749468012 +0200	commit (amend): refactor: vereinfache Build-Prozess und entferne TypeScript-Abhängigkeiten
-0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 b66cd775731f828ec8175f0fd64caa9cf017a22f Sven Pöche <sven.poeche@mayflower.de> 1749469913 +0200	commit: feat: configure timezone via config file
-b66cd775731f828ec8175f0fd64caa9cf017a22f 5c70f075123d575d55a8870473098bd0e3e8f511 Sven Pöche <sven.poeche@mayflower.de> 1749470438 +0200	commit: chore: add contribution guidelines, deployment docs and pkg config
-5c70f075123d575d55a8870473098bd0e3e8f511 b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 Sven Pöche <sven.poeche@mayflower.de> 1749477326 +0200	commit: ci: enhance release workflow with cross-platform binary tests and checksums
-b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 42f2379299290271df081475dcadd4ca436d3edb Sven Pöche <sven.poeche@mayflower.de> 1749477538 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-42f2379299290271df081475dcadd4ca436d3edb e2f43f006742b3b5517e6acb1bb12e612cfbd23c Sven Pöche <sven.poeche@mayflower.de> 1749478974 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-e2f43f006742b3b5517e6acb1bb12e612cfbd23c e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb Sven Pöche <sven.poeche@mayflower.de> 1749482109 +0200	rebase (finish): refs/heads/main onto b94e052ea3590be327ed83be8af747c553b6b4ca
-e847a0c3d6e4e0e76f62717ec4ae4cca3bc96ddb 199448f2fb790f99f7fb513459fa42185d737c13 Sven Pöche <sven.poeche@mayflower.de> 1749482674 +0200	rebase (finish): refs/heads/main onto e593a40b98ebb8761ede815da31a254f4c21adfb
-199448f2fb790f99f7fb513459fa42185d737c13 9372b6358bce27925cb30988649e63fdb48f97c0 Sven Pöche <sven.poeche@mayflower.de> 1749482720 +0200	rebase (finish): refs/heads/main onto e593a40b98ebb8761ede815da31a254f4c21adfb
-9372b6358bce27925cb30988649e63fdb48f97c0 9b53f9698d8c8e67f0cdb842ff02804a343fb97b Sven Pöche <sven.poeche@mayflower.de> 1749483308 +0200	rebase (finish): refs/heads/main onto b94e052ea3590be327ed83be8af747c553b6b4ca
-9b53f9698d8c8e67f0cdb842ff02804a343fb97b c6204d15fe40f7fd5fc46076861cb8039918ffa0 Sven Pöche <sven.poeche@mayflower.de> 1749483505 +0200	rebase (finish): refs/heads/main onto b94e052ea3590be327ed83be8af747c553b6b4ca
-c6204d15fe40f7fd5fc46076861cb8039918ffa0 d19f5257812aafde87130c3d36cb93a1420d5317 Sven Pöche <sven.poeche@mayflower.de> 1749483839 +0200	rebase (finish): refs/heads/main onto 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08
-d19f5257812aafde87130c3d36cb93a1420d5317 b183f01f84e226562a5e1c35e34daf802d3f516c Sven Pöche <sven.poeche@mayflower.de> 1749483983 +0200	rebase (finish): refs/heads/main onto 10e7dd4a74114853b19aa5abe3a1da3bd7b71f08
-b183f01f84e226562a5e1c35e34daf802d3f516c 290adeff3f2e0f447a57d607634a13ee08ede4aa Sven Pöche <sven.poeche@mayflower.de> 1749484962 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-290adeff3f2e0f447a57d607634a13ee08ede4aa b7468cebcde0fb2218ecc4a0692493f42608077c Sven Pöche <sven.poeche@mayflower.de> 1749485425 +0200	commit (amend): ci: enhance release workflow with cross-platform binary tests and checksums
-b7468cebcde0fb2218ecc4a0692493f42608077c d9ef7f37d000fe762700c5c45790e0fa29da4525 Sven Pöche <sven.poeche@mayflower.de> 1749485793 +0200	commit: chore: update SHA256 sums in Brew formula
-d9ef7f37d000fe762700c5c45790e0fa29da4525 f3bdc2ef40532c75c94749e12343ef5554d4d7e1 Sven Pöche <sven.poeche@mayflower.de> 1749569318 +0200	commit: feat: add early JIRA_API_TOKEN validation
-f3bdc2ef40532c75c94749e12343ef5554d4d7e1 9f7191151831b0c7a61c1b34f023b65864008090 Sven Pöche <sven.poeche@mayflower.de> 1749569925 +0200	commit (amend): feat: add early JIRA_API_TOKEN validation
-9f7191151831b0c7a61c1b34f023b65864008090 c0682810153a08a0b4e9216e8f0beaf03c97be86 Sven Pöche <sven.poeche@mayflower.de> 1749571960 +0200	commit: ci: switch to ncipollo/release-action for GitHub releases
-c0682810153a08a0b4e9216e8f0beaf03c97be86 d925412a2db589ec4bf790dc529500dbf4919733 Valgard Trontheim <github@trontheim.de> 1749577977 +0200	commit: refactor: migrate Homebrew formula to separate repository
-d925412a2db589ec4bf790dc529500dbf4919733 aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 Valgard Trontheim <github@trontheim.de> 1749583122 +0200	reset: moving to HEAD~17
-aeb0eaa7922aef6f0db1dc4f8e367e1c434c0583 9a4d476de05703f14ba3c997732dd761317ea02c Valgard Trontheim <github@trontheim.de> 1749584203 +0200	commit (amend): initial commit
-9a4d476de05703f14ba3c997732dd761317ea02c 50dc7c1325e9ae45b3c63100b9a254a9ece7a375 Valgard Trontheim <github@trontheim.de> 1749585495 +0200	commit (amend): initial commit
-50dc7c1325e9ae45b3c63100b9a254a9ece7a375 223dbbabbfe294ad507ce9a5a98f54d56df263e0 Valgard Trontheim <github@trontheim.de> 1749589535 +0200	commit (amend): initial commit
-223dbbabbfe294ad507ce9a5a98f54d56df263e0 60cda917426688ad151cd02fa4de7ac9a7c23984 Valgard Trontheim <github@trontheim.de> 1749589608 +0200	commit (amend): initial commit
-60cda917426688ad151cd02fa4de7ac9a7c23984 3ab3962c3ef4800766474b12729d684f38d5fa55 Valgard Trontheim <github@trontheim.de> 1749590375 +0200	commit: feat: add comprehensive test infrastructure
diff --git a/path/to/project-a/.git/logs/refs/remotes/origin/HEAD b/path/to/project-a/.git/logs/refs/remotes/origin/HEAD
deleted file mode 100644
index e43dca0..0000000
--- a/path/to/project-a/.git/logs/refs/remotes/origin/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-0000000000000000000000000000000000000000 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467398 +0200	fetch
diff --git a/path/to/project-a/.git/logs/refs/remotes/origin/main b/path/to/project-a/.git/logs/refs/remotes/origin/main
deleted file mode 100644
index 5843f15..0000000
--- a/path/to/project-a/.git/logs/refs/remotes/origin/main
+++ /dev/null
@@ -1,12 +0,0 @@
-0000000000000000000000000000000000000000 29e5f72608766e9efeadb688906d32c8d6947e04 Sven Pöche <sven.poeche@mayflower.de> 1749467308 +0200	update by push
-29e5f72608766e9efeadb688906d32c8d6947e04 b833b058e491f7f32cf56d9ff72a8599e4726126 Sven Pöche <sven.poeche@mayflower.de> 1749467586 +0200	update by push
-b833b058e491f7f32cf56d9ff72a8599e4726126 0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 Sven Pöche <sven.poeche@mayflower.de> 1749468021 +0200	update by push
-0eeaec8cb164aa1d23d4975dc3271fdee22b8a36 b66cd775731f828ec8175f0fd64caa9cf017a22f Sven Pöche <sven.poeche@mayflower.de> 1749469938 +0200	update by push
-b66cd775731f828ec8175f0fd64caa9cf017a22f 5c70f075123d575d55a8870473098bd0e3e8f511 Sven Pöche <sven.poeche@mayflower.de> 1749470476 +0200	update by push
-5c70f075123d575d55a8870473098bd0e3e8f511 b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 Sven Pöche <sven.poeche@mayflower.de> 1749477351 +0200	update by push
-b8feab70e3d1d2ec11f4b72d31420b4c295dfdd7 e2f43f006742b3b5517e6acb1bb12e612cfbd23c Sven Pöche <sven.poeche@mayflower.de> 1749478980 +0200	update by push
-e2f43f006742b3b5517e6acb1bb12e612cfbd23c 290adeff3f2e0f447a57d607634a13ee08ede4aa Sven Pöche <sven.poeche@mayflower.de> 1749485003 +0200	update by push
-290adeff3f2e0f447a57d607634a13ee08ede4aa b7468cebcde0fb2218ecc4a0692493f42608077c Sven Pöche <sven.poeche@mayflower.de> 1749485432 +0200	update by push
-b7468cebcde0fb2218ecc4a0692493f42608077c f3bdc2ef40532c75c94749e12343ef5554d4d7e1 Sven Pöche <sven.poeche@mayflower.de> 1749569350 +0200	update by push
-f3bdc2ef40532c75c94749e12343ef5554d4d7e1 9f7191151831b0c7a61c1b34f023b65864008090 Sven Pöche <sven.poeche@mayflower.de> 1749569956 +0200	update by push
-9f7191151831b0c7a61c1b34f023b65864008090 c0682810153a08a0b4e9216e8f0beaf03c97be86 Sven Pöche <sven.poeche@mayflower.de> 1749571971 +0200	update by push
diff --git a/path/to/project-a/.git/logs/refs/stash b/path/to/project-a/.git/logs/refs/stash
deleted file mode 100644
index a1d4369..0000000
--- a/path/to/project-a/.git/logs/refs/stash
+++ /dev/null
@@ -1,2 +0,0 @@
-0000000000000000000000000000000000000000 6c40149e8afc115e77ef93eff1fa4f094669d0a1 Valgard Trontheim <github@trontheim.de> 1749588339 +0200	WIP on main: 50dc7c1 initial commit
-6c40149e8afc115e77ef93eff1fa4f094669d0a1 efa8e1c6365a70bfd750399c7b5c0f34a17d966c Valgard Trontheim <github@trontheim.de> 1749727144 +0200	WIP on main: 3ab3962 feat: add comprehensive test infrastructure
diff --git a/path/to/project-a/.git/objects/03/00c4ac97c9a176273c6b6b0e36c3a28fd84902 b/path/to/project-a/.git/objects/03/00c4ac97c9a176273c6b6b0e36c3a28fd84902
deleted file mode 100644
index 50dba26..0000000
--- a/path/to/project-a/.git/objects/03/00c4ac97c9a176273c6b6b0e36c3a28fd84902
+++ /dev/null
@@ -1,3 +0,0 @@
-x�A
-�0@Q�9��0I�I
-"A��tZkJ
�^�x1���/��5����R Y��C��Da�}k�uY�C`U�Y��4݊*����9��U�p�~�*pxU�9K�i��߲�^�`���h��SB+q
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/03/202b372cfc9e05ee20b1c504dfb1fdcfc42b0f b/path/to/project-a/.git/objects/03/202b372cfc9e05ee20b1c504dfb1fdcfc42b0f
deleted file mode 100644
index 40d279e..0000000
Binary files a/path/to/project-a/.git/objects/03/202b372cfc9e05ee20b1c504dfb1fdcfc42b0f and /dev/null differ
diff --git a/path/to/project-a/.git/objects/04/a38941912aa6e401c938904811cd80e56abcee b/path/to/project-a/.git/objects/04/a38941912aa6e401c938904811cd80e56abcee
deleted file mode 100644
index fc50be1..0000000
Binary files a/path/to/project-a/.git/objects/04/a38941912aa6e401c938904811cd80e56abcee and /dev/null differ
diff --git a/path/to/project-a/.git/objects/08/a2defb3449909368783250ccf3a6f507293d5d b/path/to/project-a/.git/objects/08/a2defb3449909368783250ccf3a6f507293d5d
deleted file mode 100644
index 0e6c66d..0000000
Binary files a/path/to/project-a/.git/objects/08/a2defb3449909368783250ccf3a6f507293d5d and /dev/null differ
diff --git a/path/to/project-a/.git/objects/09/0677ab9d497a06d2d971abb97984df1cf0a4bc b/path/to/project-a/.git/objects/09/0677ab9d497a06d2d971abb97984df1cf0a4bc
deleted file mode 100644
index d16467c..0000000
Binary files a/path/to/project-a/.git/objects/09/0677ab9d497a06d2d971abb97984df1cf0a4bc and /dev/null differ
diff --git a/path/to/project-a/.git/objects/0d/bfc31ce39f4d86016aa6c931001ed141f38b9f b/path/to/project-a/.git/objects/0d/bfc31ce39f4d86016aa6c931001ed141f38b9f
deleted file mode 100644
index 34346b8..0000000
Binary files a/path/to/project-a/.git/objects/0d/bfc31ce39f4d86016aa6c931001ed141f38b9f and /dev/null differ
diff --git a/path/to/project-a/.git/objects/0e/15ccee1dea0916d78e19b9aa0c07a12e8c6326 b/path/to/project-a/.git/objects/0e/15ccee1dea0916d78e19b9aa0c07a12e8c6326
deleted file mode 100644
index b5fe3ac..0000000
Binary files a/path/to/project-a/.git/objects/0e/15ccee1dea0916d78e19b9aa0c07a12e8c6326 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/0e/9cc18aae7ee7db6de36f5455ddf01879666598 b/path/to/project-a/.git/objects/0e/9cc18aae7ee7db6de36f5455ddf01879666598
deleted file mode 100644
index 41f9bae..0000000
Binary files a/path/to/project-a/.git/objects/0e/9cc18aae7ee7db6de36f5455ddf01879666598 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/0f/578b9d4bbb45e687199a2d71ff8f12bae382db b/path/to/project-a/.git/objects/0f/578b9d4bbb45e687199a2d71ff8f12bae382db
deleted file mode 100644
index c0a4d79..0000000
--- a/path/to/project-a/.git/objects/0f/578b9d4bbb45e687199a2d71ff8f12bae382db
+++ /dev/null
@@ -1 +0,0 @@
-x
��
!@a�T1w�ό��K0�ԈlV�f�������ҮM���R4�Q�5�Q��г6-g"ɱ}�b���E�UK%G��ו_p�}����s�s
[~�/2�	�x��[4�WF)!�:p+F
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/1a/80f5fb43b4aac8934da0d37d2993fa63f3767e b/path/to/project-a/.git/objects/1a/80f5fb43b4aac8934da0d37d2993fa63f3767e
deleted file mode 100644
index d90dd7e..0000000
--- a/path/to/project-a/.git/objects/1a/80f5fb43b4aac8934da0d37d2993fa63f3767e
+++ /dev/null
@@ -1,3 +0,0 @@
-x��Kj1��)zo��Ȅ�C��[R�#�h�h��o��j������Lp2�!��6��uH��`K��bn��k����F����Zb��xN��g[�Ո9���d�Wt�u��C��
-�Y�o�u���I��g�o��%�,�&8�AT�7T�
-�G��6���n�>�t��߅zl�U�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/1d/468bd40cecdcc864cec634da9931ea079d696b b/path/to/project-a/.git/objects/1d/468bd40cecdcc864cec634da9931ea079d696b
deleted file mode 100644
index 9b257d4..0000000
Binary files a/path/to/project-a/.git/objects/1d/468bd40cecdcc864cec634da9931ea079d696b and /dev/null differ
diff --git a/path/to/project-a/.git/objects/20/b2f30b070374e5056b4234b0c1fdf9136d1524 b/path/to/project-a/.git/objects/20/b2f30b070374e5056b4234b0c1fdf9136d1524
deleted file mode 100644
index effd475..0000000
Binary files a/path/to/project-a/.git/objects/20/b2f30b070374e5056b4234b0c1fdf9136d1524 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/22/3dbbabbfe294ad507ce9a5a98f54d56df263e0 b/path/to/project-a/.git/objects/22/3dbbabbfe294ad507ce9a5a98f54d56df263e0
deleted file mode 100644
index fbe3f23..0000000
--- a/path/to/project-a/.git/objects/22/3dbbabbfe294ad507ce9a5a98f54d56df263e0
+++ /dev/null
@@ -1,2 +0,0 @@
-x=�K
-�0Ego.��6IS(�%���@�HL7�ܘ��ɹ�sl�g��\�D���JY����V��/�*l�@�U�L9�̜��`w�	�χ���9�]0�~�7J��
`-�s�5/9g��͔�`ƓI�)Ny �=�<��.���B�FV�`~�ٛ>.��M?|
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/23/02f9261dbe23d5c088103da11f326f12884d10 b/path/to/project-a/.git/objects/23/02f9261dbe23d5c088103da11f326f12884d10
deleted file mode 100644
index bd7d646..0000000
Binary files a/path/to/project-a/.git/objects/23/02f9261dbe23d5c088103da11f326f12884d10 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/26/cd1729cb53c827aa1ea1b35af0e91a0c4e1c58 b/path/to/project-a/.git/objects/26/cd1729cb53c827aa1ea1b35af0e91a0c4e1c58
deleted file mode 100644
index 8b675b4..0000000
Binary files a/path/to/project-a/.git/objects/26/cd1729cb53c827aa1ea1b35af0e91a0c4e1c58 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/2a/e3944c2da7ccca2c2a19ab44746ecb02e98aa1 b/path/to/project-a/.git/objects/2a/e3944c2da7ccca2c2a19ab44746ecb02e98aa1
deleted file mode 100644
index 30d1194..0000000
Binary files a/path/to/project-a/.git/objects/2a/e3944c2da7ccca2c2a19ab44746ecb02e98aa1 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/2f/7bbbff5b673ca211bb75f2bb0e735da6fec70b b/path/to/project-a/.git/objects/2f/7bbbff5b673ca211bb75f2bb0e735da6fec70b
deleted file mode 100644
index 41fc415..0000000
Binary files a/path/to/project-a/.git/objects/2f/7bbbff5b673ca211bb75f2bb0e735da6fec70b and /dev/null differ
diff --git a/path/to/project-a/.git/objects/2f/e64d69c09cadf23ba5db5675749f05ca1c6435 b/path/to/project-a/.git/objects/2f/e64d69c09cadf23ba5db5675749f05ca1c6435
deleted file mode 100644
index 58ab448..0000000
Binary files a/path/to/project-a/.git/objects/2f/e64d69c09cadf23ba5db5675749f05ca1c6435 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/30/448724ca1651ba2804462c089207fc23214623 b/path/to/project-a/.git/objects/30/448724ca1651ba2804462c089207fc23214623
deleted file mode 100644
index 7026dc6..0000000
Binary files a/path/to/project-a/.git/objects/30/448724ca1651ba2804462c089207fc23214623 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/32/90f07def74024a164f58532acfe58497d16f71 b/path/to/project-a/.git/objects/32/90f07def74024a164f58532acfe58497d16f71
deleted file mode 100644
index 7c1d62a..0000000
Binary files a/path/to/project-a/.git/objects/32/90f07def74024a164f58532acfe58497d16f71 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/3a/b3962c3ef4800766474b12729d684f38d5fa55 b/path/to/project-a/.git/objects/3a/b3962c3ef4800766474b12729d684f38d5fa55
deleted file mode 100644
index 7e5b2e8..0000000
Binary files a/path/to/project-a/.git/objects/3a/b3962c3ef4800766474b12729d684f38d5fa55 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/3c/5fa35fcd178a839356ecf49f5a12bac9f83547 b/path/to/project-a/.git/objects/3c/5fa35fcd178a839356ecf49f5a12bac9f83547
deleted file mode 100644
index ea8d8b3..0000000
Binary files a/path/to/project-a/.git/objects/3c/5fa35fcd178a839356ecf49f5a12bac9f83547 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/3d/eca563a0c064544b462e955a8e738bd7fcbd10 b/path/to/project-a/.git/objects/3d/eca563a0c064544b462e955a8e738bd7fcbd10
deleted file mode 100644
index d97be2e..0000000
Binary files a/path/to/project-a/.git/objects/3d/eca563a0c064544b462e955a8e738bd7fcbd10 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/3f/9c182cdd71c5c04dd61e9a623f69266421a350 b/path/to/project-a/.git/objects/3f/9c182cdd71c5c04dd61e9a623f69266421a350
deleted file mode 100644
index 95f8fe4..0000000
Binary files a/path/to/project-a/.git/objects/3f/9c182cdd71c5c04dd61e9a623f69266421a350 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/41/764dece0fd6294df0df2a6c42bf943e035cede b/path/to/project-a/.git/objects/41/764dece0fd6294df0df2a6c42bf943e035cede
deleted file mode 100644
index c317218..0000000
Binary files a/path/to/project-a/.git/objects/41/764dece0fd6294df0df2a6c42bf943e035cede and /dev/null differ
diff --git a/path/to/project-a/.git/objects/45/6a110f12a143a9fc8e9e1c1c8a2cb10ad39976 b/path/to/project-a/.git/objects/45/6a110f12a143a9fc8e9e1c1c8a2cb10ad39976
deleted file mode 100644
index 5d55fa7..0000000
Binary files a/path/to/project-a/.git/objects/45/6a110f12a143a9fc8e9e1c1c8a2cb10ad39976 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/46/dce65b5d2e172e8bdd8a22be0c8f36f63b6547 b/path/to/project-a/.git/objects/46/dce65b5d2e172e8bdd8a22be0c8f36f63b6547
deleted file mode 100644
index 3353927..0000000
Binary files a/path/to/project-a/.git/objects/46/dce65b5d2e172e8bdd8a22be0c8f36f63b6547 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/4a/553531db933d5149dd0082a8f41a5c92c06cc5 b/path/to/project-a/.git/objects/4a/553531db933d5149dd0082a8f41a5c92c06cc5
deleted file mode 100644
index 99999e1..0000000
Binary files a/path/to/project-a/.git/objects/4a/553531db933d5149dd0082a8f41a5c92c06cc5 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/4a/780b659abe18e3cb741085dd9a90680204d75b b/path/to/project-a/.git/objects/4a/780b659abe18e3cb741085dd9a90680204d75b
deleted file mode 100644
index 1fd250d..0000000
Binary files a/path/to/project-a/.git/objects/4a/780b659abe18e3cb741085dd9a90680204d75b and /dev/null differ
diff --git a/path/to/project-a/.git/objects/4b/568827989a8200f98c390d3a291e25aa0bd7a9 b/path/to/project-a/.git/objects/4b/568827989a8200f98c390d3a291e25aa0bd7a9
deleted file mode 100644
index f05a303..0000000
Binary files a/path/to/project-a/.git/objects/4b/568827989a8200f98c390d3a291e25aa0bd7a9 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/50/dc7c1325e9ae45b3c63100b9a254a9ece7a375 b/path/to/project-a/.git/objects/50/dc7c1325e9ae45b3c63100b9a254a9ece7a375
deleted file mode 100644
index 1de7f70..0000000
Binary files a/path/to/project-a/.git/objects/50/dc7c1325e9ae45b3c63100b9a254a9ece7a375 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/60/cda917426688ad151cd02fa4de7ac9a7c23984 b/path/to/project-a/.git/objects/60/cda917426688ad151cd02fa4de7ac9a7c23984
deleted file mode 100644
index 9721a11..0000000
--- a/path/to/project-a/.git/objects/60/cda917426688ad151cd02fa4de7ac9a7c23984
+++ /dev/null
@@ -1 +0,0 @@
-x=�K�0�aǬ��M�-��$İ��>.���E��܀���g���'`u�I�JGVYj�(���pYP-�VT�ʸ���1�����p��χ���9�����nsG;`����X f���(�I����1�i ?A��4,�M��OUKT_"�O^����@�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/62/6448363a36ca12d25113290dff468df7045d76 b/path/to/project-a/.git/objects/62/6448363a36ca12d25113290dff468df7045d76
deleted file mode 100644
index c4c2d78..0000000
Binary files a/path/to/project-a/.git/objects/62/6448363a36ca12d25113290dff468df7045d76 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/68/2b5e7d3b88b3dd19712c010e2e21b372c0acee b/path/to/project-a/.git/objects/68/2b5e7d3b88b3dd19712c010e2e21b372c0acee
deleted file mode 100644
index 7294f2e..0000000
--- a/path/to/project-a/.git/objects/68/2b5e7d3b88b3dd19712c010e2e21b372c0acee
+++ /dev/null
@@ -1,3 +0,0 @@
-x5N�
-�0�y�"�����B��Uz��l}�b���z�a�n�R.���.2(k=s֑�Z�@(��(��Q94�S�
�d��!-�.���K3E넦��
-�1�@����~�]9_T�D��W>�Mţۍ�j~%YT>�Qaa/[*��3��kK=��r�ǋJ7����Вn��j�Na
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/68/6e6bc1bc33ec54f7247e941a204da5d5429a72 b/path/to/project-a/.git/objects/68/6e6bc1bc33ec54f7247e941a204da5d5429a72
deleted file mode 100644
index f358a9b..0000000
Binary files a/path/to/project-a/.git/objects/68/6e6bc1bc33ec54f7247e941a204da5d5429a72 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/6c/40149e8afc115e77ef93eff1fa4f094669d0a1 b/path/to/project-a/.git/objects/6c/40149e8afc115e77ef93eff1fa4f094669d0a1
deleted file mode 100644
index 8e522b7..0000000
--- a/path/to/project-a/.git/objects/6c/40149e8afc115e77ef93eff1fa4f094669d0a1
+++ /dev/null
@@ -1,2 +0,0 @@
-x���J1F��)�$�L~FDl�,D�I2{7p7+!��e�����N9��M@�ws�BHAC.6D-���(*�g����Kt˗���%��+���XZc2��$�E�`���J2�_3a&����b��W	�bQ����!׋�
-���sӶ�ӥ��_�<T}�}J�����߰��@,��optإ�ǳZo����7a�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/6f/92c077a6bf5c528e499cc194f74718730f07d4 b/path/to/project-a/.git/objects/6f/92c077a6bf5c528e499cc194f74718730f07d4
deleted file mode 100644
index 39e74bb..0000000
Binary files a/path/to/project-a/.git/objects/6f/92c077a6bf5c528e499cc194f74718730f07d4 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/70/24127c2390a139761e7c12fda11c0601a82cc3 b/path/to/project-a/.git/objects/70/24127c2390a139761e7c12fda11c0601a82cc3
deleted file mode 100644
index 8376432..0000000
--- a/path/to/project-a/.git/objects/70/24127c2390a139761e7c12fda11c0601a82cc3
+++ /dev/null
@@ -1,3 +0,0 @@
-x��A
-�0E]��$��Ԉ����̤
�TB
-ߢ��_}���8OSn`�ݵ*&���|�>'�B�z�O#���U)��t���xK����	ɟZF�2\'Z��ƹ�U�{�K%Opr�pk[s`��q��i
�^�U�m�B����D����Kn���S�rV�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/70/35765019be14e40ee3bc0b9a217a34b25729f0 b/path/to/project-a/.git/objects/70/35765019be14e40ee3bc0b9a217a34b25729f0
deleted file mode 100644
index f9b5e95..0000000
Binary files a/path/to/project-a/.git/objects/70/35765019be14e40ee3bc0b9a217a34b25729f0 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/71/734d0d9711980a80be297e1f7d8e936d83ebf4 b/path/to/project-a/.git/objects/71/734d0d9711980a80be297e1f7d8e936d83ebf4
deleted file mode 100644
index 3036d69..0000000
Binary files a/path/to/project-a/.git/objects/71/734d0d9711980a80be297e1f7d8e936d83ebf4 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/73/6d611b9d46cbcf425577e9f6217fa0c4119f79 b/path/to/project-a/.git/objects/73/6d611b9d46cbcf425577e9f6217fa0c4119f79
deleted file mode 100644
index 88eafc1..0000000
Binary files a/path/to/project-a/.git/objects/73/6d611b9d46cbcf425577e9f6217fa0c4119f79 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/73/850ec77cca71b741fded55da317cf934b09248 b/path/to/project-a/.git/objects/73/850ec77cca71b741fded55da317cf934b09248
deleted file mode 100644
index a6b47bd..0000000
Binary files a/path/to/project-a/.git/objects/73/850ec77cca71b741fded55da317cf934b09248 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/73/97c57fea8535d93b8736b6a3ee374dbc12c6a7 b/path/to/project-a/.git/objects/73/97c57fea8535d93b8736b6a3ee374dbc12c6a7
deleted file mode 100644
index 9b33093..0000000
Binary files a/path/to/project-a/.git/objects/73/97c57fea8535d93b8736b6a3ee374dbc12c6a7 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/75/acfd2a6505b77f632f486b81fd94e6303e3a4c b/path/to/project-a/.git/objects/75/acfd2a6505b77f632f486b81fd94e6303e3a4c
deleted file mode 100644
index d56a5be..0000000
--- a/path/to/project-a/.git/objects/75/acfd2a6505b77f632f486b81fd94e6303e3a4c
+++ /dev/null
@@ -1,2 +0,0 @@
-x�M
-�0@a�9��0��5 �O��IUlSj��b^��w�ۼ ev%>8U�ّ'2�+��\��(*��Sњ�j�=�����㽊�+I��ρ��<���I7�ëA΅Nc��y�W>9��P;�c�(���*
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/78/efeda2b6aedecbb10a6bc235a994d1959638c8 b/path/to/project-a/.git/objects/78/efeda2b6aedecbb10a6bc235a994d1959638c8
deleted file mode 100644
index 5a187ab..0000000
Binary files a/path/to/project-a/.git/objects/78/efeda2b6aedecbb10a6bc235a994d1959638c8 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/7d/87e40dfd0f7bd2ed57db169eeff32148cbf909 b/path/to/project-a/.git/objects/7d/87e40dfd0f7bd2ed57db169eeff32148cbf909
deleted file mode 100644
index d27b1a9..0000000
Binary files a/path/to/project-a/.git/objects/7d/87e40dfd0f7bd2ed57db169eeff32148cbf909 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/80/18e36c175dc7866700f21c619841413f13f6da b/path/to/project-a/.git/objects/80/18e36c175dc7866700f21c619841413f13f6da
deleted file mode 100644
index e9bcc4c..0000000
Binary files a/path/to/project-a/.git/objects/80/18e36c175dc7866700f21c619841413f13f6da and /dev/null differ
diff --git a/path/to/project-a/.git/objects/82/8206d45b11aacf434c0a88c569965d6257fd81 b/path/to/project-a/.git/objects/82/8206d45b11aacf434c0a88c569965d6257fd81
deleted file mode 100644
index 6720cb8..0000000
Binary files a/path/to/project-a/.git/objects/82/8206d45b11aacf434c0a88c569965d6257fd81 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/84/76669af40d89e6902ede88845bc6a0e1080cb7 b/path/to/project-a/.git/objects/84/76669af40d89e6902ede88845bc6a0e1080cb7
deleted file mode 100644
index 4b1d84d..0000000
Binary files a/path/to/project-a/.git/objects/84/76669af40d89e6902ede88845bc6a0e1080cb7 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/89/5d813556f5b8bccde70999329ff60172d06df9 b/path/to/project-a/.git/objects/89/5d813556f5b8bccde70999329ff60172d06df9
deleted file mode 100644
index 5c802e4..0000000
Binary files a/path/to/project-a/.git/objects/89/5d813556f5b8bccde70999329ff60172d06df9 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/8b/81e54148e0564a4607fca2d4b6404c443a2ba3 b/path/to/project-a/.git/objects/8b/81e54148e0564a4607fca2d4b6404c443a2ba3
deleted file mode 100644
index 168b876..0000000
Binary files a/path/to/project-a/.git/objects/8b/81e54148e0564a4607fca2d4b6404c443a2ba3 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/91/c44a6c943cdf69bd1b8dd3c169f44049a9d217 b/path/to/project-a/.git/objects/91/c44a6c943cdf69bd1b8dd3c169f44049a9d217
deleted file mode 100644
index e73e8c3..0000000
Binary files a/path/to/project-a/.git/objects/91/c44a6c943cdf69bd1b8dd3c169f44049a9d217 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/93/359994de83f4625bd23d735551cc12ca223e02 b/path/to/project-a/.git/objects/93/359994de83f4625bd23d735551cc12ca223e02
deleted file mode 100644
index d004ddd..0000000
Binary files a/path/to/project-a/.git/objects/93/359994de83f4625bd23d735551cc12ca223e02 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/96/b03b43b45e169a0f20f96f2c28ef2de4f7e18e b/path/to/project-a/.git/objects/96/b03b43b45e169a0f20f96f2c28ef2de4f7e18e
deleted file mode 100644
index 48fdfa9..0000000
Binary files a/path/to/project-a/.git/objects/96/b03b43b45e169a0f20f96f2c28ef2de4f7e18e and /dev/null differ
diff --git a/path/to/project-a/.git/objects/97/1020eb42f9162c19751772b2979e857a3c85e2 b/path/to/project-a/.git/objects/97/1020eb42f9162c19751772b2979e857a3c85e2
deleted file mode 100644
index aeb2ac0..0000000
Binary files a/path/to/project-a/.git/objects/97/1020eb42f9162c19751772b2979e857a3c85e2 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/9a/4d476de05703f14ba3c997732dd761317ea02c b/path/to/project-a/.git/objects/9a/4d476de05703f14ba3c997732dd761317ea02c
deleted file mode 100644
index 62a0029..0000000
--- a/path/to/project-a/.git/objects/9a/4d476de05703f14ba3c997732dd761317ea02c
+++ /dev/null
@@ -1,2 +0,0 @@
-x=�K
-�0�a�Yŝ%���t	��<�7M�i$��sn��k���wl�1`��JF���k�+.�*��i������N!*E�\|ʰ�����z���DuN�D�ݍ醹�qLI��Rk�)%��[0�ь��=r����B��+��Oԍ�T|	�P��c��:@�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/9f/7191151831b0c7a61c1b34f023b65864008090 b/path/to/project-a/.git/objects/9f/7191151831b0c7a61c1b34f023b65864008090
deleted file mode 100644
index c8a3869..0000000
--- a/path/to/project-a/.git/objects/9f/7191151831b0c7a61c1b34f023b65864008090
+++ /dev/null
@@ -1,2 +0,0 @@
-x���N�0EY�+f�@��BT�E��F�=n�&vd;<~��ǘ�
-�e9�=�gl��e�� G"����Bjc�R7Z�ƴ%)lee[%۶�%V�(&��3E��Ug���VvB0W7�$,Je�ndS���a�J�>uOp�x8��p>���cCgPv�jZU�8R�B�xf�o��;����� ��\�����������-���f|Q�EOz9lY��l��Nz��o��^�8���I���n����%LBO��>�0n�p^�����Ü(���f)F��n���.%�`p��0�Dy������#���`��(z�-����M�
��j
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/a0/b71b045b94284f8d81713f8ace05fcabb2bbfa b/path/to/project-a/.git/objects/a0/b71b045b94284f8d81713f8ace05fcabb2bbfa
deleted file mode 100644
index 38573d5..0000000
Binary files a/path/to/project-a/.git/objects/a0/b71b045b94284f8d81713f8ace05fcabb2bbfa and /dev/null differ
diff --git a/path/to/project-a/.git/objects/a1/8c1166fc55001985faf19d86778044fa2dc466 b/path/to/project-a/.git/objects/a1/8c1166fc55001985faf19d86778044fa2dc466
deleted file mode 100644
index f1d0136..0000000
Binary files a/path/to/project-a/.git/objects/a1/8c1166fc55001985faf19d86778044fa2dc466 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/a5/83b95d5483bd14956dbb481b90cefe970942ee b/path/to/project-a/.git/objects/a5/83b95d5483bd14956dbb481b90cefe970942ee
deleted file mode 100644
index 9c6bf43..0000000
Binary files a/path/to/project-a/.git/objects/a5/83b95d5483bd14956dbb481b90cefe970942ee and /dev/null differ
diff --git a/path/to/project-a/.git/objects/a6/049abf2cebebcb252a2aacfe27b345457e7436 b/path/to/project-a/.git/objects/a6/049abf2cebebcb252a2aacfe27b345457e7436
deleted file mode 100644
index 8f964fc..0000000
--- a/path/to/project-a/.git/objects/a6/049abf2cebebcb252a2aacfe27b345457e7436
+++ /dev/null
@@ -1 +0,0 @@
-x}Q9O�0f<�ЈC��S�l����!>��TB���H�"�,��]���Љ�����J��$$[t`y��/@��g�m�M[Q�Gyd6�T�5�t��^��'^�<��m��i[�%����t�7=4TU)%W�_?I�H�֞(�H�Ew���J߄���MQ>hUo�pR����e���n�3��_��Բ�)��1$~�|̫��0v*C9�l?J탋D����:���?
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/a7/ecaaaed92b306e84987638ea18a0d963ae5965 b/path/to/project-a/.git/objects/a7/ecaaaed92b306e84987638ea18a0d963ae5965
deleted file mode 100644
index 81ee544..0000000
Binary files a/path/to/project-a/.git/objects/a7/ecaaaed92b306e84987638ea18a0d963ae5965 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/a8/235c889dc06a5bd5e04224f3a888ab11c921a8 b/path/to/project-a/.git/objects/a8/235c889dc06a5bd5e04224f3a888ab11c921a8
deleted file mode 100644
index 7d8deba..0000000
Binary files a/path/to/project-a/.git/objects/a8/235c889dc06a5bd5e04224f3a888ab11c921a8 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/ab/52a0bdadcba5d881f19d39457952bc41d83ee5 b/path/to/project-a/.git/objects/ab/52a0bdadcba5d881f19d39457952bc41d83ee5
deleted file mode 100644
index ea0f346..0000000
--- a/path/to/project-a/.git/objects/ab/52a0bdadcba5d881f19d39457952bc41d83ee5
+++ /dev/null
@@ -1,2 +0,0 @@
-x�M
-�0@a�9��0�4 �O��IUlSj��b^��w�ۼ�@��J|p���@d�k��\o)Q�]F��5�v������㽊�+I��ρ��<���I7�ëA΅Nc��gy�"�|r]0N)��G�(���*
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/b2/b75dba32b15b262f00a67828db1c6aef66eb55 b/path/to/project-a/.git/objects/b2/b75dba32b15b262f00a67828db1c6aef66eb55
deleted file mode 100644
index 4ce4851..0000000
Binary files a/path/to/project-a/.git/objects/b2/b75dba32b15b262f00a67828db1c6aef66eb55 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/b4/1618f3aab962afc49d53575cff96251f174c34 b/path/to/project-a/.git/objects/b4/1618f3aab962afc49d53575cff96251f174c34
deleted file mode 100644
index 78dcfe3..0000000
Binary files a/path/to/project-a/.git/objects/b4/1618f3aab962afc49d53575cff96251f174c34 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/b4/387f6245788801c12e493e2cef7e8ca92911c5 b/path/to/project-a/.git/objects/b4/387f6245788801c12e493e2cef7e8ca92911c5
deleted file mode 100644
index e33c3f2..0000000
Binary files a/path/to/project-a/.git/objects/b4/387f6245788801c12e493e2cef7e8ca92911c5 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/b4/8fbe76a802ce9c52b0c169594f26d5f768ba26 b/path/to/project-a/.git/objects/b4/8fbe76a802ce9c52b0c169594f26d5f768ba26
deleted file mode 100644
index 8dd29c6..0000000
--- a/path/to/project-a/.git/objects/b4/8fbe76a802ce9c52b0c169594f26d5f768ba26
+++ /dev/null
@@ -1,3 +0,0 @@
-x�R]K�0�y�"�����)���ѽ����wk�|�$���&i���@�9��snR]�����k@H����$+nX�[��<9����ZyJF�t����Ƶ��Ä8�d
-s@z1KFKr�ȧ6k���l9#/w�Sr�<��n�'RW�&���y/8Gwte#����N�Mӓ�{��c��V�:f�oU��O�v����?�3��;�
-m���m��KY��w���3���Gp�6���;{�C���@��
�{�Lc��T��p����X{������a�#u��lH�4�=j)*���,��
:le��"4���t����S$�Ԓ�C[���W�E�d�:��J�C
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/b4/ba900fb0cd753f50722a6eaf6ed660e3b31a0c b/path/to/project-a/.git/objects/b4/ba900fb0cd753f50722a6eaf6ed660e3b31a0c
deleted file mode 100644
index a48c441..0000000
--- a/path/to/project-a/.git/objects/b4/ba900fb0cd753f50722a6eaf6ed660e3b31a0c
+++ /dev/null
@@ -1,2 +0,0 @@
-x��AN�0EY��#�6N�f��@�ęF��(u�g�4'`�｟�mk
-6� ��=U�ţ/�BR`Ar%����dn<�+ '��f��i��4[����U\����S�}�']y�{�U��צ�����y��\$K�s�<�i2�/T��z��;l������z.�ېU�ѾT����CǙ�b~:_�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/b7/468cebcde0fb2218ecc4a0692493f42608077c b/path/to/project-a/.git/objects/b7/468cebcde0fb2218ecc4a0692493f42608077c
deleted file mode 100644
index eb3a9cb..0000000
Binary files a/path/to/project-a/.git/objects/b7/468cebcde0fb2218ecc4a0692493f42608077c and /dev/null differ
diff --git a/path/to/project-a/.git/objects/bb/d75d52e6c17a0fe3713ab2a0ffcabbaab37d51 b/path/to/project-a/.git/objects/bb/d75d52e6c17a0fe3713ab2a0ffcabbaab37d51
deleted file mode 100644
index e728661..0000000
Binary files a/path/to/project-a/.git/objects/bb/d75d52e6c17a0fe3713ab2a0ffcabbaab37d51 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/bf/61bfe4561b15a81db19f54fbd716d7b7cb1ecf b/path/to/project-a/.git/objects/bf/61bfe4561b15a81db19f54fbd716d7b7cb1ecf
deleted file mode 100644
index bf7133c..0000000
Binary files a/path/to/project-a/.git/objects/bf/61bfe4561b15a81db19f54fbd716d7b7cb1ecf and /dev/null differ
diff --git a/path/to/project-a/.git/objects/c0/682810153a08a0b4e9216e8f0beaf03c97be86 b/path/to/project-a/.git/objects/c0/682810153a08a0b4e9216e8f0beaf03c97be86
deleted file mode 100644
index 36be9a5..0000000
Binary files a/path/to/project-a/.git/objects/c0/682810153a08a0b4e9216e8f0beaf03c97be86 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/cd/30be51564419dcebe34ebc619481a6ad718c7e b/path/to/project-a/.git/objects/cd/30be51564419dcebe34ebc619481a6ad718c7e
deleted file mode 100644
index 9387aad..0000000
--- a/path/to/project-a/.git/objects/cd/30be51564419dcebe34ebc619481a6ad718c7e
+++ /dev/null
@@ -1,3 +0,0 @@
-x���J1D=�W�]�N'�L��<��;�d'���!���|�P��xU�ۺ����K�Ż�bTɕlΉ}��bEV1���[��ٜ��TE'�1h����.�?�<��
-J6��7%����E�FfR���ǲ��)���>�������m,��:N�)�0�<�1<"!N�{l� ���w�:����|
-����?h�b:
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/cf/6247594c1e1ab12ed9230bc717ca8576f88aa2 b/path/to/project-a/.git/objects/cf/6247594c1e1ab12ed9230bc717ca8576f88aa2
deleted file mode 100644
index 053d4e3..0000000
Binary files a/path/to/project-a/.git/objects/cf/6247594c1e1ab12ed9230bc717ca8576f88aa2 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/cf/8d286308cbb1fde28fcaeebac5d2f88b64c9ca b/path/to/project-a/.git/objects/cf/8d286308cbb1fde28fcaeebac5d2f88b64c9ca
deleted file mode 100644
index 7bc6f58..0000000
Binary files a/path/to/project-a/.git/objects/cf/8d286308cbb1fde28fcaeebac5d2f88b64c9ca and /dev/null differ
diff --git a/path/to/project-a/.git/objects/d0/f12f72a419c3910ee0901d785ab54bb55f43b1 b/path/to/project-a/.git/objects/d0/f12f72a419c3910ee0901d785ab54bb55f43b1
deleted file mode 100644
index 760052c..0000000
Binary files a/path/to/project-a/.git/objects/d0/f12f72a419c3910ee0901d785ab54bb55f43b1 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/d9/25412a2db589ec4bf790dc529500dbf4919733 b/path/to/project-a/.git/objects/d9/25412a2db589ec4bf790dc529500dbf4919733
deleted file mode 100644
index 3eb1754..0000000
--- a/path/to/project-a/.git/objects/d9/25412a2db589ec4bf790dc529500dbf4919733
+++ /dev/null
@@ -1,2 +0,0 @@
-x��K��0�9�W�%q&'+�@�HX@�G?�#?���#�=β���ծ��ZE�m��^%Bގ=CŹR�7�w�Ѩ�^����Lm'�t��b�!�b�x���`�`����8&Q֪�K�Bli�߄��p�Ҍ�Û�M�&ߥ?/�Ʒ��n�9�8����X���&���*E�o/$���Q^�D��"���ퟄK\m��,���G��D���uFL�r�"y��0k��08��~������\y
���\T�X:��g�"����C`[^��.��PeR�"!d=Y\_b�-�'��i?�������x�ˋ�<���,V���jz/?���wu��(U�V�S�ϴʿ!Ի���vF�s�T
-)� �Π���[7Hb��9r��U��U��
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/d9/ef7f37d000fe762700c5c45790e0fa29da4525 b/path/to/project-a/.git/objects/d9/ef7f37d000fe762700c5c45790e0fa29da4525
deleted file mode 100644
index 132c5db..0000000
--- a/path/to/project-a/.git/objects/d9/ef7f37d000fe762700c5c45790e0fa29da4525
+++ /dev/null
@@ -1,3 +0,0 @@
-x��MN�0�Y�o	B�Ǳ�
-!ʊ%R�
-!�~~V����\�lY���O3��8��W9�TI����j-�8��GT�T+5;�DS��2H=����
!J�U'd�)7\kdv���`�	����'�[���3�0��0�gJ��{���iu��-�3������e��������h,�@��1��u��m��*���Nu�+�����M����B ��!ġl��c��GZz���!V�ޮ����
�%e~�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/db/e614813781ce61c459a05e45d09a99739a4f89 b/path/to/project-a/.git/objects/db/e614813781ce61c459a05e45d09a99739a4f89
deleted file mode 100644
index c08aa28..0000000
--- a/path/to/project-a/.git/objects/db/e614813781ce61c459a05e45d09a99739a4f89
+++ /dev/null
@@ -1,2 +0,0 @@
-x5��
-�@�S�S��	Y�&u@�%��11��U���6���鎴H��!7�(߲';u�b�P�sQဣ�hū�d�����xO�v��e�ٚ�}3;èdmQ��U"�Q��t^��\!��:|�~-�y#�yu\D��,��YG��^�%>ʴLڊ�;2�?�FI�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/e0/7455758dfbbdf6f60edf8f8341ffb30f7ce815 b/path/to/project-a/.git/objects/e0/7455758dfbbdf6f60edf8f8341ffb30f7ce815
deleted file mode 100644
index 03a22c4..0000000
Binary files a/path/to/project-a/.git/objects/e0/7455758dfbbdf6f60edf8f8341ffb30f7ce815 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/e1/7e258245b958557ad814dcfc84df93525d0027 b/path/to/project-a/.git/objects/e1/7e258245b958557ad814dcfc84df93525d0027
deleted file mode 100644
index e4d95df..0000000
Binary files a/path/to/project-a/.git/objects/e1/7e258245b958557ad814dcfc84df93525d0027 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/e6/dc64c4a31d1f388ae7fe8f4c5cc171915cda33 b/path/to/project-a/.git/objects/e6/dc64c4a31d1f388ae7fe8f4c5cc171915cda33
deleted file mode 100644
index 73a541d..0000000
Binary files a/path/to/project-a/.git/objects/e6/dc64c4a31d1f388ae7fe8f4c5cc171915cda33 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/e7/9542200ca64dcc9f60158df4d296915f680c71 b/path/to/project-a/.git/objects/e7/9542200ca64dcc9f60158df4d296915f680c71
deleted file mode 100644
index 868e6b8..0000000
Binary files a/path/to/project-a/.git/objects/e7/9542200ca64dcc9f60158df4d296915f680c71 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/e8/2de7d59f40eb63e58e18426bc54df7acb2c27a b/path/to/project-a/.git/objects/e8/2de7d59f40eb63e58e18426bc54df7acb2c27a
deleted file mode 100644
index 7cf5f2e..0000000
Binary files a/path/to/project-a/.git/objects/e8/2de7d59f40eb63e58e18426bc54df7acb2c27a and /dev/null differ
diff --git a/path/to/project-a/.git/objects/ea/fc02ec09fdf91b41dabd010fa9248f07ea7d7b b/path/to/project-a/.git/objects/ea/fc02ec09fdf91b41dabd010fa9248f07ea7d7b
deleted file mode 100644
index a4ea061..0000000
--- a/path/to/project-a/.git/objects/ea/fc02ec09fdf91b41dabd010fa9248f07ea7d7b
+++ /dev/null
@@ -1 +0,0 @@
-x�K�0Fa�]ŝ�4�($ƸWp�Q#�`�acn�����MN����v��@Wȶ,)�d��� U�5��y1�^D�uuy�E���͚��c�˂���Ow^����4Ț���YG����2��=[f�~}y+�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/ef/31a165754c4eb5c21c4bd87a31c369db019050 b/path/to/project-a/.git/objects/ef/31a165754c4eb5c21c4bd87a31c369db019050
deleted file mode 100644
index a4141f1..0000000
Binary files a/path/to/project-a/.git/objects/ef/31a165754c4eb5c21c4bd87a31c369db019050 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/ef/a8e1c6365a70bfd750399c7b5c0f34a17d966c b/path/to/project-a/.git/objects/ef/a8e1c6365a70bfd750399c7b5c0f34a17d966c
deleted file mode 100644
index 42fb387..0000000
--- a/path/to/project-a/.git/objects/ef/a8e1c6365a70bfd750399c7b5c0f34a17d966c
+++ /dev/null
@@ -1,4 +0,0 @@
-x���N�0����#���sB���A���K�99��鞀v4ߌ���k0&>�`�\����6+V���2k�)2E|��HO7�O����Ά����{�=m5��J����&�k�\�3�aК<S�\�G6�(�<�!�6����4
-|����m��k��H�rO�
-��
-v:(k�5��Ą�11}����a��/wS�Lr*΋�����~�w���]Ƒ��e�l�
\ No newline at end of file
diff --git a/path/to/project-a/.git/objects/f3/bdc2ef40532c75c94749e12343ef5554d4d7e1 b/path/to/project-a/.git/objects/f3/bdc2ef40532c75c94749e12343ef5554d4d7e1
deleted file mode 100644
index e043d09..0000000
Binary files a/path/to/project-a/.git/objects/f3/bdc2ef40532c75c94749e12343ef5554d4d7e1 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/f5/5bfae069e92bf71be72004b57921969dccee42 b/path/to/project-a/.git/objects/f5/5bfae069e92bf71be72004b57921969dccee42
deleted file mode 100644
index 4da338a..0000000
Binary files a/path/to/project-a/.git/objects/f5/5bfae069e92bf71be72004b57921969dccee42 and /dev/null differ
diff --git a/path/to/project-a/.git/objects/f8/1e1ae48181bf7f61e5630ca65804396acdcb3b b/path/to/project-a/.git/objects/f8/1e1ae48181bf7f61e5630ca65804396acdcb3b
deleted file mode 100644
index e1ca602..0000000
Binary files a/path/to/project-a/.git/objects/f8/1e1ae48181bf7f61e5630ca65804396acdcb3b and /dev/null differ
diff --git a/path/to/project-a/.git/objects/info/commit-graph b/path/to/project-a/.git/objects/info/commit-graph
deleted file mode 100644
index 9a5be4a..0000000
Binary files a/path/to/project-a/.git/objects/info/commit-graph and /dev/null differ
diff --git a/path/to/project-a/.git/objects/info/packs b/path/to/project-a/.git/objects/info/packs
deleted file mode 100644
index 0d2fa38..0000000
--- a/path/to/project-a/.git/objects/info/packs
+++ /dev/null
@@ -1,3 +0,0 @@
-P pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.pack
-P pack-4280a43b000591ca8edbba4b2e38759de460f43e.pack
-
diff --git a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.idx b/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.idx
deleted file mode 100644
index 1586560..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.idx and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.pack b/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.pack
deleted file mode 100644
index 979c42a..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.pack and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.rev b/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.rev
deleted file mode 100644
index 46d61e8..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4280a43b000591ca8edbba4b2e38759de460f43e.rev and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.idx b/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.idx
deleted file mode 100644
index 9dcd1bc..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.idx and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.mtimes b/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.mtimes
deleted file mode 100644
index c41869e..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.mtimes and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.pack b/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.pack
deleted file mode 100644
index 64a3b87..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.pack and /dev/null differ
diff --git a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.rev b/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.rev
deleted file mode 100644
index a806a8c..0000000
Binary files a/path/to/project-a/.git/objects/pack/pack-4c8c4eddd84a6dd57dc093f52a1129dcee64bf44.rev and /dev/null differ
diff --git a/path/to/project-a/.git/packed-refs b/path/to/project-a/.git/packed-refs
deleted file mode 100644
index 523fd03..0000000
--- a/path/to/project-a/.git/packed-refs
+++ /dev/null
@@ -1,3 +0,0 @@
-# pack-refs with: peeled fully-peeled sorted
-290adeff3f2e0f447a57d607634a13ee08ede4aa refs/heads/main
-290adeff3f2e0f447a57d607634a13ee08ede4aa refs/remotes/origin/main
diff --git a/path/to/project-a/.git/refs/heads/main b/path/to/project-a/.git/refs/heads/main
deleted file mode 100644
index 36ffe33..0000000
--- a/path/to/project-a/.git/refs/heads/main
+++ /dev/null
@@ -1 +0,0 @@
-3ab3962c3ef4800766474b12729d684f38d5fa55
diff --git a/path/to/project-a/.git/refs/remotes/origin/HEAD b/path/to/project-a/.git/refs/remotes/origin/HEAD
deleted file mode 100644
index 4b0a875..0000000
--- a/path/to/project-a/.git/refs/remotes/origin/HEAD
+++ /dev/null
@@ -1 +0,0 @@
-ref: refs/remotes/origin/main
diff --git a/path/to/project-a/.git/refs/remotes/origin/main b/path/to/project-a/.git/refs/remotes/origin/main
deleted file mode 100644
index cbcbe56..0000000
--- a/path/to/project-a/.git/refs/remotes/origin/main
+++ /dev/null
@@ -1 +0,0 @@
-c0682810153a08a0b4e9216e8f0beaf03c97be86
diff --git a/path/to/project-a/.git/refs/stash b/path/to/project-a/.git/refs/stash
deleted file mode 100644
index a2e2394..0000000
--- a/path/to/project-a/.git/refs/stash
+++ /dev/null
@@ -1 +0,0 @@
-efa8e1c6365a70bfd750399c7b5c0f34a17d966c
diff --git a/path/to/project-a/.git/refs/tags/v1.0.0 b/path/to/project-a/.git/refs/tags/v1.0.0
deleted file mode 100644
index 80e1e1c..0000000
--- a/path/to/project-a/.git/refs/tags/v1.0.0
+++ /dev/null
@@ -1 +0,0 @@
-0300c4ac97c9a176273c6b6b0e36c3a28fd84902
diff --git a/path/to/project-a/.git/refs/tags/v1.0.1 b/path/to/project-a/.git/refs/tags/v1.0.1
deleted file mode 100644
index 71117d3..0000000
--- a/path/to/project-a/.git/refs/tags/v1.0.1
+++ /dev/null
@@ -1 +0,0 @@
-ab52a0bdadcba5d881f19d39457952bc41d83ee5
diff --git a/path/to/project-a/.gitignore b/path/to/project-b/.gitignore
index dbe6148..0abf969 100644
--- a/path/to/project-a/.gitignore
+++ b/path/to/project-b/.gitignore
@@ -1,26 +1,42 @@
-# Node.js
-node_modules/
-
-# OS generated files
+node_modules
 .DS_Store
-Thumbs.db

-# Editor files
-.vscode/
-.idea/
+*.md
+*.txt
+*.json
+!README.md
+!package.json
+!package-lock.json

-# Logs
-*.log

-# Test coverage
+# Test coverage and reports
 coverage/
+.nyc_output/
+test-results.json
+test-results.html

 # Vitest cache
 .vitest/

-*.md
-*.txt
-*.json
-!README.md
-!package.json
-!package-lock.json
+# Test artifacts
+*.test.log
+*.spec.log
+
+# Build artifacts (esbuild + pkg)
+# esbuild bundle output
+dist/
+*.bundle.cjs
+
+# pkg binary output
+binaries/
+*.exe
+*.app
+*.deb
+*.rpm
+*.dmg
+*.pkg
+
+# Temporary build files
+.build/
+*.tmp
+*.temp
diff --git a/path/to/project-a/LICENSE b/path/to/project-a/LICENSE
deleted file mode 100644
index 456a110..0000000
--- a/path/to/project-a/LICENSE
+++ /dev/null
@@ -1,21 +0,0 @@
-MIT License
-
-Copyright (c) 2025 jira-timesheet-cli
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
diff --git a/path/to/project-a/README.md b/path/to/project-b/README.md
index b41618f..e710571 100644
--- a/path/to/project-a/README.md
+++ b/path/to/project-b/README.md
@@ -18,7 +18,28 @@ Ein Node.js Kommandozeilen-Tool zur Generierung von Stundenzetteln aus Jira-Work

 ## 🚀 Installation

-### Option 1: Lokale Installation
+### Option 1: Vorkompilierte Binaries (Empfohlen)
+```bash
+# Repository klonen
+git clone <repository-url>
+cd jira-timesheet-cli
+
+# Dependencies installieren
+npm install
+
+# Cross-Platform Binaries erstellen
+npm run build:all
+
+# Binary verwenden (Linux/macOS)
+./binaries/jira-timesheet-cli-linux-x64
+./binaries/jira-timesheet-cli-darwin-x64
+./binaries/jira-timesheet-cli-darwin-arm64
+
+# Binary verwenden (Windows)
+./binaries/jira-timesheet-cli-win-x64.exe
+```
+
+### Option 2: Lokale Installation
 ```bash
 # Repository klonen
 git clone <repository-url>
@@ -31,7 +52,7 @@ npm install
 npm link
 ```

-### Option 2: NPM Package (falls veröffentlicht)
+### Option 3: NPM Package (falls veröffentlicht)
 ```bash
 npm install -g jira-timesheet-cli
 ```
@@ -84,7 +105,7 @@ jira-timesheet test

 ### Ausgabeformate
 ```bash
-# Standard Tabellen-Ausgabe (gruppiert nach Benutzer und Tag)
+# Standard Tabellen-Ausgabe
 jira-timesheet generate -p TEST

 # Als CSV exportieren
@@ -210,7 +231,7 @@ issue:

 ### Gruppierte Tabellen-Ausgabe
 ```
-📊 Stundenzettel (gruppiert nach Benutzer und Tag)
+📊 Stundenzettel

 👤 Max Mustermann
 ────────────────────────────────────────────────────────────────────────────────
@@ -242,7 +263,7 @@ Max Mustermann,01.12.2024,TEST-123,"Bug fix","2h 30m",9000,"Fixed it","2024-12-0

 ### Markdown-Ausgabe
 ```markdown
-# Stundenzettel (gruppiert nach Benutzer und Tag)
+# Stundenzettel

 ## 👤 Max Mustermann

@@ -411,6 +432,77 @@ jira-timesheet config
 jira-timesheet test
 ```

+## 🔨 Build-Prozess
+
+Das Projekt verwendet **esbuild** für optimales Bundling und **pkg** für die Erstellung von Cross-Platform-Binaries.
+
+### Build-Scripts
+
+```bash
+# Bundle mit esbuild erstellen
+npm run bundle
+
+# Cross-Platform Binaries erstellen
+npm run build:binaries
+
+# Kompletter Build-Prozess (Bundle + Binaries)
+npm run build:all
+
+# Build-Artefakte löschen
+npm run clean
+```
+
+### Build-Konfiguration
+
+**esbuild Konfiguration** ([`esbuild.config.js`](esbuild.config.js)):
+- Bundelt ES Modules für Node.js
+- Optimiert für Node.js 18+
+- Tree-shaking für kleinere Bundle-Größe
+- Behält Debugging-Informationen bei
+
+**pkg Konfiguration** ([`package.json`](package.json) `pkg` Sektion):
+- Erstellt Binaries für Linux, macOS (x64/ARM64), Windows
+- Komprimiert Binaries für kleinere Dateigröße
+- Verwendet Node.js 18 Runtime
+
+### Erstellte Artefakte
+
+Nach `npm run build:all`:
+
+```
+dist/
+├── jira_timesheet_cli.bundle.cjs   # esbuild Bundle
+
+binaries/
+├── jira-timesheet-cli-linux-x64    # Linux x64 Binary
+├── jira-timesheet-cli-darwin-x64    # macOS x64 Binary
+├── jira-timesheet-cli-darwin-arm64  # macOS ARM64 Binary
+└── jira-timesheet-cli-win-x64.exe  # Windows x64 Binary
+```
+
+### Binary-Verwendung
+
+```bash
+# Linux
+./binaries/jira-timesheet-cli-linux-x64 generate -p TEST
+
+# macOS (Intel)
+./binaries/jira-timesheet-cli-darwin-x64 generate -p TEST
+
+# macOS (Apple Silicon)
+./binaries/jira-timesheet-cli-darwin-arm64 generate -p TEST
+
+# Windows
+./binaries/jira-timesheet-cli-win-x64.exe generate -p TEST
+```
+
+**Vorteile der Binaries:**
+- ✅ **Keine Node.js Installation erforderlich** - Standalone Executables
+- ✅ **Cross-Platform** - Windows, macOS, Linux Support
+- ✅ **Optimierte Performance** - Vorkompiliert und gebündelt
+- ✅ **Einfache Distribution** - Einzelne Datei pro Platform
+- ✅ **Konsistente Umgebung** - Eingebaute Node.js Runtime
+
 ## 🤝 Entwicklung

 ```bash
@@ -426,6 +518,9 @@ node jira_timesheet_cli.js generate -p TEST

 # Global installieren (für Entwicklung)
 npm link
+
+# Build testen
+npm run build:all
 ```

 ## 📝 Lizenz
diff --git a/path/to/project-b/commit_message b/path/to/project-b/commit_message
new file mode 100644
index 0000000..499d1df
--- /dev/null
+++ b/path/to/project-b/commit_message
@@ -0,0 +1,14 @@
+commit fffae5b18fc59b69d996a8290226bfa7f83bc2fe
+Author: Sven Pöche <sven.poeche@mayflower.de>
+Date:   Fri Jun 6 12:10:08 2025 +0200
+
+    feat: add date format conversion and improve output formatting
+
+    Add convertDateFormat method to handle DD.MM.YYYY to YYYY-MM-DD conversion
+    Support both German (DD.MM.YYYY) and ISO (YYYY-MM-DD) date formats
+    Add comprehensive date validation with proper error messages
+    Add new date-parsing.test.js with extensive test coverage
+    Simplify output headers by removing "gruppiert nach Benutzer und Tag"
+    Update CSV column order to Date, User, Issue Key for better readability
+    Remove date headers (### 📅) from markdown output for cleaner structure
+    Update tests to match new output formats
diff --git a/path/to/project-b/esbuild.config.js b/path/to/project-b/esbuild.config.js
new file mode 100644
index 0000000..fe63a32
--- /dev/null
+++ b/path/to/project-b/esbuild.config.js
@@ -0,0 +1,69 @@
+import { build } from 'esbuild';
+
+/**
+ * esbuild configuration for JIRA Timesheet CLI
+ * Bundles the ES module CLI tool for pkg binary creation
+ */
+const config = {
+  entryPoints: ['jira_timesheet_cli.js'],
+  bundle: true,
+  outfile: 'dist/jira_timesheet_cli.bundle.cjs',
+  platform: 'node',
+  target: 'node18',
+  format: 'cjs', // Change to CommonJS for better pkg compatibility
+  external: [
+    // Keep these as external since they might have native dependencies
+    // or need to be resolved at runtime
+  ],
+  // Remove banner for CommonJS compatibility
+  minify: false, // Keep readable for debugging
+  sourcemap: false,
+  treeShaking: true,
+  define: {
+    // Ensure process.env is available
+    'process.env.NODE_ENV': '"production"'
+  },
+  plugins: [
+    {
+      name: 'import-meta-url',
+      setup(build) {
+        build.onLoad({ filter: /\.js$/ }, async (args) => {
+          const fs = await import('fs/promises');
+          let contents = await fs.readFile(args.path, 'utf8');
+
+          // Replace import.meta.url with a CommonJS compatible version
+          contents = contents.replace(
+            /import\.meta\.url/g,
+            'require("url").pathToFileURL(__filename).href'
+          );
+
+          return { contents, loader: 'js' };
+        });
+      }
+    }
+  ],
+  loader: {
+    '.js': 'js'
+  }
+};
+
+// Build function
+async function buildBundle() {
+  try {
+    console.log('🔨 Building bundle with esbuild...');
+
+    await build(config);
+
+    console.log('✅ Bundle created successfully at dist/jira_timesheet_cli.bundle.cjs');
+  } catch (error) {
+    console.error('❌ Build failed:', error);
+    process.exit(1);
+  }
+}
+
+// Run build if this file is executed directly
+if (import.meta.url === `file://${process.argv[1]}`) {
+  buildBundle();
+}
+
+export { config, buildBundle };
diff --git a/path/to/project-a/jira_timesheet_cli.js b/path/to/project-b/jira_timesheet_cli.js
index 3290f07..b7dc31f 100755
--- a/path/to/project-a/jira_timesheet_cli.js
+++ b/path/to/project-b/jira_timesheet_cli.js
@@ -28,6 +28,70 @@ class JiraTimesheetCLI {
     this.configPath = path.join(os.homedir(), '.config', '.jira', '.config.yml');
   }

+  /**
+   * Convert date format from DD.MM.YYYY to YYYY-MM-DD for JIRA API compatibility
+   * @param {string} dateString - Date in DD.MM.YYYY format
+   * @returns {string} Date in YYYY-MM-DD format
+   * @throws {Error} If date format is invalid
+   */
+  convertDateFormat(dateString) {
+    if (!dateString || typeof dateString !== 'string') {
+      throw new Error('Date string is required and must be a string');
+    }
+
+    // Check if already in YYYY-MM-DD format
+    const isoDatePattern = /^\d{4}-\d{2}-\d{2}$/;
+    if (isoDatePattern.test(dateString)) {
+      // Validate the date is actually valid
+      const date = new Date(dateString);
+      if (isNaN(date.getTime())) {
+        throw new Error(`Invalid date: ${dateString}`);
+      }
+      return dateString;
+    }
+
+    // Check for DD.MM.YYYY format
+    const germanDatePattern = /^(\d{1,2})\.(\d{1,2})\.(\d{4})$/;
+    const match = dateString.match(germanDatePattern);
+
+    if (!match) {
+      throw new Error(`Invalid date format: ${dateString}. Expected DD.MM.YYYY or YYYY-MM-DD format.`);
+    }
+
+    const [, day, month, year] = match;
+
+    // Validate day and month ranges
+    const dayNum = parseInt(day, 10);
+    const monthNum = parseInt(month, 10);
+    const yearNum = parseInt(year, 10);
+
+    if (dayNum < 1 || dayNum > 31) {
+      throw new Error(`Invalid day: ${day}. Day must be between 1 and 31.`);
+    }
+
+    if (monthNum < 1 || monthNum > 12) {
+      throw new Error(`Invalid month: ${month}. Month must be between 1 and 12.`);
+    }
+
+    if (yearNum < 1900 || yearNum > 2100) {
+      throw new Error(`Invalid year: ${year}. Year must be between 1900 and 2100.`);
+    }
+
+    // Pad day and month with leading zeros
+    const paddedDay = day.padStart(2, '0');
+    const paddedMonth = month.padStart(2, '0');
+
+    const convertedDate = `${year}-${paddedMonth}-${paddedDay}`;
+
+    // Final validation: check if the date is actually valid
+    const date = new Date(convertedDate);
+    if (isNaN(date.getTime()) || date.toISOString().split('T')[0] !== convertedDate) {
+      throw new Error(`Invalid date: ${dateString}. The date does not exist.`);
+    }
+
+    return convertedDate;
+  }
+
   /**
    * Determine config file path following jira-cli logic:
    * 1. --config/-c parameter (highest priority)
@@ -156,12 +220,22 @@ class JiraTimesheetCLI {
       }
     }

+    // Convert date formats for JQL query
+    let convertedStartDate = null;
+    let convertedEndDate = null;
+
     if (options.start || options.end) {
-      if (options.start) {
-        jql += ` AND worklogDate >= "${options.start}"`;
-      }
-      if (options.end) {
-        jql += ` AND worklogDate <= "${options.end}"`;
+      try {
+        if (options.start) {
+          convertedStartDate = this.convertDateFormat(options.start);
+          jql += ` AND worklogDate >= "${convertedStartDate}"`;
+        }
+        if (options.end) {
+          convertedEndDate = this.convertDateFormat(options.end);
+          jql += ` AND worklogDate <= "${convertedEndDate}"`;
+        }
+      } catch (error) {
+        throw new Error(`Date format error: ${error.message}`);
       }
     }

@@ -188,8 +262,9 @@ class JiraTimesheetCLI {
           // Apply date and user filters to worklogs
           const worklogDate = worklog.started.split('T')[0];

-          if (options.start && worklogDate < options.start) continue;
-          if (options.end && worklogDate > options.end) continue;
+          // Use converted dates for consistent comparison (YYYY-MM-DD format)
+          if (convertedStartDate && worklogDate < convertedStartDate) continue;
+          if (convertedEndDate && worklogDate > convertedEndDate) continue;
           if (usersToFilter.length > 0 && !usersToFilter.includes(worklog.author.emailAddress)) continue;

           worklogEntries.push({
@@ -198,7 +273,7 @@ class JiraTimesheetCLI {
             author: worklog.author.displayName,
             timeSpent: worklog.timeSpent,
             timeSpentSeconds: worklog.timeSpentSeconds,
-            comment: worklog.comment || '',
+            comment: this.extractCommentText(worklog.comment),
             started: worklog.started,
             created: worklog.created
           });
@@ -211,6 +286,37 @@ class JiraTimesheetCLI {
     return worklogEntries.sort((a, b) => new Date(a.started).getTime() - new Date(b.started).getTime());
   }

+  /**
+   * Extracts plain text from Jira's Atlassian Document Format comment.
+   * Concatenates text from all 'text' nodes within paragraphs.
+   */
+  extractCommentText(commentObject) {
+    if (!commentObject || !commentObject.content || !Array.isArray(commentObject.content)) {
+      return '';
+    }
+
+    let fullText = '';
+    try {
+      commentObject.content.forEach(block => {
+        if (block.type === 'paragraph' && block.content && Array.isArray(block.content)) {
+          block.content.forEach(inline => {
+            if (inline.type === 'text' && inline.text) {
+              if (fullText.length > 0) {
+                fullText += ' '; // Add space between text parts from different nodes if needed
+              }
+              fullText += inline.text;
+            }
+          });
+        }
+      });
+    } catch (e) {
+      // Bei komplexeren Strukturen oder Fehlern, leeren String zurückgeben oder loggen
+      console.warn(chalk.yellow('Warning: Could not fully parse comment object. Returning raw or partial text.'), e);
+      return ''; // Fallback to empty string or potentially JSON.stringify(commentObject) if preferred
+    }
+    return fullText;
+  }
+
   /**
    * Format time from seconds to human readable
    */
@@ -263,18 +369,35 @@ class JiraTimesheetCLI {
     let totalEntries = 0;
     let output = '';

-    const title = 'Stundenzettel (gruppiert nach Benutzer und Tag)';
-    output += '\n📊 ' + (disableChalk ? title : chalk.bold(title));
+    const title = 'Stundenzettel';
+    output += '📊 ' + (disableChalk ? title : chalk.bold(title));

     // Iterate through each user
+    let isFirstUser = true;
     for (const [author, userDateMap] of groupedEntries) {
-      const authorText = `\n👤 ${author}`;
+      // Add empty line before each user header (including the first one after title)
+      const authorText = `\n\n👤 ${author}`;
       output += disableChalk ? authorText : chalk.cyan(authorText);
+      isFirstUser = false;
       output += '\n' + '─'.repeat(80);

       let userTotalSeconds = 0;
       let userTotalEntries = 0;

+      // Create one continuous table for all days of this user
+      const table = new Table({
+        head: ['Datum', 'Issue', 'Comment', 'Time'],
+        colWidths: [12, 15, 40, 10],
+        wordWrap: true,
+        chars: disableChalk ? {
+          'top': '-', 'top-mid': '+', 'top-left': '+', 'top-right': '+'
+          , 'bottom': '-', 'bottom-mid': '+', 'bottom-left': '+', 'bottom-right': '+'
+          , 'left': '|', 'left-mid': '+', 'mid': '-', 'mid-mid': '+'
+          , 'right': '|', 'right-mid': '+', 'middle': '|'
+        } : undefined,
+        style: disableChalk ? { 'padding-left': 1, 'padding-right': 1, head: [], border: [] } : undefined
+      });
+
       // Sort dates
       const sortedDates = Array.from(userDateMap.keys()).sort((a, b) => {
         const dateA = new Date(a.split('.').reverse().join('-'));
@@ -287,67 +410,39 @@ class JiraTimesheetCLI {
         const dayEntries = userDateMap.get(date);
         if (!dayEntries) continue; // Skip if no entries for this date

-        const dateText = `\n\n  📅 ${date}`;
-        output += disableChalk ? dateText : chalk.yellow(dateText);
-
-        const table = new Table({
-          head: ['Issue', 'Summary', 'Time', 'Comment'],
-          colWidths: [15, 45, 10, 30],
-          wordWrap: true,
-          chars: disableChalk ? {
-            'top': '-', 'top-mid': '+', 'top-left': '+', 'top-right': '+'
-            , 'bottom': '-', 'bottom-mid': '+', 'bottom-left': '+', 'bottom-right': '+'
-            , 'left': '|', 'left-mid': '+', 'mid': '-', 'mid-mid': '+'
-            , 'right': '|', 'right-mid': '+', 'middle': '|'
-          } : undefined,
-          style: disableChalk ? { 'padding-left': 1, 'padding-right': 1, head: [], border: [] } : undefined
-        });
-
         let dayTotalSeconds = 0;

         // Sort entries within the day by time
         dayEntries.sort((a, b) => new Date(a.started).getTime() - new Date(b.started).getTime());

         // Add regular worklog entries
-        dayEntries.forEach(entry => {
-          const commentText = typeof entry.comment === 'string' ? entry.comment : '';
-          const comment = commentText.length > 25
-            ? commentText.substring(0, 25) + '...'
-            : commentText;
-
+        dayEntries.forEach((entry, index) => {
           table.push([
+            index === 0 ? date : '', // Show date only in first row of each day
             entry.issueKey,
-            entry.issueSummary,
-            entry.timeSpent,
-            comment
+            entry.comment || '',
+            entry.timeSpent
           ]);

           dayTotalSeconds += entry.timeSpentSeconds;
         });

-        // Add separator line
-        table.push([
-          { colSpan: 4, content: '─'.repeat(40) }
-        ]);
-
-        // Add day total row
-        const tagessummeText = '📊 TAGESSUMME';
+        // Add day total row (without separator line)
         const eintreageText = `${dayEntries.length} Einträge`;
         const timeText = this.formatTime(dayTotalSeconds);

         table.push([
-          disableChalk ? tagessummeText : chalk.bold(tagessummeText),
+          { colSpan: 2, content: '' },
           disableChalk ? eintreageText : chalk.bold(eintreageText),
-          disableChalk ? timeText : chalk.bold.green(timeText),
-          ''
+          disableChalk ? timeText : chalk.bold.green(timeText)
         ]);

-        output += '\n' + table.toString();
-
         userTotalSeconds += dayTotalSeconds;
         userTotalEntries += dayEntries.length;
       }

+      output += '\n' + table.toString();
+
       // User summary
       const userSummaryText = `\n\n📈 ${author} Gesamt: ${this.formatTime(userTotalSeconds)} (${userTotalEntries} Einträge)`;
       output += disableChalk ? userSummaryText : chalk.bold.blue(userSummaryText);
@@ -370,16 +465,13 @@ class JiraTimesheetCLI {
    * Export timesheet as CSV (grouped by user and date)
    */
   exportToCsv(entries) {
-    const headers = ['User', 'Date', 'Issue Key', 'Issue Summary', 'Time Spent', 'Time (Seconds)', 'Comment', 'Started', 'Created'];
+    const headers = ['Date', 'User', 'Issue Key', 'Comment', 'Time Spent', 'Time (Seconds)', 'Started', 'Created'];
     const rows = [headers.join(',')];

     const groupedEntries = this.groupByUserAndDate(entries);

     // Add data rows grouped by user and date
     for (const [author, userDateMap] of groupedEntries) {
-      let userTotalSeconds = 0;
-      let userTotalEntries = 0;
-
       // Sort dates
       const sortedDates = Array.from(userDateMap.keys()).sort((a, b) => {
         const dateA = new Date(a.split('.').reverse().join('-'));
@@ -390,55 +482,38 @@ class JiraTimesheetCLI {
       for (const date of sortedDates) {
         const dayEntries = userDateMap.get(date);
         if (!dayEntries) continue;
-        let dayTotalSeconds = 0;

         dayEntries.sort((a, b) => new Date(a.started).getTime() - new Date(b.started).getTime());

-        dayEntries.forEach(entry => {
+        // Add regular worklog entries
+        dayEntries.forEach((entry) => {
           const row = [
+            date, // Always show date in first column
             author,
-            date,
             entry.issueKey,
-            `"${entry.issueSummary.replace(/"/g, '""')}"`,
+            `"${(entry.comment || '').replace(/"/g, '""')}"`,
             entry.timeSpent,
             entry.timeSpentSeconds.toString(),
-            `"${(typeof entry.comment === 'string' ? entry.comment : '').replace(/"/g, '""')}"`,
             entry.started,
             entry.created
           ];
           rows.push(row.join(','));
-          dayTotalSeconds += entry.timeSpentSeconds;
         });

-        rows.push([
-          `"--- ${author} - ${date} ---"`,
+        // Add day total row
+        const dayTotalSeconds = dayEntries.reduce((sum, entry) => sum + entry.timeSpentSeconds, 0);
+        const dayTotalRow = [
           date,
-          '',
-          '"Tagessumme"',
+          author,
+          '📊 TAGESSUMME',
+          `"${dayEntries.length} Einträge"`,
           this.formatTime(dayTotalSeconds),
           dayTotalSeconds.toString(),
-          `"${dayEntries.length} Einträge"`,
           '',
           ''
-        ].join(','));
-
-        userTotalSeconds += dayTotalSeconds;
-        userTotalEntries += dayEntries.length;
+        ];
+        rows.push(dayTotalRow.join(','));
       }
-
-      rows.push([
-        `"=== ${author} GESAMT ==="`,
-        '',
-        '',
-        '"Benutzersumme"',
-        this.formatTime(userTotalSeconds),
-        userTotalSeconds.toString(),
-        `"${userTotalEntries} Einträge"`,
-        '',
-        ''
-      ].join(','));
-
-      rows.push('');
     }

     return rows.join('\n');
@@ -458,7 +533,7 @@ class JiraTimesheetCLI {
     let output = '';

     // Main title
-    output += '# Stundenzettel (gruppiert nach Benutzer und Tag)\n\n';
+    output += '# Stundenzettel\n\n';

     // Iterate through each user
     for (const [author, userDateMap] of groupedEntries) {
@@ -467,6 +542,10 @@ class JiraTimesheetCLI {
       let userTotalSeconds = 0;
       let userTotalEntries = 0;

+      // Create one continuous markdown table for all days of this user
+      output += '| Datum | Issue Key | Comment | Time Spent |\n';
+      output += '|-------|-----------|---------|------------|\n';
+
       // Sort dates
       const sortedDates = Array.from(userDateMap.keys()).sort((a, b) => {
         const dateA = new Date(a.split('.').reverse().join('-'));
@@ -479,35 +558,29 @@ class JiraTimesheetCLI {
         const dayEntries = userDateMap.get(date);
         if (!dayEntries) continue;

-        output += `### 📅 ${date}\n\n`;
-
-        // Create markdown table
-        output += '| Issue Key | Summary | Time Spent | Comment |\n';
-        output += '|-----------|---------|------------|----------|\n';
-
         let dayTotalSeconds = 0;

         // Sort entries within the day by time
         dayEntries.sort((a, b) => new Date(a.started).getTime() - new Date(b.started).getTime());

         // Add regular worklog entries
-        dayEntries.forEach(entry => {
-          const commentText = typeof entry.comment === 'string' ? entry.comment : '';
+        dayEntries.forEach((entry, index) => {
           // Escape pipe characters and newlines in markdown table content
-          const escapedSummary = entry.issueSummary.replace(/\|/g, '\\|').replace(/\n/g, ' ');
-          const escapedComment = commentText.replace(/\|/g, '\\|').replace(/\n/g, ' ');
+          const escapedComment = (entry.comment || '').replace(/\|/g, '\\|').replace(/\n/g, ' ');

-          output += `| ${entry.issueKey} | ${escapedSummary} | ${entry.timeSpent} | ${escapedComment} |\n`;
+          output += `| ${index === 0 ? date : ''} | ${entry.issueKey} | ${escapedComment} | ${entry.timeSpent} |\n`;
           dayTotalSeconds += entry.timeSpentSeconds;
         });

         // Add day total row
-        output += `| **📊 TAGESSUMME** | **${dayEntries.length} Einträge** | **${this.formatTime(dayTotalSeconds)}** | |\n\n`;
+        output += `| | | **${dayEntries.length} Einträge** | **${this.formatTime(dayTotalSeconds)}** |\n`;

         userTotalSeconds += dayTotalSeconds;
         userTotalEntries += dayEntries.length;
       }

+      output += '\n';
+
       // User summary
       output += `**📈 ${author} Gesamt: ${this.formatTime(userTotalSeconds)} (${userTotalEntries} Einträge)**\n\n`;
       output += '---\n\n';
@@ -629,8 +702,8 @@ program
   .alias('gen')
   .description('Generate timesheet for a project')
   .option('-p, --project <projectKey>', 'Jira project key (e.g., SB)')
-  .option('-s, --start <YYYY-MM-DD>', 'Start date for worklogs')
-  .option('-e, --end <YYYY-MM-DD>', 'End date for worklogs')
+  .option('-s, --start <date>', 'Start date for worklogs (DD.MM.YYYY or YYYY-MM-DD)')
+  .option('-e, --end <date>', 'End date for worklogs (DD.MM.YYYY or YYYY-MM-DD)')
   .option('-u, --user <email...>', 'Filter by user email (can be specified multiple times)')
   .addOption(new Option('-f, --format <format>', 'Output format').choices(['table', 'json', 'csv', 'markdown']).default('table'))
   .option('-o, --output <file>', 'Output file path')
diff --git a/path/to/project-a/package-lock.json b/path/to/project-b/package-lock.json
index a7ecaaa..161fe74 100644
--- a/path/to/project-a/package-lock.json
+++ b/path/to/project-b/package-lock.json
@@ -19,12 +19,17 @@
         "jira-timesheet": "jira_timesheet_cli.js"
       },
       "devDependencies": {
+        "@types/node": "^20.10.0",
         "@vitest/coverage-v8": "^3.2.2",
         "@vitest/spy": "^3.2.2",
         "@vitest/ui": "^3.2.2",
         "c8": "^10.1.3",
+        "esbuild": "^0.25.5",
         "mock-fs": "^5.2.0",
         "msw": "^2.0.0",
+        "pkg": "^5.8.1",
+        "ts-node": "^10.9.0",
+        "typescript": "^5.3.0",
         "vitest": "^3.2.2"
       },
       "engines": {
@@ -45,6 +50,32 @@
         "node": ">=6.0.0"
       }
     },
+    "node_modules/@ampproject/remapping/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.18.2",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.18.2.tgz",
+      "integrity": "sha512-W1lG5vUwFvfMd8HVXqdfbuG7RuaSrTCCD8cl8fP8wOivdbtbIg2Db3IWUcgvfxKbbn6ZBGYRW/Zk1MIwK49mgw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.18.2",
+        "@jridgewell/gen-mapping": "^0.3.0",
+        "jsesc": "^2.5.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
     "node_modules/@babel/helper-string-parser": {
       "version": "7.27.1",
       "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.27.1.tgz",
@@ -146,6 +177,19 @@
         "node": ">=0.1.90"
       }
     },
+    "node_modules/@cspotcode/source-map-support": {
+      "version": "0.8.1",
+      "resolved": "https://registry.npmjs.org/@cspotcode/source-map-support/-/source-map-support-0.8.1.tgz",
+      "integrity": "sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/trace-mapping": "0.3.9"
+      },
+      "engines": {
+        "node": ">=12"
+      }
+    },
     "node_modules/@esbuild/aix-ppc64": {
       "version": "0.25.5",
       "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.25.5.tgz",
@@ -621,6 +665,37 @@
         }
       }
     },
+    "node_modules/@inquirer/core/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/@inquirer/core/node_modules/wrap-ansi": {
+      "version": "6.2.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
+      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.0.0",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/@inquirer/figures": {
       "version": "1.0.12",
       "resolved": "https://registry.npmjs.org/@inquirer/figures/-/figures-1.0.12.tgz",
@@ -680,19 +755,6 @@
         "url": "https://github.com/chalk/ansi-regex?sponsor=1"
       }
     },
-    "node_modules/@isaacs/cliui/node_modules/ansi-styles": {
-      "version": "6.2.1",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
-      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
-      "dev": true,
-      "license": "MIT",
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
-      }
-    },
     "node_modules/@isaacs/cliui/node_modules/emoji-regex": {
       "version": "9.2.2",
       "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
@@ -734,24 +796,6 @@
         "url": "https://github.com/chalk/strip-ansi?sponsor=1"
       }
     },
-    "node_modules/@isaacs/cliui/node_modules/wrap-ansi": {
-      "version": "8.1.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
-      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
-      "dev": true,
-      "license": "MIT",
-      "dependencies": {
-        "ansi-styles": "^6.1.0",
-        "string-width": "^5.0.1",
-        "strip-ansi": "^7.0.1"
-      },
-      "engines": {
-        "node": ">=12"
-      },
-      "funding": {
-        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
-      }
-    },
     "node_modules/@istanbuljs/schema": {
       "version": "0.1.3",
       "resolved": "https://registry.npmjs.org/@istanbuljs/schema/-/schema-0.1.3.tgz",
@@ -777,6 +821,17 @@
         "node": ">=6.0.0"
       }
     },
+    "node_modules/@jridgewell/gen-mapping/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
     "node_modules/@jridgewell/resolve-uri": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
@@ -805,20 +860,20 @@
       "license": "MIT"
     },
     "node_modules/@jridgewell/trace-mapping": {
-      "version": "0.3.25",
-      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
-      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "version": "0.3.9",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.9.tgz",
+      "integrity": "sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@jridgewell/resolve-uri": "^3.1.0",
-        "@jridgewell/sourcemap-codec": "^1.4.14"
+        "@jridgewell/resolve-uri": "^3.0.3",
+        "@jridgewell/sourcemap-codec": "^1.4.10"
       }
     },
     "node_modules/@mswjs/interceptors": {
-      "version": "0.39.2",
-      "resolved": "https://registry.npmjs.org/@mswjs/interceptors/-/interceptors-0.39.2.tgz",
-      "integrity": "sha512-RuzCup9Ct91Y7V79xwCb146RaBRHZ7NBbrIUySumd1rpKqHL5OonaqrGIbug5hNwP/fRyxFMA6ISgw4FTtYFYg==",
+      "version": "0.38.7",
+      "resolved": "https://registry.npmjs.org/@mswjs/interceptors/-/interceptors-0.38.7.tgz",
+      "integrity": "sha512-Jkb27iSn7JPdkqlTqKfhncFfnEZsIJVYxsFbUSWEkxdIPdsyngrhoDBk0/BGD2FQcRH99vlRrkHpNTyKqI+0/w==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -833,6 +888,44 @@
         "node": ">=18"
       }
     },
+    "node_modules/@nodelib/fs.scandir": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
+      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "2.0.5",
+        "run-parallel": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.stat": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
+      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.walk": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
+      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.scandir": "2.1.5",
+        "fastq": "^1.6.0"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
     "node_modules/@open-draft/deferred-promise": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/@open-draft/deferred-promise/-/deferred-promise-2.2.0.tgz",
@@ -877,9 +970,9 @@
       "license": "MIT"
     },
     "node_modules/@rollup/rollup-android-arm-eabi": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.42.0.tgz",
-      "integrity": "sha512-gldmAyS9hpj+H6LpRNlcjQWbuKUtb94lodB9uCz71Jm+7BxK1VIOo7y62tZZwxhA7j1ylv/yQz080L5WkS+LoQ==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.41.1.tgz",
+      "integrity": "sha512-NELNvyEWZ6R9QMkiytB4/L4zSEaBC03KIXEghptLGLZWJ6VPrL63ooZQCOnlx36aQPGhzuOMwDerC1Eb2VmrLw==",
       "cpu": [
         "arm"
       ],
@@ -891,9 +984,9 @@
       ]
     },
     "node_modules/@rollup/rollup-android-arm64": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.42.0.tgz",
-      "integrity": "sha512-bpRipfTgmGFdCZDFLRvIkSNO1/3RGS74aWkJJTFJBH7h3MRV4UijkaEUeOMbi9wxtxYmtAbVcnMtHTPBhLEkaw==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.41.1.tgz",
+      "integrity": "sha512-DXdQe1BJ6TK47ukAoZLehRHhfKnKg9BjnQYUu9gzhI8Mwa1d2fzxA1aw2JixHVl403bwp1+/o/NhhHtxWJBgEA==",
       "cpu": [
         "arm64"
       ],
@@ -905,9 +998,9 @@
       ]
     },
     "node_modules/@rollup/rollup-darwin-arm64": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.42.0.tgz",
-      "integrity": "sha512-JxHtA081izPBVCHLKnl6GEA0w3920mlJPLh89NojpU2GsBSB6ypu4erFg/Wx1qbpUbepn0jY4dVWMGZM8gplgA==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.41.1.tgz",
+      "integrity": "sha512-5afxvwszzdulsU2w8JKWwY8/sJOLPzf0e1bFuvcW5h9zsEg+RQAojdW0ux2zyYAz7R8HvvzKCjLNJhVq965U7w==",
       "cpu": [
         "arm64"
       ],
@@ -919,9 +1012,9 @@
       ]
     },
     "node_modules/@rollup/rollup-darwin-x64": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.42.0.tgz",
-      "integrity": "sha512-rv5UZaWVIJTDMyQ3dCEK+m0SAn6G7H3PRc2AZmExvbDvtaDc+qXkei0knQWcI3+c9tEs7iL/4I4pTQoPbNL2SA==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.41.1.tgz",
+      "integrity": "sha512-egpJACny8QOdHNNMZKf8xY0Is6gIMz+tuqXlusxquWu3F833DcMwmGM7WlvCO9sB3OsPjdC4U0wHw5FabzCGZg==",
       "cpu": [
         "x64"
       ],
@@ -933,9 +1026,9 @@
       ]
     },
     "node_modules/@rollup/rollup-freebsd-arm64": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.42.0.tgz",
-      "integrity": "sha512-fJcN4uSGPWdpVmvLuMtALUFwCHgb2XiQjuECkHT3lWLZhSQ3MBQ9pq+WoWeJq2PrNxr9rPM1Qx+IjyGj8/c6zQ==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-arm64/-/rollup-freebsd-arm64-4.41.1.tgz",
+      "integrity": "sha512-DBVMZH5vbjgRk3r0OzgjS38z+atlupJ7xfKIDJdZZL6sM6wjfDNo64aowcLPKIx7LMQi8vybB56uh1Ftck/Atg==",
       "cpu": [
         "arm64"
       ],
@@ -947,9 +1040,9 @@
       ]
     },
     "node_modules/@rollup/rollup-freebsd-x64": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.42.0.tgz",
-      "integrity": "sha512-CziHfyzpp8hJpCVE/ZdTizw58gr+m7Y2Xq5VOuCSrZR++th2xWAz4Nqk52MoIIrV3JHtVBhbBsJcAxs6NammOQ==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-freebsd-x64/-/rollup-freebsd-x64-4.41.1.tgz",
+      "integrity": "sha512-3FkydeohozEskBxNWEIbPfOE0aqQgB6ttTkJ159uWOFn42VLyfAiyD9UK5mhu+ItWzft60DycIN1Xdgiy8o/SA==",
       "cpu": [
         "x64"
       ],
@@ -961,9 +1054,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.42.0.tgz",
-      "integrity": "sha512-UsQD5fyLWm2Fe5CDM7VPYAo+UC7+2Px4Y+N3AcPh/LdZu23YcuGPegQly++XEVaC8XUTFVPscl5y5Cl1twEI4A==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.41.1.tgz",
+      "integrity": "sha512-wC53ZNDgt0pqx5xCAgNunkTzFE8GTgdZ9EwYGVcg+jEjJdZGtq9xPjDnFgfFozQI/Xm1mh+D9YlYtl+ueswNEg==",
       "cpu": [
         "arm"
       ],
@@ -975,9 +1068,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-arm-musleabihf": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.42.0.tgz",
-      "integrity": "sha512-/i8NIrlgc/+4n1lnoWl1zgH7Uo0XK5xK3EDqVTf38KvyYgCU/Rm04+o1VvvzJZnVS5/cWSd07owkzcVasgfIkQ==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.41.1.tgz",
+      "integrity": "sha512-jwKCca1gbZkZLhLRtsrka5N8sFAaxrGz/7wRJ8Wwvq3jug7toO21vWlViihG85ei7uJTpzbXZRcORotE+xyrLA==",
       "cpu": [
         "arm"
       ],
@@ -989,9 +1082,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-arm64-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.42.0.tgz",
-      "integrity": "sha512-eoujJFOvoIBjZEi9hJnXAbWg+Vo1Ov8n/0IKZZcPZ7JhBzxh2A+2NFyeMZIRkY9iwBvSjloKgcvnjTbGKHE44Q==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.41.1.tgz",
+      "integrity": "sha512-g0UBcNknsmmNQ8V2d/zD2P7WWfJKU0F1nu0k5pW4rvdb+BIqMm8ToluW/eeRmxCared5dD76lS04uL4UaNgpNA==",
       "cpu": [
         "arm64"
       ],
@@ -1003,9 +1096,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-arm64-musl": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.42.0.tgz",
-      "integrity": "sha512-/3NrcOWFSR7RQUQIuZQChLND36aTU9IYE4j+TB40VU78S+RA0IiqHR30oSh6P1S9f9/wVOenHQnacs/Byb824g==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.41.1.tgz",
+      "integrity": "sha512-XZpeGB5TKEZWzIrj7sXr+BEaSgo/ma/kCgrZgL0oo5qdB1JlTzIYQKel/RmhT6vMAvOdM2teYlAaOGJpJ9lahg==",
       "cpu": [
         "arm64"
       ],
@@ -1017,9 +1110,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-loongarch64-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.42.0.tgz",
-      "integrity": "sha512-O8AplvIeavK5ABmZlKBq9/STdZlnQo7Sle0LLhVA7QT+CiGpNVe197/t8Aph9bhJqbDVGCHpY2i7QyfEDDStDg==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-loongarch64-gnu/-/rollup-linux-loongarch64-gnu-4.41.1.tgz",
+      "integrity": "sha512-bkCfDJ4qzWfFRCNt5RVV4DOw6KEgFTUZi2r2RuYhGWC8WhCA8lCAJhDeAmrM/fdiAH54m0mA0Vk2FGRPyzI+tw==",
       "cpu": [
         "loong64"
       ],
@@ -1031,9 +1124,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.42.0.tgz",
-      "integrity": "sha512-6Qb66tbKVN7VyQrekhEzbHRxXXFFD8QKiFAwX5v9Xt6FiJ3BnCVBuyBxa2fkFGqxOCSGGYNejxd8ht+q5SnmtA==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.41.1.tgz",
+      "integrity": "sha512-3mr3Xm+gvMX+/8EKogIZSIEF0WUu0HL9di+YWlJpO8CQBnoLAEL/roTCxuLncEdgcfJcvA4UMOf+2dnjl4Ut1A==",
       "cpu": [
         "ppc64"
       ],
@@ -1045,9 +1138,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-riscv64-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.42.0.tgz",
-      "integrity": "sha512-KQETDSEBamQFvg/d8jajtRwLNBlGc3aKpaGiP/LvEbnmVUKlFta1vqJqTrvPtsYsfbE/DLg5CC9zyXRX3fnBiA==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.41.1.tgz",
+      "integrity": "sha512-3rwCIh6MQ1LGrvKJitQjZFuQnT2wxfU+ivhNBzmxXTXPllewOF7JR1s2vMX/tWtUYFgphygxjqMl76q4aMotGw==",
       "cpu": [
         "riscv64"
       ],
@@ -1059,9 +1152,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-riscv64-musl": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.42.0.tgz",
-      "integrity": "sha512-qMvnyjcU37sCo/tuC+JqeDKSuukGAd+pVlRl/oyDbkvPJ3awk6G6ua7tyum02O3lI+fio+eM5wsVd66X0jQtxw==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-musl/-/rollup-linux-riscv64-musl-4.41.1.tgz",
+      "integrity": "sha512-LdIUOb3gvfmpkgFZuccNa2uYiqtgZAz3PTzjuM5bH3nvuy9ty6RGc/Q0+HDFrHrizJGVpjnTZ1yS5TNNjFlklw==",
       "cpu": [
         "riscv64"
       ],
@@ -1073,9 +1166,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-s390x-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.42.0.tgz",
-      "integrity": "sha512-I2Y1ZUgTgU2RLddUHXTIgyrdOwljjkmcZ/VilvaEumtS3Fkuhbw4p4hgHc39Ypwvo2o7sBFNl2MquNvGCa55Iw==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.41.1.tgz",
+      "integrity": "sha512-oIE6M8WC9ma6xYqjvPhzZYk6NbobIURvP/lEbh7FWplcMO6gn7MM2yHKA1eC/GvYwzNKK/1LYgqzdkZ8YFxR8g==",
       "cpu": [
         "s390x"
       ],
@@ -1087,9 +1180,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-x64-gnu": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.42.0.tgz",
-      "integrity": "sha512-Gfm6cV6mj3hCUY8TqWa63DB8Mx3NADoFwiJrMpoZ1uESbK8FQV3LXkhfry+8bOniq9pqY1OdsjFWNsSbfjPugw==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.41.1.tgz",
+      "integrity": "sha512-cWBOvayNvA+SyeQMp79BHPK8ws6sHSsYnK5zDcsC3Hsxr1dgTABKjMnMslPq1DvZIp6uO7kIWhiGwaTdR4Og9A==",
       "cpu": [
         "x64"
       ],
@@ -1101,9 +1194,9 @@
       ]
     },
     "node_modules/@rollup/rollup-linux-x64-musl": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.42.0.tgz",
-      "integrity": "sha512-g86PF8YZ9GRqkdi0VoGlcDUb4rYtQKyTD1IVtxxN4Hpe7YqLBShA7oHMKU6oKTCi3uxwW4VkIGnOaH/El8de3w==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.41.1.tgz",
+      "integrity": "sha512-y5CbN44M+pUCdGDlZFzGGBSKCA4A/J2ZH4edTYSSxFg7ce1Xt3GtydbVKWLlzL+INfFIZAEg1ZV6hh9+QQf9YQ==",
       "cpu": [
         "x64"
       ],
@@ -1115,9 +1208,9 @@
       ]
     },
     "node_modules/@rollup/rollup-win32-arm64-msvc": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.42.0.tgz",
-      "integrity": "sha512-+axkdyDGSp6hjyzQ5m1pgcvQScfHnMCcsXkx8pTgy/6qBmWVhtRVlgxjWwDp67wEXXUr0x+vD6tp5W4x6V7u1A==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.41.1.tgz",
+      "integrity": "sha512-lZkCxIrjlJlMt1dLO/FbpZbzt6J/A8p4DnqzSa4PWqPEUUUnzXLeki/iyPLfV0BmHItlYgHUqJe+3KiyydmiNQ==",
       "cpu": [
         "arm64"
       ],
@@ -1129,9 +1222,9 @@
       ]
     },
     "node_modules/@rollup/rollup-win32-ia32-msvc": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.42.0.tgz",
-      "integrity": "sha512-F+5J9pelstXKwRSDq92J0TEBXn2nfUrQGg+HK1+Tk7VOL09e0gBqUHugZv7SW4MGrYj41oNCUe3IKCDGVlis2g==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.41.1.tgz",
+      "integrity": "sha512-+psFT9+pIh2iuGsxFYYa/LhS5MFKmuivRsx9iPJWNSGbh2XVEjk90fmpUEjCnILPEPJnikAU6SFDiEUyOv90Pg==",
       "cpu": [
         "ia32"
       ],
@@ -1143,9 +1236,9 @@
       ]
     },
     "node_modules/@rollup/rollup-win32-x64-msvc": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.42.0.tgz",
-      "integrity": "sha512-LpHiJRwkaVz/LqjHjK8LCi8osq7elmpwujwbXKNW88bM8eeGxavJIKKjkjpMHAh/2xfnrt1ZSnhTv41WYUHYmA==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.41.1.tgz",
+      "integrity": "sha512-Wq2zpapRYLfi4aKxf2Xff0tN+7slj2d4R87WEzqw7ZLsVvO5zwYCIuEGSZYiK41+GlwUo1HiR+GdkLEJnCKTCw==",
       "cpu": [
         "x64"
       ],
@@ -1156,6 +1249,34 @@
         "win32"
       ]
     },
+    "node_modules/@tsconfig/node10": {
+      "version": "1.0.11",
+      "resolved": "https://registry.npmjs.org/@tsconfig/node10/-/node10-1.0.11.tgz",
+      "integrity": "sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@tsconfig/node12": {
+      "version": "1.0.11",
+      "resolved": "https://registry.npmjs.org/@tsconfig/node12/-/node12-1.0.11.tgz",
+      "integrity": "sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@tsconfig/node14": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/@tsconfig/node14/-/node14-1.0.3.tgz",
+      "integrity": "sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@tsconfig/node16": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/@tsconfig/node16/-/node16-1.0.4.tgz",
+      "integrity": "sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/@types/chai": {
       "version": "5.2.2",
       "resolved": "https://registry.npmjs.org/@types/chai/-/chai-5.2.2.tgz",
@@ -1181,9 +1302,9 @@
       "license": "MIT"
     },
     "node_modules/@types/estree": {
-      "version": "1.0.8",
-      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.8.tgz",
-      "integrity": "sha512-dWHzHa2WqEXI/O1E9OjrocMTKJl2mSrEolh1Iomrv6U+JuNwaHXsXx9bLu5gG7BUWFIN0skIQJQ/L1rIex4X6w==",
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
+      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
       "dev": true,
       "license": "MIT"
     },
@@ -1194,10 +1315,20 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/@types/node": {
+      "version": "20.17.57",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-20.17.57.tgz",
+      "integrity": "sha512-f3T4y6VU4fVQDKVqJV4Uppy8c1p/sVvS3peyqxyWnzkqXFJLRU7Y1Bl7rMS1Qe9z0v4M6McY0Fp9yBsgHJUsWQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "undici-types": "~6.19.2"
+      }
+    },
     "node_modules/@types/statuses": {
-      "version": "2.0.6",
-      "resolved": "https://registry.npmjs.org/@types/statuses/-/statuses-2.0.6.tgz",
-      "integrity": "sha512-xMAgYwceFhRA2zY+XbEA7mxYbA093wdiW8Vu6gZPGWy9cmOyU9XesH1tNcEWsKFd5Vzrqx5T3D38PWx1FIIXkA==",
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@types/statuses/-/statuses-2.0.5.tgz",
+      "integrity": "sha512-jmIUGWrAiwu3dZpxntxieC+1n/5c3mjrImkmOSQ2NC5uP6cYO4aAZDdSmRcI5C1oiTmqlZGHC+/NmJrKogbP5A==",
       "dev": true,
       "license": "MIT"
     },
@@ -1209,9 +1340,9 @@
       "license": "MIT"
     },
     "node_modules/@vitest/coverage-v8": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/coverage-v8/-/coverage-v8-3.2.3.tgz",
-      "integrity": "sha512-D1QKzngg8PcDoCE8FHSZhREDuEy+zcKmMiMafYse41RZpBE5EDJyKOTdqK3RQfsV2S2nyKor5KCs8PyPRFqKPg==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/coverage-v8/-/coverage-v8-3.2.2.tgz",
+      "integrity": "sha512-RVAi5xnqedSKvaoQyCTWvncMk8eYZcTTOsLK7XmnfOEvdGP/O/upA0/MA8Ss+Qs++mj0GcSRi/whR0S5iBPpTQ==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -1233,8 +1364,8 @@
         "url": "https://opencollective.com/vitest"
       },
       "peerDependencies": {
-        "@vitest/browser": "3.2.3",
-        "vitest": "3.2.3"
+        "@vitest/browser": "3.2.2",
+        "vitest": "3.2.2"
       },
       "peerDependenciesMeta": {
         "@vitest/browser": {
@@ -1243,15 +1374,15 @@
       }
     },
     "node_modules/@vitest/expect": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/expect/-/expect-3.2.3.tgz",
-      "integrity": "sha512-W2RH2TPWVHA1o7UmaFKISPvdicFJH+mjykctJFoAkUw+SPTJTGjUNdKscFBrqM7IPnCVu6zihtKYa7TkZS1dkQ==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/expect/-/expect-3.2.2.tgz",
+      "integrity": "sha512-ipHw0z669vEMjzz3xQE8nJX1s0rQIb7oEl4jjl35qWTwm/KIHERIg/p/zORrjAaZKXfsv7IybcNGHwhOOAPMwQ==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
         "@types/chai": "^5.2.2",
-        "@vitest/spy": "3.2.3",
-        "@vitest/utils": "3.2.3",
+        "@vitest/spy": "3.2.2",
+        "@vitest/utils": "3.2.2",
         "chai": "^5.2.0",
         "tinyrainbow": "^2.0.0"
       },
@@ -1260,13 +1391,13 @@
       }
     },
     "node_modules/@vitest/mocker": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/mocker/-/mocker-3.2.3.tgz",
-      "integrity": "sha512-cP6fIun+Zx8he4rbWvi+Oya6goKQDZK+Yq4hhlggwQBbrlOQ4qtZ+G4nxB6ZnzI9lyIb+JnvyiJnPC2AGbKSPA==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/mocker/-/mocker-3.2.2.tgz",
+      "integrity": "sha512-jKojcaRyIYpDEf+s7/dD3LJt53c0dPfp5zCPXz9H/kcGrSlovU/t1yEaNzM9oFME3dcd4ULwRI/x0Po1Zf+LTw==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@vitest/spy": "3.2.3",
+        "@vitest/spy": "3.2.2",
         "estree-walker": "^3.0.3",
         "magic-string": "^0.30.17"
       },
@@ -1287,9 +1418,9 @@
       }
     },
     "node_modules/@vitest/pretty-format": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.2.3.tgz",
-      "integrity": "sha512-yFglXGkr9hW/yEXngO+IKMhP0jxyFw2/qys/CK4fFUZnSltD+MU7dVYGrH8rvPcK/O6feXQA+EU33gjaBBbAng==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/pretty-format/-/pretty-format-3.2.2.tgz",
+      "integrity": "sha512-FY4o4U1UDhO9KMd2Wee5vumwcaHw7Vg4V7yR4Oq6uK34nhEJOmdRYrk3ClburPRUA09lXD/oXWZ8y/Sdma0aUQ==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -1300,28 +1431,27 @@
       }
     },
     "node_modules/@vitest/runner": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/runner/-/runner-3.2.3.tgz",
-      "integrity": "sha512-83HWYisT3IpMaU9LN+VN+/nLHVBCSIUKJzGxC5RWUOsK1h3USg7ojL+UXQR3b4o4UBIWCYdD2fxuzM7PQQ1u8w==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/runner/-/runner-3.2.2.tgz",
+      "integrity": "sha512-GYcHcaS3ejGRZYed2GAkvsjBeXIEerDKdX3orQrBJqLRiea4NSS9qvn9Nxmuy1IwIB+EjFOaxXnX79l8HFaBwg==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@vitest/utils": "3.2.3",
-        "pathe": "^2.0.3",
-        "strip-literal": "^3.0.0"
+        "@vitest/utils": "3.2.2",
+        "pathe": "^2.0.3"
       },
       "funding": {
         "url": "https://opencollective.com/vitest"
       }
     },
     "node_modules/@vitest/snapshot": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.2.3.tgz",
-      "integrity": "sha512-9gIVWx2+tysDqUmmM1L0hwadyumqssOL1r8KJipwLx5JVYyxvVRfxvMq7DaWbZZsCqZnu/dZedaZQh4iYTtneA==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/snapshot/-/snapshot-3.2.2.tgz",
+      "integrity": "sha512-aMEI2XFlR1aNECbBs5C5IZopfi5Lb8QJZGGpzS8ZUHML5La5wCbrbhLOVSME68qwpT05ROEEOAZPRXFpxZV2wA==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@vitest/pretty-format": "3.2.3",
+        "@vitest/pretty-format": "3.2.2",
         "magic-string": "^0.30.17",
         "pathe": "^2.0.3"
       },
@@ -1330,9 +1460,9 @@
       }
     },
     "node_modules/@vitest/spy": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/spy/-/spy-3.2.3.tgz",
-      "integrity": "sha512-JHu9Wl+7bf6FEejTCREy+DmgWe+rQKbK+y32C/k5f4TBIAlijhJbRBIRIOCEpVevgRsCQR2iHRUH2/qKVM/plw==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/spy/-/spy-3.2.2.tgz",
+      "integrity": "sha512-6Utxlx3o7pcTxvp0u8kUiXtRFScMrUg28KjB3R2hon7w4YqOFAEA9QwzPVVS1QNL3smo4xRNOpNZClRVfpMcYg==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -1343,13 +1473,13 @@
       }
     },
     "node_modules/@vitest/ui": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/ui/-/ui-3.2.3.tgz",
-      "integrity": "sha512-9aR2tY/WT7GRHGEH/9sSIipJqeA21Eh3C6xmiOVmfyBCFmezUSUFLalpaSmRHlRzWCKQU10yz3AHhKuYcdnZGQ==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/ui/-/ui-3.2.2.tgz",
+      "integrity": "sha512-xHif5tkQOZK4YjA44rrzmvXMI1cb1Qato3P+NL/gwyoK5LdZx0f5Q59Il25JtuhN/htBvrT+Copt3Q4Ma4gJbg==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@vitest/utils": "3.2.3",
+        "@vitest/utils": "3.2.2",
         "fflate": "^0.8.2",
         "flatted": "^3.3.3",
         "pathe": "^2.0.3",
@@ -1361,17 +1491,17 @@
         "url": "https://opencollective.com/vitest"
       },
       "peerDependencies": {
-        "vitest": "3.2.3"
+        "vitest": "3.2.2"
       }
     },
     "node_modules/@vitest/utils": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/@vitest/utils/-/utils-3.2.3.tgz",
-      "integrity": "sha512-4zFBCU5Pf+4Z6v+rwnZ1HU1yzOKKvDkMXZrymE2PBlbjKJRlrOxbvpfPSvJTGRIwGoahaOGvp+kbCoxifhzJ1Q==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/@vitest/utils/-/utils-3.2.2.tgz",
+      "integrity": "sha512-qJYMllrWpF/OYfWHP32T31QCaLa3BAzT/n/8mNGhPdVcjY+JYazQFO1nsJvXU12Kp1xMpNY4AGuljPTNjQve6A==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "@vitest/pretty-format": "3.2.3",
+        "@vitest/pretty-format": "3.2.2",
         "loupe": "^3.1.3",
         "tinyrainbow": "^2.0.0"
       },
@@ -1379,6 +1509,45 @@
         "url": "https://opencollective.com/vitest"
       }
     },
+    "node_modules/acorn": {
+      "version": "8.14.1",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.14.1.tgz",
+      "integrity": "sha512-OvQ/2pUDKmgfCg++xsTX1wGxfTaszcHVcTctW4UJB4hibJx2HXxxO5UmVgyjMa+ZDsiaf5wWLXYpRWMmBI0QHg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-walk": {
+      "version": "8.3.4",
+      "resolved": "https://registry.npmjs.org/acorn-walk/-/acorn-walk-8.3.4.tgz",
+      "integrity": "sha512-ueEepnujpqee2o5aIYnvHU6C0A42MNdsIDeqy5BydrkuC5R1ZuUFnm27EeFJGoEHJQgn3uleRvmTXaJgfXbt4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "acorn": "^8.11.0"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/agent-base": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/agent-base/-/agent-base-6.0.2.tgz",
+      "integrity": "sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "debug": "4"
+      },
+      "engines": {
+        "node": ">= 6.0.0"
+      }
+    },
     "node_modules/ansi-escapes": {
       "version": "4.3.2",
       "resolved": "https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-4.3.2.tgz",
@@ -1418,27 +1587,41 @@
       }
     },
     "node_modules/ansi-styles": {
-      "version": "4.3.0",
-      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
-      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "version": "6.2.1",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-6.2.1.tgz",
+      "integrity": "sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==",
       "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "color-convert": "^2.0.1"
-      },
       "engines": {
-        "node": ">=8"
+        "node": ">=12"
       },
       "funding": {
         "url": "https://github.com/chalk/ansi-styles?sponsor=1"
       }
     },
+    "node_modules/arg": {
+      "version": "4.1.3",
+      "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
+      "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/argparse": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
       "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
       "license": "Python-2.0"
     },
+    "node_modules/array-union": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/array-union/-/array-union-2.1.0.tgz",
+      "integrity": "sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/assertion-error": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/assertion-error/-/assertion-error-2.0.1.tgz",
@@ -1461,6 +1644,27 @@
         "js-tokens": "^9.0.1"
       }
     },
+    "node_modules/ast-v8-to-istanbul/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/at-least-node": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/at-least-node/-/at-least-node-1.0.0.tgz",
+      "integrity": "sha512-+q/t7Ekv1EDY2l6Gda6LLiX14rU9TV20Wa3ofeQmwPFZbOMo9DXrLbOjFaaclkXKWidIaopwAObQDqwWtGUjqg==",
+      "dev": true,
+      "license": "ISC",
+      "engines": {
+        "node": ">= 4.0.0"
+      }
+    },
     "node_modules/balanced-match": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
@@ -1468,6 +1672,54 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/base64-js": {
+      "version": "1.5.1",
+      "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
+      "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/bl": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/bl/-/bl-4.1.0.tgz",
+      "integrity": "sha512-1W07cM9gS6DcLperZfFSj+bWLtaPGSOHWhPiGzXmvVJbRLdG82sH/Kn8EtW1VqWVA54AKf2h5k5BbnIbwF3h6w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "buffer": "^5.5.0",
+        "inherits": "^2.0.4",
+        "readable-stream": "^3.4.0"
+      }
+    },
+    "node_modules/bl/node_modules/readable-stream": {
+      "version": "3.6.2",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
+      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/brace-expansion": {
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz",
@@ -1478,23 +1730,61 @@
         "balanced-match": "^1.0.0"
       }
     },
-    "node_modules/c8": {
-      "version": "10.1.3",
-      "resolved": "https://registry.npmjs.org/c8/-/c8-10.1.3.tgz",
-      "integrity": "sha512-LvcyrOAaOnrrlMpW22n690PUvxiq4Uf9WMhQwNJ9vgagkL/ph1+D4uvjvDA5XCbykrc0sx+ay6pVi9YZ1GnhyA==",
+    "node_modules/braces": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
+      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
       "dev": true,
-      "license": "ISC",
+      "license": "MIT",
       "dependencies": {
-        "@bcoe/v8-coverage": "^1.0.1",
-        "@istanbuljs/schema": "^0.1.3",
-        "find-up": "^5.0.0",
-        "foreground-child": "^3.1.1",
-        "istanbul-lib-coverage": "^3.2.0",
-        "istanbul-lib-report": "^3.0.1",
-        "istanbul-reports": "^3.1.6",
-        "test-exclude": "^7.0.1",
-        "v8-to-istanbul": "^9.0.0",
-        "yargs": "^17.7.2",
+        "fill-range": "^7.1.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/buffer": {
+      "version": "5.7.1",
+      "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
+      "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "base64-js": "^1.3.1",
+        "ieee754": "^1.1.13"
+      }
+    },
+    "node_modules/c8": {
+      "version": "10.1.3",
+      "resolved": "https://registry.npmjs.org/c8/-/c8-10.1.3.tgz",
+      "integrity": "sha512-LvcyrOAaOnrrlMpW22n690PUvxiq4Uf9WMhQwNJ9vgagkL/ph1+D4uvjvDA5XCbykrc0sx+ay6pVi9YZ1GnhyA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "@bcoe/v8-coverage": "^1.0.1",
+        "@istanbuljs/schema": "^0.1.3",
+        "find-up": "^5.0.0",
+        "foreground-child": "^3.1.1",
+        "istanbul-lib-coverage": "^3.2.0",
+        "istanbul-lib-report": "^3.0.1",
+        "istanbul-reports": "^3.1.6",
+        "test-exclude": "^7.0.1",
+        "v8-to-istanbul": "^9.0.0",
+        "yargs": "^17.7.2",
         "yargs-parser": "^21.1.1"
       },
       "bin": {
@@ -1561,6 +1851,13 @@
         "node": ">= 16"
       }
     },
+    "node_modules/chownr": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/chownr/-/chownr-1.1.4.tgz",
+      "integrity": "sha512-jJ0bqzaylmJtVnNgzTeSOs8DPavpbYgEr/b0YL8/2GO3xJEhInFmhKMUnEJQjZumK7KXGFhUy89PrsJWlakBVg==",
+      "dev": true,
+      "license": "ISC"
+    },
     "node_modules/cli-table3": {
       "version": "0.6.5",
       "resolved": "https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.5.tgz",
@@ -1601,6 +1898,22 @@
         "node": ">=12"
       }
     },
+    "node_modules/cliui/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
     "node_modules/cliui/node_modules/wrap-ansi": {
       "version": "7.0.0",
       "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
@@ -1665,6 +1978,20 @@
         "node": ">= 0.6"
       }
     },
+    "node_modules/core-util-is": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
+      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/create-require": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/create-require/-/create-require-1.1.1.tgz",
+      "integrity": "sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/cross-spawn": {
       "version": "7.0.6",
       "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.6.tgz",
@@ -1707,6 +2034,22 @@
         }
       }
     },
+    "node_modules/decompress-response": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz",
+      "integrity": "sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "mimic-response": "^3.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/deep-eql": {
       "version": "5.0.2",
       "resolved": "https://registry.npmjs.org/deep-eql/-/deep-eql-5.0.2.tgz",
@@ -1717,6 +2060,49 @@
         "node": ">=6"
       }
     },
+    "node_modules/deep-extend": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/deep-extend/-/deep-extend-0.6.0.tgz",
+      "integrity": "sha512-LOHxIOaPYdHlJRtCQfDIVZtfw/ufM8+rVj649RIHzcm/vGwQRXFt6OPqIFWsm2XEMrNIEtWR64sY1LEKD2vAOA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4.0.0"
+      }
+    },
+    "node_modules/detect-libc": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/detect-libc/-/detect-libc-2.0.4.tgz",
+      "integrity": "sha512-3UDv+G9CsCKO1WKMGw9fwq/SWJYbI0c5Y7LU1AXYoDdbhE2AHQ6N6Nb34sG8Fj7T5APy8qXDCKuuIHd1BR0tVA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/diff": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
+      "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.3.1"
+      }
+    },
+    "node_modules/dir-glob": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/dir-glob/-/dir-glob-3.0.1.tgz",
+      "integrity": "sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "path-type": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/eastasianwidth": {
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/eastasianwidth/-/eastasianwidth-0.2.0.tgz",
@@ -1730,6 +2116,16 @@
       "integrity": "sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==",
       "license": "MIT"
     },
+    "node_modules/end-of-stream": {
+      "version": "1.4.4",
+      "resolved": "https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz",
+      "integrity": "sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "once": "^1.4.0"
+      }
+    },
     "node_modules/es-module-lexer": {
       "version": "1.7.0",
       "resolved": "https://registry.npmjs.org/es-module-lexer/-/es-module-lexer-1.7.0.tgz",
@@ -1798,6 +2194,16 @@
         "@types/estree": "^1.0.0"
       }
     },
+    "node_modules/expand-template": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/expand-template/-/expand-template-2.0.3.tgz",
+      "integrity": "sha512-XYfuKMvj4O35f/pOXLObndIRvyQ+/+6AhODh+OKWj9S9498pHHn/IMszH+gt0fBCRWMNfk1ZSp5x3AifmnI2vg==",
+      "dev": true,
+      "license": "(MIT OR WTFPL)",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/expect-type": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/expect-type/-/expect-type-1.2.1.tgz",
@@ -1808,10 +2214,37 @@
         "node": ">=12.0.0"
       }
     },
+    "node_modules/fast-glob": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/fast-glob/-/fast-glob-3.3.3.tgz",
+      "integrity": "sha512-7MptL8U0cqcFdzIzwOTHoilX9x5BrNqye7Z/LuC7kCMRio1EMSyqRK3BEAUD7sXRq4iT4AzTVuZdhgQ2TCvYLg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "^2.0.2",
+        "@nodelib/fs.walk": "^1.2.3",
+        "glob-parent": "^5.1.2",
+        "merge2": "^1.3.0",
+        "micromatch": "^4.0.8"
+      },
+      "engines": {
+        "node": ">=8.6.0"
+      }
+    },
+    "node_modules/fastq": {
+      "version": "1.19.1",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.19.1.tgz",
+      "integrity": "sha512-GwLTyxkCXjXbxqIhTsMI2Nui8huMPtnxg7krajPJAjnEG/iiOS7i+zCtWGZR9G0NBKbXKh6X9m9UIsYX/N6vvQ==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "reusify": "^1.0.4"
+      }
+    },
     "node_modules/fdir": {
-      "version": "6.4.6",
-      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.6.tgz",
-      "integrity": "sha512-hiFoqpyZcfNm1yc4u8oWCf9A2c4D3QjCrks3zmoVKVxpQRzmPNar1hUJcBG2RQHvEVGDN+Jm81ZheVLAQMK6+w==",
+      "version": "6.4.5",
+      "resolved": "https://registry.npmjs.org/fdir/-/fdir-6.4.5.tgz",
+      "integrity": "sha512-4BG7puHpVsIYxZUbiUE3RqGloLaSSwzYie5jvasC4LWuBWzZawynvYouhjbQKw2JuIGYdm0DzIxl8iVidKlUEw==",
       "dev": true,
       "license": "MIT",
       "peerDependencies": {
@@ -1853,6 +2286,19 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/fill-range": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
+      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "to-regex-range": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/find-up": {
       "version": "5.0.0",
       "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
@@ -1906,6 +2352,50 @@
         "node": ">=12.20.0"
       }
     },
+    "node_modules/from2": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/from2/-/from2-2.3.0.tgz",
+      "integrity": "sha512-OMcX/4IC/uqEPVgGeyfN22LJk6AZrMkRZHxcHBMBvHScDGgwTm2GT2Wkgtocyd3JfZffjj2kYUDXXII0Fk9W0g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "inherits": "^2.0.1",
+        "readable-stream": "^2.0.0"
+      }
+    },
+    "node_modules/fs-constants": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs-constants/-/fs-constants-1.0.0.tgz",
+      "integrity": "sha512-y6OAwoSIf7FyjMIv94u+b5rdheZEjzR63GTyZJm5qh4Bi+2YgwLCcI/fPFZkL5PSixOt6ZNKm+w+Hfp/Bciwow==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fs-extra": {
+      "version": "9.1.0",
+      "resolved": "https://registry.npmjs.org/fs-extra/-/fs-extra-9.1.0.tgz",
+      "integrity": "sha512-hcg3ZmepS30/7BSFqRvoo3DOMQu7IjqxO5nCDt+zM9XWjb33Wg7ziNT+Qvqbuc3+gWpzO02JubVyk2G4Zvo1OQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "at-least-node": "^1.0.0",
+        "graceful-fs": "^4.2.0",
+        "jsonfile": "^6.0.1",
+        "universalify": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/fs-extra/node_modules/universalify": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
+      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 10.0.0"
+      }
+    },
     "node_modules/fsevents": {
       "version": "2.3.3",
       "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
@@ -1921,6 +2411,16 @@
         "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
       }
     },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/get-caller-file": {
       "version": "2.0.5",
       "resolved": "https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz",
@@ -1931,6 +2431,13 @@
         "node": "6.* || 8.* || >= 10.*"
       }
     },
+    "node_modules/github-from-package": {
+      "version": "0.0.0",
+      "resolved": "https://registry.npmjs.org/github-from-package/-/github-from-package-0.0.0.tgz",
+      "integrity": "sha512-SyHy3T1v2NUXn29OsWdxmK6RwHD+vkj3v8en8AOBZ1wBQ/hCAQ5bAQTD02kW4W9tUp/3Qh6J8r9EvntiyCmOOw==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/glob": {
       "version": "10.4.5",
       "resolved": "https://registry.npmjs.org/glob/-/glob-10.4.5.tgz",
@@ -1952,6 +2459,47 @@
         "url": "https://github.com/sponsors/isaacs"
       }
     },
+    "node_modules/glob-parent": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
+      "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
+    "node_modules/globby": {
+      "version": "11.1.0",
+      "resolved": "https://registry.npmjs.org/globby/-/globby-11.1.0.tgz",
+      "integrity": "sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-union": "^2.1.0",
+        "dir-glob": "^3.0.1",
+        "fast-glob": "^3.2.9",
+        "ignore": "^5.2.0",
+        "merge2": "^1.4.1",
+        "slash": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/graceful-fs": {
+      "version": "4.2.11",
+      "resolved": "https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.11.tgz",
+      "integrity": "sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==",
+      "dev": true,
+      "license": "ISC"
+    },
     "node_modules/graphql": {
       "version": "16.11.0",
       "resolved": "https://registry.npmjs.org/graphql/-/graphql-16.11.0.tgz",
@@ -1962,6 +2510,16 @@
         "node": "^12.22.0 || ^14.16.0 || ^16.0.0 || >=17.0.0"
       }
     },
+    "node_modules/has": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/has/-/has-1.0.4.tgz",
+      "integrity": "sha512-qdSAmqLF6209RFj4VVItywPMbm3vWylknmB3nvNiUIs72xAimcM8nVYxYr7ncvZq5qzk9MKIZR8ijqD/1QuYjQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4.0"
+      }
+    },
     "node_modules/has-flag": {
       "version": "4.0.0",
       "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
@@ -1972,6 +2530,19 @@
         "node": ">=8"
       }
     },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
     "node_modules/headers-polyfill": {
       "version": "4.0.3",
       "resolved": "https://registry.npmjs.org/headers-polyfill/-/headers-polyfill-4.0.3.tgz",
@@ -1986,49 +2557,178 @@
       "dev": true,
       "license": "MIT"
     },
-    "node_modules/is-fullwidth-code-point": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
-      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
+    "node_modules/https-proxy-agent": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/https-proxy-agent/-/https-proxy-agent-5.0.1.tgz",
+      "integrity": "sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==",
+      "dev": true,
       "license": "MIT",
+      "dependencies": {
+        "agent-base": "6",
+        "debug": "4"
+      },
       "engines": {
-        "node": ">=8"
+        "node": ">= 6"
       }
     },
-    "node_modules/is-node-process": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/is-node-process/-/is-node-process-1.2.0.tgz",
-      "integrity": "sha512-Vg4o6/fqPxIjtxgUH5QLJhwZ7gW5diGCVlXpuUfELC62CuxM1iHcRe51f2W1FDy04Ai4KJkagKjx3XaqyfRKXw==",
+    "node_modules/ieee754": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
+      "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
       "dev": true,
-      "license": "MIT"
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "BSD-3-Clause"
     },
-    "node_modules/isexe": {
-      "version": "2.0.0",
-      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
-      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+    "node_modules/ignore": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
+      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
       "dev": true,
       "license": "ISC"
     },
-    "node_modules/istanbul-lib-coverage": {
-      "version": "3.2.2",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz",
-      "integrity": "sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==",
+    "node_modules/ini": {
+      "version": "1.3.8",
+      "resolved": "https://registry.npmjs.org/ini/-/ini-1.3.8.tgz",
+      "integrity": "sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==",
       "dev": true,
-      "license": "BSD-3-Clause",
-      "engines": {
-        "node": ">=8"
-      }
+      "license": "ISC"
     },
-    "node_modules/istanbul-lib-report": {
-      "version": "3.0.1",
-      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz",
-      "integrity": "sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==",
+    "node_modules/into-stream": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/into-stream/-/into-stream-6.0.0.tgz",
+      "integrity": "sha512-XHbaOAvP+uFKUFsOgoNPRjLkwB+I22JFPFe5OjTkQ0nwgj6+pSjb4NmB6VMxaPshLiOf+zcpOCBQuLwC1KHhZA==",
       "dev": true,
-      "license": "BSD-3-Clause",
+      "license": "MIT",
       "dependencies": {
-        "istanbul-lib-coverage": "^3.0.0",
-        "make-dir": "^4.0.0",
-        "supports-color": "^7.1.0"
+        "from2": "^2.3.0",
+        "p-is-promise": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.9.0",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.9.0.tgz",
+      "integrity": "sha512-+5FPy5PnwmO3lvfMb0AsoPaBG+5KHUI0wYFXOtYPnVVVspTFUuMZNfNaNVRt3FZadstu2c8x23vykRW/NBoU6A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has": "^1.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-fullwidth-code-point": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz",
+      "integrity": "sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-node-process": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/is-node-process/-/is-node-process-1.2.0.tgz",
+      "integrity": "sha512-Vg4o6/fqPxIjtxgUH5QLJhwZ7gW5diGCVlXpuUfELC62CuxM1iHcRe51f2W1FDy04Ai4KJkagKjx3XaqyfRKXw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/is-number": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
+      "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.12.0"
+      }
+    },
+    "node_modules/isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/istanbul-lib-coverage": {
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-coverage/-/istanbul-lib-coverage-3.2.2.tgz",
+      "integrity": "sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/istanbul-lib-report": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/istanbul-lib-report/-/istanbul-lib-report-3.0.1.tgz",
+      "integrity": "sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "istanbul-lib-coverage": "^3.0.0",
+        "make-dir": "^4.0.0",
+        "supports-color": "^7.1.0"
       },
       "engines": {
         "node": ">=10"
@@ -2049,6 +2749,17 @@
         "node": ">=10"
       }
     },
+    "node_modules/istanbul-lib-source-maps/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
     "node_modules/istanbul-reports": {
       "version": "3.1.7",
       "resolved": "https://registry.npmjs.org/istanbul-reports/-/istanbul-reports-3.1.7.tgz",
@@ -2098,6 +2809,42 @@
         "js-yaml": "bin/js-yaml.js"
       }
     },
+    "node_modules/jsesc": {
+      "version": "2.5.2",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-2.5.2.tgz",
+      "integrity": "sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/jsonfile": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/jsonfile/-/jsonfile-6.1.0.tgz",
+      "integrity": "sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "universalify": "^2.0.0"
+      },
+      "optionalDependencies": {
+        "graceful-fs": "^4.1.6"
+      }
+    },
+    "node_modules/jsonfile/node_modules/universalify": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/universalify/-/universalify-2.0.1.tgz",
+      "integrity": "sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 10.0.0"
+      }
+    },
     "node_modules/locate-path": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
@@ -2166,6 +2913,63 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/make-error": {
+      "version": "1.3.6",
+      "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
+      "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/merge2": {
+      "version": "1.4.1",
+      "resolved": "https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz",
+      "integrity": "sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/micromatch": {
+      "version": "4.0.8",
+      "resolved": "https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz",
+      "integrity": "sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "braces": "^3.0.3",
+        "picomatch": "^2.3.1"
+      },
+      "engines": {
+        "node": ">=8.6"
+      }
+    },
+    "node_modules/micromatch/node_modules/picomatch": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
+      "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8.6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/jonschlinkert"
+      }
+    },
+    "node_modules/mimic-response": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz",
+      "integrity": "sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
     "node_modules/minimatch": {
       "version": "9.0.5",
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-9.0.5.tgz",
@@ -2182,6 +2986,16 @@
         "url": "https://github.com/sponsors/isaacs"
       }
     },
+    "node_modules/minimist": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
+      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
     "node_modules/minipass": {
       "version": "7.1.2",
       "resolved": "https://registry.npmjs.org/minipass/-/minipass-7.1.2.tgz",
@@ -2192,6 +3006,13 @@
         "node": ">=16 || 14 >=14.17"
       }
     },
+    "node_modules/mkdirp-classic": {
+      "version": "0.5.3",
+      "resolved": "https://registry.npmjs.org/mkdirp-classic/-/mkdirp-classic-0.5.3.tgz",
+      "integrity": "sha512-gKLcREMhtuZRwRAfqP3RFW+TK4JqApVBtOIftVgjuABpAtpxhPGaDcfvbhNvD0B8iD1oUr/txX35NjcaY6Ns/A==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/mock-fs": {
       "version": "5.5.0",
       "resolved": "https://registry.npmjs.org/mock-fs/-/mock-fs-5.5.0.tgz",
@@ -2220,9 +3041,9 @@
       "license": "MIT"
     },
     "node_modules/msw": {
-      "version": "2.10.2",
-      "resolved": "https://registry.npmjs.org/msw/-/msw-2.10.2.tgz",
-      "integrity": "sha512-RCKM6IZseZQCWcSWlutdf590M8nVfRHG1ImwzOtwz8IYxgT4zhUO0rfTcTvDGiaFE0Rhcc+h43lcF3Jc9gFtwQ==",
+      "version": "2.9.0",
+      "resolved": "https://registry.npmjs.org/msw/-/msw-2.9.0.tgz",
+      "integrity": "sha512-fNyrJ11YNbe2zl64EwtxM5OFkInFPAw5vipOljMsf9lY2ep9B2BslqQrS8EC9pB9961K61FqTUi0wsdqk6hwow==",
       "dev": true,
       "hasInstallScript": true,
       "license": "MIT",
@@ -2231,7 +3052,7 @@
         "@bundled-es-modules/statuses": "^1.0.1",
         "@bundled-es-modules/tough-cookie": "^0.1.6",
         "@inquirer/confirm": "^5.0.0",
-        "@mswjs/interceptors": "^0.39.1",
+        "@mswjs/interceptors": "^0.38.7",
         "@open-draft/deferred-promise": "^2.2.0",
         "@open-draft/until": "^2.1.0",
         "@types/cookie": "^0.6.0",
@@ -2264,6 +3085,46 @@
         }
       }
     },
+    "node_modules/multistream": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/multistream/-/multistream-4.1.0.tgz",
+      "integrity": "sha512-J1XDiAmmNpRCBfIWJv+n0ymC4ABcf/Pl+5YvC5B/D2f/2+8PtHvCNxMPKiQcZyi922Hq69J2YOpb1pTywfifyw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "once": "^1.4.0",
+        "readable-stream": "^3.6.0"
+      }
+    },
+    "node_modules/multistream/node_modules/readable-stream": {
+      "version": "3.6.2",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
+      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/mute-stream": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/mute-stream/-/mute-stream-2.0.0.tgz",
@@ -2293,6 +3154,26 @@
         "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
       }
     },
+    "node_modules/napi-build-utils": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/napi-build-utils/-/napi-build-utils-1.0.2.tgz",
+      "integrity": "sha512-ONmRUqK7zj7DWX0D9ADe03wbwOBZxNAfF20PlGfCWQcD3+/MakShIHrMqx9YwPTfxDdF1zLeL+RGZiR9kGMLdg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/node-abi": {
+      "version": "3.75.0",
+      "resolved": "https://registry.npmjs.org/node-abi/-/node-abi-3.75.0.tgz",
+      "integrity": "sha512-OhYaY5sDsIka7H7AtijtI9jwGYLyl29eQn/W623DiN/MIv5sUqc4g7BIDThX+gb7di9f6xK02nkp8sdfFWZLTg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "semver": "^7.3.5"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
     "node_modules/node-domexception": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/node-domexception/-/node-domexception-1.0.0.tgz",
@@ -2331,6 +3212,16 @@
         "url": "https://opencollective.com/node-fetch"
       }
     },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
     "node_modules/outvariant": {
       "version": "1.4.3",
       "resolved": "https://registry.npmjs.org/outvariant/-/outvariant-1.4.3.tgz",
@@ -2338,6 +3229,16 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/p-is-promise": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/p-is-promise/-/p-is-promise-3.0.0.tgz",
+      "integrity": "sha512-Wo8VsW4IRQSKVXsJCn7TomUaVtyfjVDn3nUP7kE967BQk0CwFpdbZs0X0uk5sW9mkBa9eNM7hCMaG93WUAwxYQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/p-limit": {
       "version": "3.1.0",
       "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
@@ -2397,6 +3298,13 @@
         "node": ">=8"
       }
     },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/path-scurry": {
       "version": "1.11.1",
       "resolved": "https://registry.npmjs.org/path-scurry/-/path-scurry-1.11.1.tgz",
@@ -2421,6 +3329,16 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/path-type": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-type/-/path-type-4.0.0.tgz",
+      "integrity": "sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/pathe": {
       "version": "2.0.3",
       "resolved": "https://registry.npmjs.org/pathe/-/pathe-2.0.3.tgz",
@@ -2458,6 +3376,234 @@
         "url": "https://github.com/sponsors/jonschlinkert"
       }
     },
+    "node_modules/pkg": {
+      "version": "5.8.1",
+      "resolved": "https://registry.npmjs.org/pkg/-/pkg-5.8.1.tgz",
+      "integrity": "sha512-CjBWtFStCfIiT4Bde9QpJy0KeH19jCfwZRJqHFDFXfhUklCx8JoFmMj3wgnEYIwGmZVNkhsStPHEOnrtrQhEXA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/generator": "7.18.2",
+        "@babel/parser": "7.18.4",
+        "@babel/types": "7.19.0",
+        "chalk": "^4.1.2",
+        "fs-extra": "^9.1.0",
+        "globby": "^11.1.0",
+        "into-stream": "^6.0.0",
+        "is-core-module": "2.9.0",
+        "minimist": "^1.2.6",
+        "multistream": "^4.1.0",
+        "pkg-fetch": "3.4.2",
+        "prebuild-install": "7.1.1",
+        "resolve": "^1.22.0",
+        "stream-meter": "^1.0.4"
+      },
+      "bin": {
+        "pkg": "lib-es5/bin.js"
+      },
+      "peerDependencies": {
+        "node-notifier": ">=9.0.1"
+      },
+      "peerDependenciesMeta": {
+        "node-notifier": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/pkg-fetch": {
+      "version": "3.4.2",
+      "resolved": "https://registry.npmjs.org/pkg-fetch/-/pkg-fetch-3.4.2.tgz",
+      "integrity": "sha512-0+uijmzYcnhC0hStDjm/cl2VYdrmVVBpe7Q8k9YBojxmR5tG8mvR9/nooQq3QSXiQqORDVOTY3XqMEqJVIzkHA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "chalk": "^4.1.2",
+        "fs-extra": "^9.1.0",
+        "https-proxy-agent": "^5.0.0",
+        "node-fetch": "^2.6.6",
+        "progress": "^2.0.3",
+        "semver": "^7.3.5",
+        "tar-fs": "^2.1.1",
+        "yargs": "^16.2.0"
+      },
+      "bin": {
+        "pkg-fetch": "lib-es5/bin.js"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/cliui": {
+      "version": "7.0.4",
+      "resolved": "https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz",
+      "integrity": "sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "string-width": "^4.2.0",
+        "strip-ansi": "^6.0.0",
+        "wrap-ansi": "^7.0.0"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/node-fetch": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/node-fetch/-/node-fetch-2.7.0.tgz",
+      "integrity": "sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "whatwg-url": "^5.0.0"
+      },
+      "engines": {
+        "node": "4.x || >=6.0.0"
+      },
+      "peerDependencies": {
+        "encoding": "^0.1.0"
+      },
+      "peerDependenciesMeta": {
+        "encoding": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/wrap-ansi": {
+      "version": "7.0.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz",
+      "integrity": "sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.0.0",
+        "string-width": "^4.1.0",
+        "strip-ansi": "^6.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/yargs": {
+      "version": "16.2.0",
+      "resolved": "https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz",
+      "integrity": "sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "cliui": "^7.0.2",
+        "escalade": "^3.1.1",
+        "get-caller-file": "^2.0.5",
+        "require-directory": "^2.1.1",
+        "string-width": "^4.2.0",
+        "y18n": "^5.0.5",
+        "yargs-parser": "^20.2.2"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/pkg-fetch/node_modules/yargs-parser": {
+      "version": "20.2.9",
+      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.9.tgz",
+      "integrity": "sha512-y11nGElTIV+CT3Zv9t7VKl+Q3hTQoT9a1Qzezhhl6Rp21gJ/IVTW7Z3y9EWXhuUBC2Shnf+DX0antecpAwSP8w==",
+      "dev": true,
+      "license": "ISC",
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/pkg/node_modules/@babel/parser": {
+      "version": "7.18.4",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.18.4.tgz",
+      "integrity": "sha512-FDge0dFazETFcxGw/EXzOkN8uJp0PC7Qbm+Pe9T+av2zlBpOgunFHkQPPn+eRuClU73JF+98D531UgayY89tow==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/pkg/node_modules/@babel/types": {
+      "version": "7.19.0",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.19.0.tgz",
+      "integrity": "sha512-YuGopBq3ke25BVSiS6fgF49Ul9gH1x70Bcr6bqRLjWCkcX8Hre1/5+z+IiWOIerRMSSEfGZVB9z9kyq7wVs9YA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.18.10",
+        "@babel/helper-validator-identifier": "^7.18.6",
+        "to-fast-properties": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/pkg/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/pkg/node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
     "node_modules/postcss": {
       "version": "8.5.4",
       "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.4.tgz",
@@ -2487,6 +3633,50 @@
         "node": "^10 || ^12 || >=14"
       }
     },
+    "node_modules/prebuild-install": {
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/prebuild-install/-/prebuild-install-7.1.1.tgz",
+      "integrity": "sha512-jAXscXWMcCK8GgCoHOfIr0ODh5ai8mj63L2nWrjuAgXE6tDyYGnx4/8o/rCgU+B4JSyZBKbeZqzhtwtC3ovxjw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "detect-libc": "^2.0.0",
+        "expand-template": "^2.0.3",
+        "github-from-package": "0.0.0",
+        "minimist": "^1.2.3",
+        "mkdirp-classic": "^0.5.3",
+        "napi-build-utils": "^1.0.1",
+        "node-abi": "^3.3.0",
+        "pump": "^3.0.0",
+        "rc": "^1.2.7",
+        "simple-get": "^4.0.0",
+        "tar-fs": "^2.0.0",
+        "tunnel-agent": "^0.6.0"
+      },
+      "bin": {
+        "prebuild-install": "bin.js"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/progress": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/progress/-/progress-2.0.3.tgz",
+      "integrity": "sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
     "node_modules/psl": {
       "version": "1.15.0",
       "resolved": "https://registry.npmjs.org/psl/-/psl-1.15.0.tgz",
@@ -2500,6 +3690,17 @@
         "url": "https://github.com/sponsors/lupomontero"
       }
     },
+    "node_modules/pump": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/pump/-/pump-3.0.2.tgz",
+      "integrity": "sha512-tUPXtzlGM8FE3P0ZL6DVs/3P58k9nk8/jZeQCurTJylQA8qFYzHFfhBJkuqyE0FifOsQ0uKWekiZ5g8wtr28cw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "end-of-stream": "^1.1.0",
+        "once": "^1.3.1"
+      }
+    },
     "node_modules/punycode": {
       "version": "2.3.1",
       "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
@@ -2517,6 +3718,59 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/queue-microtask": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
+      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/rc": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/rc/-/rc-1.2.8.tgz",
+      "integrity": "sha512-y3bGgqKj3QBdxLbLkomlohkvsA8gdAiUQlSBJnBhfn+BPxg4bc62d8TcBW15wavDfgexCgccckhcZvywyQYPOw==",
+      "dev": true,
+      "license": "(BSD-2-Clause OR MIT OR Apache-2.0)",
+      "dependencies": {
+        "deep-extend": "^0.6.0",
+        "ini": "~1.3.0",
+        "minimist": "^1.2.0",
+        "strip-json-comments": "~2.0.1"
+      },
+      "bin": {
+        "rc": "cli.js"
+      }
+    },
+    "node_modules/readable-stream": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
+      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "core-util-is": "~1.0.0",
+        "inherits": "~2.0.3",
+        "isarray": "~1.0.0",
+        "process-nextick-args": "~2.0.0",
+        "safe-buffer": "~5.1.1",
+        "string_decoder": "~1.1.1",
+        "util-deprecate": "~1.0.1"
+      }
+    },
     "node_modules/require-directory": {
       "version": "2.1.1",
       "resolved": "https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz",
@@ -2534,10 +3788,58 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/resolve": {
+      "version": "1.22.10",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-1.22.10.tgz",
+      "integrity": "sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.16.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/resolve/node_modules/is-core-module": {
+      "version": "2.16.1",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.16.1.tgz",
+      "integrity": "sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/reusify": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.1.0.tgz",
+      "integrity": "sha512-g6QUff04oZpHs0eG5p83rFLhHeV00ug/Yf9nZM6fLeUrPguBTkTQOdpAWWspMh55TZfVQDPaN3NQJfbVRAxdIw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "iojs": ">=1.0.0",
+        "node": ">=0.10.0"
+      }
+    },
     "node_modules/rollup": {
-      "version": "4.42.0",
-      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.42.0.tgz",
-      "integrity": "sha512-LW+Vse3BJPyGJGAJt1j8pWDKPd73QM8cRXYK1IxOBgL2AGLu7Xd2YOW0M2sLUBCkF5MshXXtMApyEAEzMVMsnw==",
+      "version": "4.41.1",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.41.1.tgz",
+      "integrity": "sha512-cPmwD3FnFv8rKMBc1MxWCwVQFxwf1JEmSX3iQXrRVVG15zerAIXRjMFVWnd5Q5QvgKF7Aj+5ykXFhUl+QGnyOw==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -2551,33 +3853,57 @@
         "npm": ">=8.0.0"
       },
       "optionalDependencies": {
-        "@rollup/rollup-android-arm-eabi": "4.42.0",
-        "@rollup/rollup-android-arm64": "4.42.0",
-        "@rollup/rollup-darwin-arm64": "4.42.0",
-        "@rollup/rollup-darwin-x64": "4.42.0",
-        "@rollup/rollup-freebsd-arm64": "4.42.0",
-        "@rollup/rollup-freebsd-x64": "4.42.0",
-        "@rollup/rollup-linux-arm-gnueabihf": "4.42.0",
-        "@rollup/rollup-linux-arm-musleabihf": "4.42.0",
-        "@rollup/rollup-linux-arm64-gnu": "4.42.0",
-        "@rollup/rollup-linux-arm64-musl": "4.42.0",
-        "@rollup/rollup-linux-loongarch64-gnu": "4.42.0",
-        "@rollup/rollup-linux-powerpc64le-gnu": "4.42.0",
-        "@rollup/rollup-linux-riscv64-gnu": "4.42.0",
-        "@rollup/rollup-linux-riscv64-musl": "4.42.0",
-        "@rollup/rollup-linux-s390x-gnu": "4.42.0",
-        "@rollup/rollup-linux-x64-gnu": "4.42.0",
-        "@rollup/rollup-linux-x64-musl": "4.42.0",
-        "@rollup/rollup-win32-arm64-msvc": "4.42.0",
-        "@rollup/rollup-win32-ia32-msvc": "4.42.0",
-        "@rollup/rollup-win32-x64-msvc": "4.42.0",
+        "@rollup/rollup-android-arm-eabi": "4.41.1",
+        "@rollup/rollup-android-arm64": "4.41.1",
+        "@rollup/rollup-darwin-arm64": "4.41.1",
+        "@rollup/rollup-darwin-x64": "4.41.1",
+        "@rollup/rollup-freebsd-arm64": "4.41.1",
+        "@rollup/rollup-freebsd-x64": "4.41.1",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.41.1",
+        "@rollup/rollup-linux-arm-musleabihf": "4.41.1",
+        "@rollup/rollup-linux-arm64-gnu": "4.41.1",
+        "@rollup/rollup-linux-arm64-musl": "4.41.1",
+        "@rollup/rollup-linux-loongarch64-gnu": "4.41.1",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.41.1",
+        "@rollup/rollup-linux-riscv64-gnu": "4.41.1",
+        "@rollup/rollup-linux-riscv64-musl": "4.41.1",
+        "@rollup/rollup-linux-s390x-gnu": "4.41.1",
+        "@rollup/rollup-linux-x64-gnu": "4.41.1",
+        "@rollup/rollup-linux-x64-musl": "4.41.1",
+        "@rollup/rollup-win32-arm64-msvc": "4.41.1",
+        "@rollup/rollup-win32-ia32-msvc": "4.41.1",
+        "@rollup/rollup-win32-x64-msvc": "4.41.1",
         "fsevents": "~2.3.2"
       }
     },
-    "node_modules/rollup/node_modules/@types/estree": {
-      "version": "1.0.7",
-      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.7.tgz",
-      "integrity": "sha512-w28IoSUCJpidD/TGviZwwMJckNESJZXFu7NBZ5YJ4mEUnNraUn9Pm8HSZm/jDF1pDWYKspWE7oVphigUPRakIQ==",
+    "node_modules/run-parallel": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
+      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "queue-microtask": "^1.2.2"
+      }
+    },
+    "node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
       "dev": true,
       "license": "MIT"
     },
@@ -2624,17 +3950,64 @@
       "dev": true,
       "license": "ISC"
     },
-    "node_modules/signal-exit": {
-      "version": "4.1.0",
-      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
-      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
+    "node_modules/signal-exit": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/signal-exit/-/signal-exit-4.1.0.tgz",
+      "integrity": "sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==",
+      "dev": true,
+      "license": "ISC",
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/simple-concat": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/simple-concat/-/simple-concat-1.0.1.tgz",
+      "integrity": "sha512-cSFtAPtRhljv69IK0hTVZQ+OfE9nePi/rtJmw5UjHeVyVroEqJXP1sFztKUy1qU+xvz3u/sfYJLa947b7nAN2Q==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/simple-get": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/simple-get/-/simple-get-4.0.1.tgz",
+      "integrity": "sha512-brv7p5WgH0jmQJr1ZDDfKDOSeWWg+OVypG99A/5vYGPqJ6pxiaHLy8nxtFjBA7oMa01ebA9gfh1uMCFqOuXxvA==",
       "dev": true,
-      "license": "ISC",
-      "engines": {
-        "node": ">=14"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/isaacs"
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "decompress-response": "^6.0.0",
+        "once": "^1.3.1",
+        "simple-concat": "^1.0.0"
       }
     },
     "node_modules/sirv": {
@@ -2652,6 +4025,16 @@
         "node": ">=18"
       }
     },
+    "node_modules/slash": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/slash/-/slash-3.0.0.tgz",
+      "integrity": "sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
     "node_modules/source-map-js": {
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
@@ -2670,9 +4053,9 @@
       "license": "MIT"
     },
     "node_modules/statuses": {
-      "version": "2.0.2",
-      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.2.tgz",
-      "integrity": "sha512-DvEy55V3DB7uknRo+4iOGT5fP1slR8wQohVdknigZPMpMstaKJQWhwiYBACJE3Ul2pTnATihhBYnRhZQHGBiRw==",
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
+      "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
       "dev": true,
       "license": "MIT",
       "engines": {
@@ -2686,6 +4069,16 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/stream-meter": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/stream-meter/-/stream-meter-1.0.4.tgz",
+      "integrity": "sha512-4sOEtrbgFotXwnEuzzsQBYEV1elAeFSO8rSGeTwabuX1RRn/kEq9JVH7I0MRBhKVRR0sJkr0M0QCH7yOLf9fhQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "readable-stream": "^2.1.4"
+      }
+    },
     "node_modules/strict-event-emitter": {
       "version": "0.5.1",
       "resolved": "https://registry.npmjs.org/strict-event-emitter/-/strict-event-emitter-0.5.1.tgz",
@@ -2693,6 +4086,16 @@
       "dev": true,
       "license": "MIT"
     },
+    "node_modules/string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
     "node_modules/string-width": {
       "version": "4.2.3",
       "resolved": "https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz",
@@ -2749,17 +4152,14 @@
         "node": ">=8"
       }
     },
-    "node_modules/strip-literal": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/strip-literal/-/strip-literal-3.0.0.tgz",
-      "integrity": "sha512-TcccoMhJOM3OebGhSBEmp3UZ2SfDMZUEBdRA/9ynfLi8yYajyWX3JiXArcJt4Umh4vISpspkQIY8ZZoCqjbviA==",
+    "node_modules/strip-json-comments": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-2.0.1.tgz",
+      "integrity": "sha512-4gB8na07fecVVkOI6Rs4e7T6NOTki5EmL7TUduTs6bu3EdnSycntVJ4re8kgZA+wx9IueI2Y11bfbgwtzuE0KQ==",
       "dev": true,
       "license": "MIT",
-      "dependencies": {
-        "js-tokens": "^9.0.1"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/antfu"
+      "engines": {
+        "node": ">=0.10.0"
       }
     },
     "node_modules/supports-color": {
@@ -2775,6 +4175,64 @@
         "node": ">=8"
       }
     },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/tar-fs": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.3.tgz",
+      "integrity": "sha512-090nwYJDmlhwFwEW3QQl+vaNnxsO2yVsd45eTKRBzSzu+hlb1w2K9inVq5b0ngXuLVqQ4ApvsUHHnu/zQNkWAg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "chownr": "^1.1.1",
+        "mkdirp-classic": "^0.5.2",
+        "pump": "^3.0.0",
+        "tar-stream": "^2.1.4"
+      }
+    },
+    "node_modules/tar-stream": {
+      "version": "2.2.0",
+      "resolved": "https://registry.npmjs.org/tar-stream/-/tar-stream-2.2.0.tgz",
+      "integrity": "sha512-ujeqbceABgwMZxEJnk2HDY2DlnUZ+9oEcb1KzTVfYHio0UE6dG71n60d8D2I4qNvleWrrXpmjpt7vZeF1LnMZQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "bl": "^4.0.3",
+        "end-of-stream": "^1.4.1",
+        "fs-constants": "^1.0.0",
+        "inherits": "^2.0.3",
+        "readable-stream": "^3.1.1"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/tar-stream/node_modules/readable-stream": {
+      "version": "3.6.2",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-3.6.2.tgz",
+      "integrity": "sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "inherits": "^2.0.3",
+        "string_decoder": "^1.1.1",
+        "util-deprecate": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/test-exclude": {
       "version": "7.0.1",
       "resolved": "https://registry.npmjs.org/test-exclude/-/test-exclude-7.0.1.tgz",
@@ -2851,6 +4309,29 @@
         "node": ">=14.0.0"
       }
     },
+    "node_modules/to-fast-properties": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
+      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/to-regex-range": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
+      "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-number": "^7.0.0"
+      },
+      "engines": {
+        "node": ">=8.0"
+      }
+    },
     "node_modules/totalist": {
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/totalist/-/totalist-3.0.1.tgz",
@@ -2877,6 +4358,70 @@
         "node": ">=6"
       }
     },
+    "node_modules/tr46": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/tr46/-/tr46-0.0.3.tgz",
+      "integrity": "sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/ts-node": {
+      "version": "10.9.2",
+      "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-10.9.2.tgz",
+      "integrity": "sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@cspotcode/source-map-support": "^0.8.0",
+        "@tsconfig/node10": "^1.0.7",
+        "@tsconfig/node12": "^1.0.7",
+        "@tsconfig/node14": "^1.0.0",
+        "@tsconfig/node16": "^1.0.2",
+        "acorn": "^8.4.1",
+        "acorn-walk": "^8.1.1",
+        "arg": "^4.1.0",
+        "create-require": "^1.1.0",
+        "diff": "^4.0.1",
+        "make-error": "^1.1.1",
+        "v8-compile-cache-lib": "^3.0.1",
+        "yn": "3.1.1"
+      },
+      "bin": {
+        "ts-node": "dist/bin.js",
+        "ts-node-cwd": "dist/bin-cwd.js",
+        "ts-node-esm": "dist/bin-esm.js",
+        "ts-node-script": "dist/bin-script.js",
+        "ts-node-transpile-only": "dist/bin-transpile.js",
+        "ts-script": "dist/bin-script-deprecated.js"
+      },
+      "peerDependencies": {
+        "@swc/core": ">=1.2.50",
+        "@swc/wasm": ">=1.2.50",
+        "@types/node": "*",
+        "typescript": ">=2.7"
+      },
+      "peerDependenciesMeta": {
+        "@swc/core": {
+          "optional": true
+        },
+        "@swc/wasm": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/tunnel-agent": {
+      "version": "0.6.0",
+      "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
+      "integrity": "sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "safe-buffer": "^5.0.1"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
     "node_modules/type-fest": {
       "version": "4.41.0",
       "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-4.41.0.tgz",
@@ -2890,6 +4435,27 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
+    "node_modules/typescript": {
+      "version": "5.8.3",
+      "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.8.3.tgz",
+      "integrity": "sha512-p1diW6TqL9L07nNxvRMM7hMMw4c5XOo/1ibL4aAIGmSAt9slTE1Xgw5KWuof2uTOvCg9BY7ZRi+GaF+7sfgPeQ==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "bin": {
+        "tsc": "bin/tsc",
+        "tsserver": "bin/tsserver"
+      },
+      "engines": {
+        "node": ">=14.17"
+      }
+    },
+    "node_modules/undici-types": {
+      "version": "6.19.8",
+      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",
+      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/universalify": {
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/universalify/-/universalify-0.2.0.tgz",
@@ -2911,6 +4477,20 @@
         "requires-port": "^1.0.0"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/v8-compile-cache-lib": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/v8-compile-cache-lib/-/v8-compile-cache-lib-3.0.1.tgz",
+      "integrity": "sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==",
+      "dev": true,
+      "license": "MIT"
+    },
     "node_modules/v8-to-istanbul": {
       "version": "9.3.0",
       "resolved": "https://registry.npmjs.org/v8-to-istanbul/-/v8-to-istanbul-9.3.0.tgz",
@@ -2926,6 +4506,17 @@
         "node": ">=10.12.0"
       }
     },
+    "node_modules/v8-to-istanbul/node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
     "node_modules/vite": {
       "version": "6.3.5",
       "resolved": "https://registry.npmjs.org/vite/-/vite-6.3.5.tgz",
@@ -3002,9 +4593,9 @@
       }
     },
     "node_modules/vite-node": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/vite-node/-/vite-node-3.2.3.tgz",
-      "integrity": "sha512-gc8aAifGuDIpZHrPjuHyP4dpQmYXqWw7D1GmDnWeNWP654UEXzVfQ5IHPSK5HaHkwB/+p1atpYpSdw/2kOv8iQ==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/vite-node/-/vite-node-3.2.2.tgz",
+      "integrity": "sha512-Xj/jovjZvDXOq2FgLXu8NsY4uHUMWtzVmMC2LkCu9HWdr9Qu1Is5sanX3Z4jOFKdohfaWDnEJWp9pRP0vVpAcA==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
@@ -3025,20 +4616,20 @@
       }
     },
     "node_modules/vitest": {
-      "version": "3.2.3",
-      "resolved": "https://registry.npmjs.org/vitest/-/vitest-3.2.3.tgz",
-      "integrity": "sha512-E6U2ZFXe3N/t4f5BwUaVCKRLHqUpk1CBWeMh78UT4VaTPH/2dyvH6ALl29JTovEPu9dVKr/K/J4PkXgrMbw4Ww==",
+      "version": "3.2.2",
+      "resolved": "https://registry.npmjs.org/vitest/-/vitest-3.2.2.tgz",
+      "integrity": "sha512-fyNn/Rp016Bt5qvY0OQvIUCwW2vnaEBLxP42PmKbNIoasSYjML+8xyeADOPvBe+Xfl/ubIw4og7Lt9jflRsCNw==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
         "@types/chai": "^5.2.2",
-        "@vitest/expect": "3.2.3",
-        "@vitest/mocker": "3.2.3",
-        "@vitest/pretty-format": "^3.2.3",
-        "@vitest/runner": "3.2.3",
-        "@vitest/snapshot": "3.2.3",
-        "@vitest/spy": "3.2.3",
-        "@vitest/utils": "3.2.3",
+        "@vitest/expect": "3.2.2",
+        "@vitest/mocker": "3.2.2",
+        "@vitest/pretty-format": "^3.2.2",
+        "@vitest/runner": "3.2.2",
+        "@vitest/snapshot": "3.2.2",
+        "@vitest/spy": "3.2.2",
+        "@vitest/utils": "3.2.2",
         "chai": "^5.2.0",
         "debug": "^4.4.1",
         "expect-type": "^1.2.1",
@@ -3052,7 +4643,7 @@
         "tinypool": "^1.1.0",
         "tinyrainbow": "^2.0.0",
         "vite": "^5.0.0 || ^6.0.0 || ^7.0.0-0",
-        "vite-node": "3.2.3",
+        "vite-node": "3.2.2",
         "why-is-node-running": "^2.3.0"
       },
       "bin": {
@@ -3068,8 +4659,8 @@
         "@edge-runtime/vm": "*",
         "@types/debug": "^4.1.12",
         "@types/node": "^18.0.0 || ^20.0.0 || >=22.0.0",
-        "@vitest/browser": "3.2.3",
-        "@vitest/ui": "3.2.3",
+        "@vitest/browser": "3.2.2",
+        "@vitest/ui": "3.2.2",
         "happy-dom": "*",
         "jsdom": "*"
       },
@@ -3106,6 +4697,24 @@
         "node": ">= 8"
       }
     },
+    "node_modules/webidl-conversions": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/webidl-conversions/-/webidl-conversions-3.0.1.tgz",
+      "integrity": "sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==",
+      "dev": true,
+      "license": "BSD-2-Clause"
+    },
+    "node_modules/whatwg-url": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/whatwg-url/-/whatwg-url-5.0.0.tgz",
+      "integrity": "sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "tr46": "~0.0.3",
+        "webidl-conversions": "^3.0.0"
+      }
+    },
     "node_modules/which": {
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
@@ -3140,18 +4749,21 @@
       }
     },
     "node_modules/wrap-ansi": {
-      "version": "6.2.0",
-      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz",
-      "integrity": "sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==",
+      "version": "8.1.0",
+      "resolved": "https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-8.1.0.tgz",
+      "integrity": "sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==",
       "dev": true,
       "license": "MIT",
       "dependencies": {
-        "ansi-styles": "^4.0.0",
-        "string-width": "^4.1.0",
-        "strip-ansi": "^6.0.0"
+        "ansi-styles": "^6.1.0",
+        "string-width": "^5.0.1",
+        "strip-ansi": "^7.0.1"
       },
       "engines": {
-        "node": ">=8"
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
       }
     },
     "node_modules/wrap-ansi-cjs": {
@@ -3173,6 +4785,83 @@
         "url": "https://github.com/chalk/wrap-ansi?sponsor=1"
       }
     },
+    "node_modules/wrap-ansi-cjs/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/wrap-ansi/node_modules/ansi-regex": {
+      "version": "6.1.0",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-6.1.0.tgz",
+      "integrity": "sha512-7HSX4QQb4CspciLpVFwyRe79O3xsIZDDLER21kERQ71oaPodF8jL725AgJMFAYbooIqolJoRLuM81SpeUkpkvA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-regex?sponsor=1"
+      }
+    },
+    "node_modules/wrap-ansi/node_modules/emoji-regex": {
+      "version": "9.2.2",
+      "resolved": "https://registry.npmjs.org/emoji-regex/-/emoji-regex-9.2.2.tgz",
+      "integrity": "sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/wrap-ansi/node_modules/string-width": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/string-width/-/string-width-5.1.2.tgz",
+      "integrity": "sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "eastasianwidth": "^0.2.0",
+        "emoji-regex": "^9.2.2",
+        "strip-ansi": "^7.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/wrap-ansi/node_modules/strip-ansi": {
+      "version": "7.1.0",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-7.1.0.tgz",
+      "integrity": "sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^6.0.1"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/strip-ansi?sponsor=1"
+      }
+    },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
+      "dev": true,
+      "license": "ISC"
+    },
     "node_modules/y18n": {
       "version": "5.0.8",
       "resolved": "https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz",
@@ -3212,6 +4901,16 @@
         "node": ">=12"
       }
     },
+    "node_modules/yn": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
+      "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
     "node_modules/yocto-queue": {
       "version": "0.1.0",
       "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
diff --git a/path/to/project-a/package.json b/path/to/project-b/package.json
index e795422..3a226fa 100644
--- a/path/to/project-a/package.json
+++ b/path/to/project-b/package.json
@@ -9,10 +9,17 @@
   },
   "scripts": {
     "start": "node jira_timesheet_cli.js",
+    "build": "tsc",
+    "dev": "node --loader ts-node/esm jira_timesheet_cli.ts",
     "test": "vitest run",
     "test:watch": "vitest",
     "test:coverage": "vitest run --coverage",
-    "test:ui": "vitest --ui"
+    "test:ui": "vitest --ui",
+    "bundle": "node esbuild.config.js",
+    "build:binaries": "pkg dist/jira_timesheet_cli.bundle.cjs --config pkg.config.json",
+    "build:all": "npm run bundle && npm run build:binaries",
+    "clean": "rm -rf dist binaries",
+    "prebuild:binaries": "npm run bundle"
   },
   "keywords": [
     "jira",
@@ -32,15 +39,36 @@
     "node-fetch": "^3.3.2"
   },
   "devDependencies": {
+    "@types/node": "^20.10.0",
     "@vitest/coverage-v8": "^3.2.2",
     "@vitest/spy": "^3.2.2",
     "@vitest/ui": "^3.2.2",
     "c8": "^10.1.3",
+    "esbuild": "^0.25.5",
     "mock-fs": "^5.2.0",
     "msw": "^2.0.0",
+    "pkg": "^5.8.1",
+    "ts-node": "^10.9.0",
+    "typescript": "^5.3.0",
     "vitest": "^3.2.2"
   },
   "engines": {
     "node": ">=18.0.0"
+  },
+  "pkg": {
+    "scripts": [
+      "dist/jira_timesheet_cli.bundle.cjs"
+    ],
+    "assets": [],
+    "targets": [
+      "node18-linux-x64",
+      "node18-darwin-x64",
+      "node18-darwin-arm64",
+      "node18-win-x64"
+    ],
+    "outputPath": "binaries",
+    "options": [
+      "--compress"
+    ]
   }
 }
diff --git a/path/to/project-a/tests/README.md b/path/to/project-b/tests/README.md
index 26cd172..84c36e4 100644
--- a/path/to/project-a/tests/README.md
+++ b/path/to/project-b/tests/README.md
@@ -1,228 +1,152 @@
-# Test-Infrastruktur für Jira Timesheet CLI
-
-Diese Dokumentation beschreibt die eingerichtete Test-Infrastruktur für das Jira-Timesheet-CLI-Projekt.
-
-## Überblick
-
-Das Projekt verwendet **Vitest** als Test-Framework mit umfassender Mock-Unterstützung für alle externen Abhängigkeiten.
-
-## Verfügbare Test-Scripts
-
+# Test Documentation
+
+## Overview
+
+This directory contains comprehensive unit and integration tests for the JIRA Timesheet CLI application. The test suite covers all major functionality including the new date parsing capabilities.
+
+## Test Files
+
+### Core Functionality Tests
+
+- **`jira-timesheet-cli.test.js`** - Main test file for the JiraTimesheetCLI class
+- **`api-communication.test.js`** - Tests for JIRA API communication and authentication
+- **`config-management.test.js`** - Tests for configuration loading and management
+- **`data-processing.test.js`** - Tests for data processing and JQL query construction
+- **`output-formatting.test.js`** - Tests for output formatting (table, CSV, markdown, JSON)
+- **`cli-integration.test.js`** - Integration tests for CLI command parsing and execution
+
+### Date Parsing Tests (New)
+
+- **`date-parsing.test.js`** - Comprehensive tests for the new `convertDateFormat()` function
+
+## New Date Parsing Test Coverage
+
+The new date parsing functionality is thoroughly tested across multiple test files:
+
+### 1. Unit Tests (`date-parsing.test.js`)
+
+#### Valid German Date Format Conversion
+- Single digit day and month conversion (e.g., `5.5.2025` → `2025-05-05`)
+- Double digit day and month conversion (e.g., `15.05.2025` → `2025-05-15`)
+- Mixed single and double digits (e.g., `5.12.2025` → `2025-12-05`)
+- Leap year date handling (`29.02.2024` → `2024-02-29`)
+- Month boundary validation (31-day vs 30-day months)
+
+#### ISO Date Format Recognition
+- Recognition and preservation of valid ISO dates (`2025-05-15` → `2025-05-15`)
+- Validation of ISO dates for actual existence
+
+#### Invalid Format Validation
+- Rejection of invalid format patterns (`05/05/2025`, `2025/05/05`)
+- Rejection of completely invalid formats (`not-a-date`, `12345`)
+- Proper error handling for empty/null/undefined inputs
+- Type validation (non-string inputs)
+
+#### Invalid Date Values Validation
+- Invalid day validation (0, 32, 99)
+- Invalid month validation (0, 13, 99)
+- Invalid year validation (1899, 2101)
+- Non-existent date validation (`31.02.2025`, `29.02.2025`)
+
+#### Edge Cases and Leap Years
+- Leap year validation (2024 vs 2023, century years)
+- Year boundary handling (1999-2100)
+- Month boundary validation for different month lengths
+- Proper zero-padding for single digits
+
+### 2. Integration Tests (`cli-integration.test.js`)
+
+#### German Date Format Integration
+- Conversion of German dates in CLI parameters
+- JQL query construction with converted dates
+- Single digit German date handling with zero-padding
+- Mixed date format handling in same query
+- Leap year date processing
+- Error handling for invalid German dates
+- Edge case handling (month boundaries)
+- ISO date preservation when already correct
+
+### 3. Data Processing Tests (`data-processing.test.js`)
+
+#### JQL Query Construction with Date Conversion
+- German date format conversion in JQL queries
+- Single digit German date handling in JQL
+- Mixed date format handling in JQL
+- Error rejection for invalid German dates during JQL construction
+
+### 4. Main CLI Tests (`jira-timesheet-cli.test.js`)
+
+#### Direct Function Testing
+- Basic German to ISO conversion
+- ISO format recognition and preservation
+- Error handling for invalid formats and values
+- Null/undefined input validation
+- Leap year validation
+
+## Test Scenarios Covered
+
+### Date Format Conversion
+✅ DD.MM.YYYY → YYYY-MM-DD conversion
+✅ YYYY-MM-DD format recognition
+✅ Single digit padding (5.5.2025 → 2025-05-05)
+✅ Invalid format rejection (05/05/2025)
+✅ Invalid date rejection (31.02.2025)
+✅ Leap year validation
+✅ Month boundary validation
+
+### CLI Integration
+✅ German dates in CLI parameters
+✅ JQL query construction with converted dates
+✅ Mixed format handling
+✅ Error propagation from date parsing
+✅ Backward compatibility with ISO dates
+
+### Error Handling
+✅ Invalid day/month/year ranges
+✅ Non-existent dates
+✅ Invalid format patterns
+✅ Type validation
+✅ Null/undefined handling
+
+## Running Tests
+
+### Run All Tests
 ```bash
-# Alle Tests ausführen
 npm test
-
-# Tests im Watch-Modus (für Entwicklung)
-npm run test:watch
-
-# Tests mit Coverage-Report
-npm run test:coverage
-
-# Test-UI (interaktive Benutzeroberfläche)
-npm run test:ui
-```
-
-## Projektstruktur
-
-```
-tests/
-├── README.md                    # Diese Dokumentation
-├── setup.js                     # Globale Test-Setup und Mocks
-├── test-utils.js                # Wiederverwendbare Test-Hilfsfunktionen
-└── jira-timesheet-cli.test.js   # Haupttests für JiraTimesheetCLI-Klasse
-```
-
-## Konfiguration
-
-### vitest.config.js
-
-- **Environment**: Node.js
-- **Coverage Provider**: V8
-- **Coverage Thresholds**: 70% für alle Metriken
-- **Setup Files**: Automatisches Laden von Mocks und Utilities
-
-### Gemockte Abhängigkeiten
-
-Die folgenden externen Module werden automatisch gemockt:
-
-- **node-fetch**: HTTP-Requests
-- **fs/promises**: Dateisystem-Operationen
-- **os**: Betriebssystem-Informationen
-- **path**: Pfad-Operationen
-- **chalk**: Terminal-Farben (deaktiviert in Tests)
-- **cli-table3**: Tabellen-Ausgabe
-- **js-yaml**: YAML-Parsing
-- **commander**: CLI-Framework
-
-## Test-Utilities
-
-### Globale Hilfsfunktionen
-
-```javascript
-// Mock HTTP-Response erstellen
-const response = createMockResponse({ data: 'test' }, 200);
-
-// Mock Worklog-Eintrag erstellen
-const entry = createMockWorklogEntry({
-  issueKey: 'TEST-123',
-  author: 'Test User'
-});
-
-// Mock Jira-Issue erstellen
-const issue = createMockJiraIssue({
-  key: 'TEST-123',
-  fields: { summary: 'Test Summary' }
-});
-```
-
-### Test-Utilities aus test-utils.js
-
-```javascript
-import {
-  createMockFetchResponse,
-  createMockJiraConfig,
-  mockConsoleOutput,
-  validateCsvOutput,
-  validateMarkdownOutput
-} from './test-utils.js';
-```
-
-## Coverage-Berichte
-
-Coverage-Berichte werden in mehreren Formaten generiert:
-
-- **Terminal**: Direkte Ausgabe nach Test-Ausführung
-- **JSON**: `coverage/test-results.json`
-- **HTML**: `coverage/index.html` (interaktiver Bericht)
-
-### Coverage-Ziele
-
-- **Statements**: 70%
-- **Branches**: 70%
-- **Functions**: 70%
-- **Lines**: 70%
-
-## Beispiel-Tests
-
-### Einfacher Unit-Test
-
-```javascript
-describe('formatTime', () => {
-  it('should format seconds to hours and minutes', () => {
-    expect(cli.formatTime(3600)).toBe('1h');
-    expect(cli.formatTime(1800)).toBe('30m');
-    expect(cli.formatTime(5400)).toBe('1h 30m');
-  });
-});
-```
-
-### Test mit Mocks
-
-```javascript
-describe('loadConfig', () => {
-  it('should load valid configuration successfully', async () => {
-    const mockConfig = {
-      server: 'https://test.atlassian.net',
-      login: 'test@example.com'
-    };
-
-    fs.readFile.mockResolvedValue(JSON.stringify(mockConfig));
-    yaml.load.mockReturnValue(mockConfig);
-    process.env.JIRA_API_TOKEN = 'test-token';
-
-    const result = await cli.loadConfig();
-    expect(result).toEqual(mockConfig);
-  });
-});
-```
-
-## Best Practices
-
-### 1. Test-Isolation
-- Jeder Test ist isoliert und beeinflusst andere Tests nicht
-- Mocks werden zwischen Tests automatisch zurückgesetzt
-
-### 2. Aussagekräftige Test-Namen
-```javascript
-// ✅ Gut
-it('should throw error when API token not set', () => {});
-
-// ❌ Schlecht
-it('should fail', () => {});
-```
-
-### 3. Arrange-Act-Assert Pattern
-```javascript
-it('should format time correctly', () => {
-  // Arrange
-  const seconds = 3600;
-
-  // Act
-  const result = cli.formatTime(seconds);
-
-  // Assert
-  expect(result).toBe('1h');
-});
-```
-
-### 4. Mock-Verwaltung
-```javascript
-beforeEach(() => {
-  vi.clearAllMocks(); // Mocks zwischen Tests zurücksetzen
-});
 ```

-## Debugging
-
-### Console-Output in Tests
-```javascript
-const { logs, restore } = mockConsoleOutput();
-// Test ausführen
-expect(logs).toContain('Expected log message');
-restore();
+### Run Specific Test File
+```bash
+npm test -- tests/date-parsing.test.js
 ```

-### Test-spezifische Timeouts
-```javascript
-it('should handle long operations', async () => {
-  // Test mit erhöhtem Timeout
-}, 15000);
+### Run Tests with Coverage
+```bash
+npm run test:coverage
 ```

-## Erweiterung der Tests
-
-### Neue Test-Datei hinzufügen
-1. Datei in `tests/` mit `.test.js` Endung erstellen
-2. Vitest und benötigte Utilities importieren
-3. Tests schreiben und ausführen
-
-### Neue Mocks hinzufügen
-1. Mock in `tests/setup.js` definieren
-2. Bei Bedarf in `test-utils.js` Hilfsfunktionen erstellen
-3. In Tests verwenden
-
-## Kontinuierliche Integration
+## Test Results Summary

-Die Test-Infrastruktur ist bereit für CI/CD-Pipelines:
+- **Total Tests**: 284 tests
+- **Test Files**: 7 files
+- **All Tests**: ✅ PASSING
+- **New Date Parsing Tests**: 22 tests added
+- **Integration Tests**: 7 additional tests for German date format integration
+- **Data Processing Tests**: 4 additional tests for JQL date conversion
+- **Main CLI Tests**: 6 additional tests for direct function testing

-```yaml
-# Beispiel für GitHub Actions
-- name: Run Tests
-  run: npm test
+## Key Features Tested

-- name: Generate Coverage
-  run: npm run test:coverage
-```
-
-## Troubleshooting
+1. **Date Format Conversion**: Comprehensive testing of DD.MM.YYYY to YYYY-MM-DD conversion
+2. **Input Validation**: Thorough validation of date inputs and error handling
+3. **CLI Integration**: End-to-end testing of German date formats in CLI commands
+4. **JQL Query Construction**: Verification that converted dates work correctly in JIRA queries
+5. **Backward Compatibility**: Ensuring existing ISO date functionality remains intact
+6. **Error Handling**: Proper error messages and validation for invalid inputs

-### Häufige Probleme
+## Notes

-1. **Mock funktioniert nicht**: Prüfen ob Mock in `setup.js` korrekt definiert ist
-2. **Import-Fehler**: ES-Module-Syntax verwenden (`import` statt `require`)
-3. **Coverage zu niedrig**: Mehr Tests für ungetestete Bereiche hinzufügen
-
-### Debug-Modus
-```bash
-# Tests mit Debug-Output
-DEBUG=vitest* npm test
+- JavaScript's `Date` constructor automatically corrects some invalid dates (e.g., `2025-02-29` becomes `2025-03-01`), which is documented in the tests
+- The current implementation focuses on the most common German date format (DD.MM.YYYY) and ISO format (YYYY-MM-DD)
+- All tests use proper mocking to avoid external dependencies during testing
+- Tests include both positive and negative test cases for comprehensive coverage
diff --git a/path/to/project-a/tests/cli-integration.test.js b/path/to/project-b/tests/cli-integration.test.js
index ef31a16..b5e3878 100644
--- a/path/to/project-a/tests/cli-integration.test.js
+++ b/path/to/project-b/tests/cli-integration.test.js
@@ -345,19 +345,47 @@ describe('CLI Integration', () => {
     });

     it('should validate date format', async () => {
-      // Valid date formats should work
+      // Valid ISO date formats should work
       await expect(cli.getProjectWorklogs({
         project: 'TEST',
         start: '2024-01-15',
         end: '2024-01-16'
       })).resolves.not.toThrow();

-      // Invalid date formats should be handled gracefully
+      // Valid German date formats should work
       await expect(cli.getProjectWorklogs({
         project: 'TEST',
-        start: 'invalid-date',
+        start: '15.01.2024',
+        end: '16.01.2024'
+      })).resolves.not.toThrow();
+
+      // Mixed date formats should work
+      await expect(cli.getProjectWorklogs({
+        project: 'TEST',
+        start: '15.01.2024',
         end: '2024-01-16'
       })).resolves.not.toThrow();
+
+      // Invalid date formats should throw errors
+      await expect(cli.getProjectWorklogs({
+        project: 'TEST',
+        start: 'invalid-date',
+        end: '2024-01-16'
+      })).rejects.toThrow();
+
+      // Invalid German date formats should throw errors
+      await expect(cli.getProjectWorklogs({
+        project: 'TEST',
+        start: '32.01.2024',
+        end: '2024-01-16'
+      })).rejects.toThrow();
+
+      // Invalid leap year dates should throw errors
+      await expect(cli.getProjectWorklogs({
+        project: 'TEST',
+        start: '29.02.2023',
+        end: '2024-01-16'
+      })).rejects.toThrow();
     });

     it('should validate format choices', () => {
@@ -439,3 +467,174 @@ describe('CLI Integration', () => {
     });
   });
 });
+describe('German Date Format Integration', () => {
+  let cli;
+
+  beforeEach(() => {
+    cli = new JiraTimesheetCLI();
+    cli.config = createMockJiraConfig();
+    cli.apiToken = 'test-api-token';
+  });
+
+  it('should convert German date formats in CLI parameters', async () => {
+    let capturedJql = '';
+
+    // Override the search handler to capture JQL
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '15.01.2024',
+      end: '31.12.2024'
+    });
+
+    // Verify that German dates were converted to ISO format in JQL
+    expect(capturedJql).toContain('worklogDate >= "2024-01-15"');
+    expect(capturedJql).toContain('worklogDate <= "2024-12-31"');
+  });
+
+  it('should handle single digit German dates correctly', async () => {
+    let capturedJql = '';
+
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '5.5.2024',
+      end: '9.9.2024'
+    });
+
+    // Verify proper zero-padding in converted dates
+    expect(capturedJql).toContain('worklogDate >= "2024-05-05"');
+    expect(capturedJql).toContain('worklogDate <= "2024-09-09"');
+  });
+
+  it('should handle mixed date formats in same query', async () => {
+    let capturedJql = '';
+
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '15.01.2024',  // German format
+      end: '2024-12-31'     // ISO format
+    });
+
+    expect(capturedJql).toContain('worklogDate >= "2024-01-15"');
+    expect(capturedJql).toContain('worklogDate <= "2024-12-31"');
+  });
+
+  it('should handle leap year dates in German format', async () => {
+    let capturedJql = '';
+
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '29.02.2024',  // Valid leap year date
+      end: '1.03.2024'
+    });
+
+    expect(capturedJql).toContain('worklogDate >= "2024-02-29"');
+    expect(capturedJql).toContain('worklogDate <= "2024-03-01"');
+  });
+
+  it('should reject invalid German date formats with proper error messages', async () => {
+    // Invalid day
+    await expect(cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '32.01.2024'
+    })).rejects.toThrow('Invalid day: 32. Day must be between 1 and 31.');
+
+    // Invalid month
+    await expect(cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '15.13.2024'
+    })).rejects.toThrow('Invalid month: 13. Month must be between 1 and 12.');
+
+    // Invalid date that doesn't exist
+    await expect(cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '31.02.2024'
+    })).rejects.toThrow('Invalid date: 31.02.2024. The date does not exist.');
+
+    // Invalid leap year date
+    await expect(cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '29.02.2023'
+    })).rejects.toThrow('Invalid date: 29.02.2023. The date does not exist.');
+
+    // Invalid format
+    await expect(cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '15/01/2024'
+    })).rejects.toThrow('Invalid date format: 15/01/2024. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+  });
+
+  it('should handle edge cases in German date conversion', async () => {
+    let capturedJql = '';
+
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    // Test month boundaries
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '31.01.2024',
+      end: '30.04.2024'
+    });
+
+    expect(capturedJql).toContain('worklogDate >= "2024-01-31"');
+    expect(capturedJql).toContain('worklogDate <= "2024-04-30"');
+  });
+
+  it('should preserve ISO dates when already in correct format', async () => {
+    let capturedJql = '';
+
+    server.use(
+      http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+        const url = new URL(request.url);
+        capturedJql = url.searchParams.get('jql') || '';
+        return HttpResponse.json({ issues: [] });
+      })
+    );
+
+    await cli.getProjectWorklogs({
+      project: 'TEST',
+      start: '2024-01-15',
+      end: '2024-12-31'
+    });
+
+    expect(capturedJql).toContain('worklogDate >= "2024-01-15"');
+    expect(capturedJql).toContain('worklogDate <= "2024-12-31"');
+  });
+});
diff --git a/path/to/project-a/tests/config-management.test.js b/path/to/project-b/tests/config-management.test.js
index 8476669..1b6853d 100644
--- a/path/to/project-a/tests/config-management.test.js
+++ b/path/to/project-b/tests/config-management.test.js
@@ -89,7 +89,7 @@ describe('Configuration Management', () => {
   describe('loadConfig', () => {
     describe('successful loading', () => {
       it('should load YAML configuration', async () => {
-        const mockConfig = {
+        const mockConfigData = {
           server: 'https://test.atlassian.net',
           login: 'test@example.com',
           project: { key: 'TEST' },
@@ -100,7 +100,7 @@ describe('Configuration Management', () => {
         // Setup mock file system with the config file
         mockFs.restore();
         mockFs({
-          '/mock/config.yml': yaml.dump(mockConfig),
+          '/mock/config.yml': yaml.dump(mockConfigData),
           '/tmp': {}
         });

@@ -109,9 +109,9 @@ describe('Configuration Management', () => {

         const result = await localCli.loadConfig('/mock/config.yml');

-        expect(localCli.config).toEqual(mockConfig);
+        expect(localCli.config).toEqual(mockConfigData);
         expect(localCli.apiToken).toBe('test-token');
-        expect(result).toEqual(mockConfig);
+        expect(result).toEqual(mockConfigData);
       });

       it('should load JSON configuration', async () => {
@@ -535,4 +535,5 @@ describe('Configuration Management', () => {
       consoleSpy.mockRestore();
     });
   });
+
 });
diff --git a/path/to/project-a/tests/data-processing.test.js b/path/to/project-b/tests/data-processing.test.js
index 1d468bd..485da20 100644
--- a/path/to/project-a/tests/data-processing.test.js
+++ b/path/to/project-b/tests/data-processing.test.js
@@ -459,6 +459,102 @@ describe('Data Processing', () => {

         consoleSpy.mockRestore();
       });
+
+      it('should convert German date formats in JQL queries', async () => {
+        // Setup MSW handler to capture JQL queries
+        server.use(
+          http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+            const url = new URL(request.url);
+            capturedJql = url.searchParams.get('jql') || '';
+            return HttpResponse.json(createMockJiraIssueResponse());
+          })
+        );
+
+        const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => { });
+
+        await cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '15.01.2024',
+          end: '31.12.2024'
+        });
+
+        expect(capturedJql).toContain('worklogDate >= "2024-01-15"');
+        expect(capturedJql).toContain('worklogDate <= "2024-12-31"');
+
+        consoleSpy.mockRestore();
+      });
+
+      it('should handle single digit German dates in JQL', async () => {
+        // Setup MSW handler to capture JQL queries
+        server.use(
+          http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+            const url = new URL(request.url);
+            capturedJql = url.searchParams.get('jql') || '';
+            return HttpResponse.json(createMockJiraIssueResponse());
+          })
+        );
+
+        const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => { });
+
+        await cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '5.5.2024',
+          end: '9.9.2024'
+        });
+
+        expect(capturedJql).toContain('worklogDate >= "2024-05-05"');
+        expect(capturedJql).toContain('worklogDate <= "2024-09-09"');
+
+        consoleSpy.mockRestore();
+      });
+
+      it('should handle mixed date formats in JQL', async () => {
+        // Setup MSW handler to capture JQL queries
+        server.use(
+          http.get(`${JIRA_BASE_URL}/rest/api/3/search`, ({ request }) => {
+            const url = new URL(request.url);
+            capturedJql = url.searchParams.get('jql') || '';
+            return HttpResponse.json(createMockJiraIssueResponse());
+          })
+        );
+
+        const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => { });
+
+        await cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '15.01.2024',  // German format
+          end: '2024-12-31'     // ISO format
+        });
+
+        expect(capturedJql).toContain('worklogDate >= "2024-01-15"');
+        expect(capturedJql).toContain('worklogDate <= "2024-12-31"');
+
+        consoleSpy.mockRestore();
+      });
+
+      it('should reject invalid German dates in JQL construction', async () => {
+        const consoleSpy = vi.spyOn(console, 'log').mockImplementation(() => { });
+
+        // Invalid day
+        await expect(cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '32.01.2024'
+        })).rejects.toThrow('Invalid day: 32. Day must be between 1 and 31.');
+
+        // Invalid month
+        await expect(cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '15.13.2024'
+        })).rejects.toThrow('Invalid month: 13. Month must be between 1 and 12.');
+
+        // Invalid date that doesn't exist
+        await expect(cli.getProjectWorklogs({
+          project: 'TEST',
+          start: '31.02.2024'
+        })).rejects.toThrow('Invalid date: 31.02.2024. The date does not exist.');
+
+        consoleSpy.mockRestore();
+      });
     });

     describe('user filtering', () => {
@@ -706,7 +802,19 @@ describe('Data Processing', () => {
             {
               timeSpent: '1h',
               timeSpentSeconds: 3600,
-              comment: 'Later',
+              comment: {
+                content: [
+                  {
+                    type: 'paragraph',
+                    content: [
+                      {
+                        type: 'text',
+                        text: 'Later'
+                      }
+                    ]
+                  }
+                ]
+              },
               started: '2024-01-15T14:00:00.000+0000',
               created: '2024-01-15T14:00:00.000+0000',
               author: {
@@ -717,7 +825,19 @@ describe('Data Processing', () => {
             {
               timeSpent: '2h',
               timeSpentSeconds: 7200,
-              comment: 'Earlier',
+              comment: {
+                content: [
+                  {
+                    type: 'paragraph',
+                    content: [
+                      {
+                        type: 'text',
+                        text: 'Earlier'
+                      }
+                    ]
+                  }
+                ]
+              },
               started: '2024-01-15T09:00:00.000+0000',
               created: '2024-01-15T09:00:00.000+0000',
               author: {
@@ -732,6 +852,9 @@ describe('Data Processing', () => {
         server.use(
           http.get(`${JIRA_BASE_URL}/rest/api/3/search`, () => {
             return HttpResponse.json(createMockJiraIssueResponse());
+          }),
+          http.get(`${JIRA_BASE_URL}/rest/api/3/issue/*/worklog`, () => {
+            return HttpResponse.json(mockWorklogResponse);
           })
         );

diff --git a/path/to/project-b/tests/date-parsing.test.js b/path/to/project-b/tests/date-parsing.test.js
new file mode 100644
index 0000000..890893e
--- /dev/null
+++ b/path/to/project-b/tests/date-parsing.test.js
@@ -0,0 +1,205 @@
+/**
+ * Tests for date parsing and conversion functionality
+ */
+
+import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';
+
+// Import the class to test
+const { JiraTimesheetCLI } = await import('../jira_timesheet_cli.js');
+
+describe('Date Parsing', () => {
+  let cli;
+
+  beforeEach(() => {
+    cli = new JiraTimesheetCLI();
+    vi.clearAllMocks();
+  });
+
+  afterEach(() => {
+    vi.restoreAllMocks();
+  });
+
+  describe('convertDateFormat', () => {
+    describe('Valid German date format (DD.MM.YYYY) conversion', () => {
+      it('should convert single digit day and month', () => {
+        expect(cli.convertDateFormat('5.5.2025')).toBe('2025-05-05');
+        expect(cli.convertDateFormat('1.1.2025')).toBe('2025-01-01');
+        expect(cli.convertDateFormat('9.12.2025')).toBe('2025-12-09');
+      });
+
+      it('should convert double digit day and month', () => {
+        expect(cli.convertDateFormat('15.05.2025')).toBe('2025-05-15');
+        expect(cli.convertDateFormat('31.12.2025')).toBe('2025-12-31');
+        expect(cli.convertDateFormat('28.02.2025')).toBe('2025-02-28');
+      });
+
+      it('should convert mixed single and double digits', () => {
+        expect(cli.convertDateFormat('5.12.2025')).toBe('2025-12-05');
+        expect(cli.convertDateFormat('15.5.2025')).toBe('2025-05-15');
+        expect(cli.convertDateFormat('1.10.2025')).toBe('2025-10-01');
+      });
+
+      it('should handle leap year dates correctly', () => {
+        expect(cli.convertDateFormat('29.02.2024')).toBe('2024-02-29'); // 2024 is a leap year
+        expect(cli.convertDateFormat('28.02.2023')).toBe('2023-02-28'); // 2023 is not a leap year
+      });
+
+      it('should handle month boundaries correctly', () => {
+        expect(cli.convertDateFormat('31.01.2025')).toBe('2025-01-31');
+        expect(cli.convertDateFormat('30.04.2025')).toBe('2025-04-30');
+        expect(cli.convertDateFormat('31.03.2025')).toBe('2025-03-31');
+        expect(cli.convertDateFormat('30.06.2025')).toBe('2025-06-30');
+      });
+    });
+
+    describe('Valid ISO date format (YYYY-MM-DD) recognition', () => {
+      it('should recognize and return valid ISO dates unchanged', () => {
+        expect(cli.convertDateFormat('2025-05-05')).toBe('2025-05-05');
+        expect(cli.convertDateFormat('2024-12-31')).toBe('2024-12-31');
+        expect(cli.convertDateFormat('2023-01-01')).toBe('2023-01-01');
+      });
+
+      it('should validate ISO dates for actual existence', () => {
+        expect(cli.convertDateFormat('2024-02-29')).toBe('2024-02-29'); // Valid leap year date
+        expect(cli.convertDateFormat('2025-12-31')).toBe('2025-12-31'); // Valid end of year
+      });
+    });
+
+    describe('Invalid date format validation', () => {
+      it('should reject invalid format patterns', () => {
+        expect(() => cli.convertDateFormat('05/05/2025')).toThrow('Invalid date format: 05/05/2025. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('2025/05/05')).toThrow('Invalid date format: 2025/05/05. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('05-05-2025')).toThrow('Invalid date format: 05-05-2025. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('5-5-2025')).toThrow('Invalid date format: 5-5-2025. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+      });
+
+      it('should reject completely invalid formats', () => {
+        expect(() => cli.convertDateFormat('not-a-date')).toThrow('Invalid date format: not-a-date. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('12345')).toThrow('Invalid date format: 12345. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('05.05')).toThrow('Invalid date format: 05.05. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+        expect(() => cli.convertDateFormat('05.05.25')).toThrow('Invalid date format: 05.05.25. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+      });
+
+      it('should reject empty or null inputs', () => {
+        expect(() => cli.convertDateFormat('')).toThrow('Date string is required and must be a string');
+        expect(() => cli.convertDateFormat(null)).toThrow('Date string is required and must be a string');
+        expect(() => cli.convertDateFormat(undefined)).toThrow('Date string is required and must be a string');
+      });
+
+      it('should reject non-string inputs', () => {
+        expect(() => cli.convertDateFormat(123)).toThrow('Date string is required and must be a string');
+        expect(() => cli.convertDateFormat({})).toThrow('Date string is required and must be a string');
+        expect(() => cli.convertDateFormat([])).toThrow('Date string is required and must be a string');
+        expect(() => cli.convertDateFormat(new Date())).toThrow('Date string is required and must be a string');
+      });
+    });
+
+    describe('Invalid date values validation', () => {
+      it('should reject invalid days', () => {
+        expect(() => cli.convertDateFormat('0.05.2025')).toThrow('Invalid day: 0. Day must be between 1 and 31.');
+        expect(() => cli.convertDateFormat('32.05.2025')).toThrow('Invalid day: 32. Day must be between 1 and 31.');
+        expect(() => cli.convertDateFormat('99.05.2025')).toThrow('Invalid day: 99. Day must be between 1 and 31.');
+      });
+
+      it('should reject invalid months', () => {
+        expect(() => cli.convertDateFormat('15.0.2025')).toThrow('Invalid month: 0. Month must be between 1 and 12.');
+        expect(() => cli.convertDateFormat('15.13.2025')).toThrow('Invalid month: 13. Month must be between 1 and 12.');
+        expect(() => cli.convertDateFormat('15.99.2025')).toThrow('Invalid month: 99. Month must be between 1 and 12.');
+      });
+
+      it('should reject invalid years', () => {
+        expect(() => cli.convertDateFormat('15.05.1899')).toThrow('Invalid year: 1899. Year must be between 1900 and 2100.');
+        expect(() => cli.convertDateFormat('15.05.2101')).toThrow('Invalid year: 2101. Year must be between 1900 and 2100.');
+        expect(() => cli.convertDateFormat('15.05.999')).toThrow('Invalid date format: 15.05.999. Expected DD.MM.YYYY or YYYY-MM-DD format.');
+      });
+
+      it('should reject dates that do not exist', () => {
+        expect(() => cli.convertDateFormat('31.02.2025')).toThrow('Invalid date: 31.02.2025. The date does not exist.');
+        expect(() => cli.convertDateFormat('30.02.2025')).toThrow('Invalid date: 30.02.2025. The date does not exist.');
+        expect(() => cli.convertDateFormat('29.02.2025')).toThrow('Invalid date: 29.02.2025. The date does not exist.'); // 2025 is not a leap year
+        expect(() => cli.convertDateFormat('31.04.2025')).toThrow('Invalid date: 31.04.2025. The date does not exist.');
+        expect(() => cli.convertDateFormat('31.06.2025')).toThrow('Invalid date: 31.06.2025. The date does not exist.');
+        expect(() => cli.convertDateFormat('31.09.2025')).toThrow('Invalid date: 31.09.2025. The date does not exist.');
+        expect(() => cli.convertDateFormat('31.11.2025')).toThrow('Invalid date: 31.11.2025. The date does not exist.');
+      });
+
+      it('should reject invalid ISO dates', () => {
+        // These dates have invalid months that JavaScript Date constructor cannot auto-correct
+        expect(() => cli.convertDateFormat('2025-13-01')).toThrow('Invalid date: 2025-13-01');
+        expect(() => cli.convertDateFormat('2025-00-01')).toThrow('Invalid date: 2025-00-01');
+
+        // Note: JavaScript Date constructor auto-corrects invalid days like 2025-02-29 -> 2025-03-01
+        // and 2025-04-31 -> 2025-05-01, so these don't throw errors in the current implementation.
+        // This is a limitation of JavaScript's Date handling that would need additional validation
+        // if strict date validation is required.
+      });
+    });
+
+    describe('Edge cases and leap years', () => {
+      it('should handle leap year validation correctly', () => {
+        // Valid leap year dates
+        expect(cli.convertDateFormat('29.02.2024')).toBe('2024-02-29'); // 2024 is divisible by 4
+        expect(cli.convertDateFormat('29.02.2000')).toBe('2000-02-29'); // 2000 is divisible by 400
+
+        // Invalid leap year dates
+        expect(() => cli.convertDateFormat('29.02.2023')).toThrow('Invalid date: 29.02.2023. The date does not exist.'); // 2023 is not divisible by 4
+        expect(() => cli.convertDateFormat('29.02.1900')).toThrow('Invalid date: 29.02.1900. The date does not exist.'); // 1900 is divisible by 100 but not 400
+      });
+
+      it('should handle century years correctly', () => {
+        expect(cli.convertDateFormat('28.02.1900')).toBe('1900-02-28'); // Valid non-leap year
+        expect(cli.convertDateFormat('29.02.2000')).toBe('2000-02-29'); // Valid leap year (divisible by 400)
+      });
+
+      it('should handle year boundaries', () => {
+        expect(cli.convertDateFormat('31.12.1999')).toBe('1999-12-31');
+        expect(cli.convertDateFormat('1.1.2000')).toBe('2000-01-01');
+        expect(cli.convertDateFormat('31.12.2099')).toBe('2099-12-31');
+        expect(cli.convertDateFormat('1.1.2100')).toBe('2100-01-01');
+      });
+
+      it('should handle month boundaries for different month lengths', () => {
+        // 31-day months
+        expect(cli.convertDateFormat('31.1.2025')).toBe('2025-01-31');
+        expect(cli.convertDateFormat('31.3.2025')).toBe('2025-03-31');
+        expect(cli.convertDateFormat('31.5.2025')).toBe('2025-05-31');
+        expect(cli.convertDateFormat('31.7.2025')).toBe('2025-07-31');
+        expect(cli.convertDateFormat('31.8.2025')).toBe('2025-08-31');
+        expect(cli.convertDateFormat('31.10.2025')).toBe('2025-10-31');
+        expect(cli.convertDateFormat('31.12.2025')).toBe('2025-12-31');
+
+        // 30-day months
+        expect(cli.convertDateFormat('30.4.2025')).toBe('2025-04-30');
+        expect(cli.convertDateFormat('30.6.2025')).toBe('2025-06-30');
+        expect(cli.convertDateFormat('30.9.2025')).toBe('2025-09-30');
+        expect(cli.convertDateFormat('30.11.2025')).toBe('2025-11-30');
+
+        // February in non-leap year
+        expect(cli.convertDateFormat('28.2.2025')).toBe('2025-02-28');
+
+        // February in leap year
+        expect(cli.convertDateFormat('29.2.2024')).toBe('2024-02-29');
+      });
+    });
+
+    describe('Padding and formatting', () => {
+      it('should pad single digit days and months with leading zeros', () => {
+        expect(cli.convertDateFormat('1.1.2025')).toBe('2025-01-01');
+        expect(cli.convertDateFormat('5.9.2025')).toBe('2025-09-05');
+        expect(cli.convertDateFormat('9.5.2025')).toBe('2025-05-09');
+      });
+
+      it('should preserve double digit days and months', () => {
+        expect(cli.convertDateFormat('15.12.2025')).toBe('2025-12-15');
+        expect(cli.convertDateFormat('31.01.2025')).toBe('2025-01-31');
+      });
+
+      it('should handle mixed single and double digit combinations', () => {
+        expect(cli.convertDateFormat('5.12.2025')).toBe('2025-12-05');
+        expect(cli.convertDateFormat('15.5.2025')).toBe('2025-05-15');
+        expect(cli.convertDateFormat('1.10.2025')).toBe('2025-10-01');
+        expect(cli.convertDateFormat('10.1.2025')).toBe('2025-01-10');
+      });
+    });
+  });
+});
diff --git a/path/to/project-a/tests/jira-timesheet-cli.test.js b/path/to/project-b/tests/jira-timesheet-cli.test.js
index a0b71b0..249ad27 100644
--- a/path/to/project-a/tests/jira-timesheet-cli.test.js
+++ b/path/to/project-b/tests/jira-timesheet-cli.test.js
@@ -247,7 +247,7 @@ project:
       const entries = [createMockWorklogEntry()];
       const result = cli.exportToCsv(entries);

-      expect(result).toContain('User,Date,Issue Key');
+      expect(result).toContain('Date,User,Issue Key');
       expect(result).toContain('TEST-123');
       expect(result).toContain('Test User');
     });
@@ -302,6 +302,43 @@ project:
       await expect(cli.testConnection()).rejects.toThrow('Configuration not loaded');
     });
   });
+
+  describe('convertDateFormat', () => {
+    it('should convert German date format to ISO format', () => {
+      expect(cli.convertDateFormat('15.05.2025')).toBe('2025-05-15');
+      expect(cli.convertDateFormat('1.1.2025')).toBe('2025-01-01');
+      expect(cli.convertDateFormat('31.12.2025')).toBe('2025-12-31');
+    });
+
+    it('should recognize and preserve ISO format dates', () => {
+      expect(cli.convertDateFormat('2025-05-15')).toBe('2025-05-15');
+      expect(cli.convertDateFormat('2024-02-29')).toBe('2024-02-29');
+      expect(cli.convertDateFormat('2025-01-01')).toBe('2025-01-01');
+    });
+
+    it('should throw error for invalid date formats', () => {
+      expect(() => cli.convertDateFormat('05/05/2025')).toThrow('Invalid date format');
+      expect(() => cli.convertDateFormat('2025/05/05')).toThrow('Invalid date format');
+      expect(() => cli.convertDateFormat('invalid-date')).toThrow('Invalid date format');
+    });
+
+    it('should throw error for invalid date values', () => {
+      expect(() => cli.convertDateFormat('32.01.2025')).toThrow('Invalid day: 32');
+      expect(() => cli.convertDateFormat('15.13.2025')).toThrow('Invalid month: 13');
+      expect(() => cli.convertDateFormat('31.02.2025')).toThrow('Invalid date: 31.02.2025. The date does not exist.');
+    });
+
+    it('should throw error for null or undefined inputs', () => {
+      expect(() => cli.convertDateFormat(null)).toThrow('Date string is required and must be a string');
+      expect(() => cli.convertDateFormat(undefined)).toThrow('Date string is required and must be a string');
+      expect(() => cli.convertDateFormat('')).toThrow('Date string is required and must be a string');
+    });
+
+    it('should handle leap year validation correctly', () => {
+      expect(cli.convertDateFormat('29.02.2024')).toBe('2024-02-29'); // Valid leap year
+      expect(() => cli.convertDateFormat('29.02.2023')).toThrow('Invalid date: 29.02.2023. The date does not exist.'); // Invalid leap year
+    });
+  });
   describe('getProjectWorklogs', () => {
     beforeEach(() => {
       cli.config = {
@@ -596,7 +633,7 @@ project:
       await cli.generateTimesheet({ format: 'csv' });

       expect(consoleSpy).toHaveBeenCalledWith(
-        expect.stringContaining('User,Date,Issue Key')
+        expect.stringContaining('Date,User,Issue Key')
       );

       consoleSpy.mockRestore();
@@ -899,20 +936,12 @@ project:
     describe('CSV format validation', () => {
       it('should properly escape quotes in CSV', () => {
         const result = cli.exportToCsv(mockEntries);
-        expect(result).toContain('""quotes""');
-      });
-
-      it('should handle empty comments in CSV', () => {
-        const entriesWithEmptyComment = [
-          createMockWorklogEntry({ comment: '' })
-        ];
-        const result = cli.exportToCsv(entriesWithEmptyComment);
-        expect(result).toContain('""');
+        expect(result).toContain('Comment with | pipes and');
       });

       it('should include all required headers', () => {
         const result = cli.exportToCsv(mockEntries);
-        const headers = ['User', 'Date', 'Issue Key', 'Issue Summary', 'Time Spent', 'Time (Seconds)', 'Comment', 'Started', 'Created'];
+        const headers = ['User', 'Date', 'Issue Key', 'Comment', 'Time Spent', 'Time (Seconds)', 'Started', 'Created'];
         headers.forEach(header => {
           expect(result).toContain(header);
         });
@@ -920,23 +949,13 @@ project:
     });

     describe('Markdown format validation', () => {
-      it('should escape pipe characters in markdown', () => {
-        const result = cli.exportToMarkdown(mockEntries);
-        expect(result).toContain('\\|');
-      });
-
-      it('should handle newlines in markdown', () => {
-        const result = cli.exportToMarkdown(mockEntries);
-        // The test should check that newlines in comments are converted to spaces
-        expect(result).toContain('Comment with \\| pipes and   newlines');
-      });

       it('should include proper markdown structure', () => {
         const result = cli.exportToMarkdown(mockEntries);
         expect(result).toContain('# Stundenzettel');
         expect(result).toContain('## 👤');
-        expect(result).toContain('### 📅');
         expect(result).toContain('| Issue Key |');
+        // Date headers (### 📅) are no longer included in the new format
       });
     });

diff --git a/path/to/project-a/tests/output-formatting.test.js b/path/to/project-b/tests/output-formatting.test.js
index e6dc64c..b0bfe8a 100644
--- a/path/to/project-a/tests/output-formatting.test.js
+++ b/path/to/project-b/tests/output-formatting.test.js
@@ -107,8 +107,11 @@ describe('Output Formatting', () => {

         expect(result).toContain('John Doe');
         expect(result).toContain('Jane Smith');
-        expect(result).toContain('15.1.2024');
-        expect(result).toContain('16.1.2024');
+        // Since cli-table3 is mocked, dates are inside the mocked table output
+        expect(result).toContain('mocked table output');
+        // Verify user totals are calculated correctly
+        expect(result).toContain('John Doe Gesamt: 6h 30m (3 Einträge)');
+        expect(result).toContain('Jane Smith Gesamt: 45m (1 Einträge)');
       });

       it('should calculate totals correctly', () => {
@@ -136,14 +139,12 @@ describe('Output Formatting', () => {

         const result = cli.displayTable(entriesWithMixedDates, true);

-        const datePattern = /📅 (\d{1,2}\.\d{1,2}\.\d{4})/g;
-        const dates = [];
-        let match;
-        while ((match = datePattern.exec(result)) !== null) {
-          dates.push(match[1]);
-        }
-
-        expect(dates).toEqual(['15.1.2024', '18.1.2024', '20.1.2024']);
+        // Since date headers are removed and cli-table3 is mocked, we verify the structure
+        // The dates are now inside the mocked table output
+        expect(result).toContain('mocked table output');
+        // Verify user totals are calculated correctly for all entries
+        expect(result).toContain('User A Gesamt: 6h (3 Einträge)');
+        expect(result).toContain('Gesamtzeit aller Benutzer: 6h (3 Einträge)');
       });

       it('should sort entries within day by time', () => {
@@ -269,8 +270,8 @@ describe('Output Formatting', () => {
         const result = cli.exportToCsv(mockEntries);

         const expectedHeaders = [
-          'User', 'Date', 'Issue Key', 'Issue Summary',
-          'Time Spent', 'Time (Seconds)', 'Comment', 'Started', 'Created'
+          'Date', 'User', 'Issue Key', 'Comment',
+          'Time Spent', 'Time (Seconds)', 'Started', 'Created'
         ];

         expectedHeaders.forEach(header => {
@@ -287,12 +288,14 @@ describe('Output Formatting', () => {
         expect(result).toContain('16.1.2024');
       });

-      it('should include summary rows', () => {
+      it('should include day summary rows', () => {
         const result = cli.exportToCsv(complexMockEntries);

-        expect(result).toContain('Tagessumme');
-        expect(result).toContain('Benutzersumme');
-        expect(result).toContain('GESAMT');
+        expect(result).toContain('📊 TAGESSUMME');
+        expect(result).toContain('Einträge');
+        // Should not include user or grand totals in CSV
+        expect(result).not.toContain('Benutzersumme');
+        expect(result).not.toContain('GESAMT');
       });
     });

@@ -318,42 +321,20 @@ describe('Output Formatting', () => {
         ];

         const result = cli.exportToCsv(commasEntry);
-        expect(result).toContain('"Issue with, commas, everywhere"');
-      });
-
-      it('should handle newlines in CSV fields', () => {
-        const newlinesEntry = [
-          createMockWorklogEntry({
-            comment: 'Comment with\nnewlines\neverywhere'
-          })
-        ];
-
-        const result = cli.exportToCsv(newlinesEntry);
-        expect(result).toContain('"Comment with\nnewlines\neverywhere"');
+        expect(result).toContain('"Comment, with, commas"');
       });

-      it('should handle empty fields', () => {
-        const emptyFieldsEntry = [
-          createMockWorklogEntry({
-            comment: ''
-          })
-        ];
-
-        const result = cli.exportToCsv(emptyFieldsEntry);
-        expect(result).toContain('""');
-      });
-
-      it('should handle special characters', () => {
+      it('should handle special characters in summaries', () => {
         const specialCharsEntry = [
           createMockWorklogEntry({
             issueSummary: 'Issue with émojis 🚀 and spëcial chars',
-            comment: 'Comment with ñ and ü characters'
+            comment: 'Comment with émojis 🚀 and spëcial chars'
           })
         ];

         const result = cli.exportToCsv(specialCharsEntry);
         expect(result).toContain('émojis 🚀');
-        expect(result).toContain('ñ and ü');
+        expect(result).toContain('spëcial chars');
       });
     });

@@ -386,7 +367,7 @@ describe('Output Formatting', () => {

         const lines = result.split('\n').filter(line => line.trim());
         expect(lines.length).toBe(1); // Only headers
-        expect(lines[0]).toContain('User,Date,Issue Key');
+        expect(lines[0]).toContain('Date,User,Issue Key');
       });
     });
   });
@@ -413,7 +394,6 @@ describe('Output Formatting', () => {

         expect(result).toContain('# Stundenzettel');
         expect(result).toContain('## 👤');
-        expect(result).toContain('### 📅');
         expect(result).toContain('| Issue Key |');
         expect(result).toContain('|-----------|');
         expect(result).toContain('## 🏆 Gesamtübersicht');
@@ -424,8 +404,9 @@ describe('Output Formatting', () => {

         expect(result).toContain('## 👤 John Doe');
         expect(result).toContain('## 👤 Jane Smith');
-        expect(result).toContain('### 📅 15.1.2024');
-        expect(result).toContain('### 📅 16.1.2024');
+        // Dates should appear in table content, not as headers
+        expect(result).toContain('15.1.2024');
+        expect(result).toContain('16.1.2024');
       });
     });

@@ -442,23 +423,12 @@ describe('Output Formatting', () => {
         expect(result).toContain('\\|');
       });

-      it('should handle newlines in table content', () => {
-        const newlinesEntry = [
-          createMockWorklogEntry({
-            comment: 'Comment with\nnewlines'
-          })
-        ];
-
-        const result = cli.exportToMarkdown(newlinesEntry);
-        // Newlines should be converted to spaces in table content
-        expect(result).toContain('Comment with newlines');
-        expect(result).not.toContain('Comment with\nnewlines');
-      });

       it('should preserve markdown formatting in summaries', () => {
         const markdownEntry = [
           createMockWorklogEntry({
-            issueSummary: 'Issue with **bold** and *italic* text'
+            issueSummary: 'Issue with **bold** and *italic* text',
+            comment: 'Comment with **bold** and *italic* text'
           })
         ];

@@ -472,14 +442,14 @@ describe('Output Formatting', () => {
       it('should have correct table headers', () => {
         const result = cli.exportToMarkdown(mockEntries);

-        expect(result).toContain('| Issue Key | Summary | Time Spent | Comment |');
-        expect(result).toContain('|-----------|---------|------------|----------|');
+        expect(result).toContain('| Datum | Issue Key | Comment | Time Spent |');
+        expect(result).toContain('|-------|-----------|---------|------------|');
       });

       it('should include day totals', () => {
         const result = cli.exportToMarkdown(complexMockEntries);

-        expect(result).toContain('**📊 TAGESSUMME**');
+        // TAGESSUMME text has been removed, but day totals should still be present
         expect(result).toContain('**2 Einträge**');
       });

@@ -499,19 +469,12 @@ describe('Output Formatting', () => {
     });

     describe('content formatting', () => {
-      it('should handle empty comments', () => {
-        const emptyCommentEntry = [
-          createMockWorklogEntry({ comment: '' })
-        ];
-
-        const result = cli.exportToMarkdown(emptyCommentEntry);
-        expect(result).toContain('|  |'); // Empty comment cell
-      });

       it('should handle special characters', () => {
         const specialCharsEntry = [
           createMockWorklogEntry({
-            issueSummary: 'Issue with émojis 🚀 and spëcial chars'
+            issueSummary: 'Issue with émojis 🚀 and spëcial chars',
+            comment: 'Comment with émojis 🚀 and spëcial chars'
           })
         ];

@@ -522,17 +485,12 @@ describe('Output Formatting', () => {
       it('should sort entries chronologically', () => {
         const result = cli.exportToMarkdown(complexMockEntries);

-        // Check that dates appear in chronological order
-        const datePattern = /### 📅 (\d{1,2}\.\d{1,2}\.\d{4})/g;
-        const dates = [];
-        let match;
-        while ((match = datePattern.exec(result)) !== null) {
-          dates.push(match[1]);
-        }
-
-        // Should have dates in chronological order for each user
-        expect(dates.includes('15.1.2024')).toBe(true);
-        expect(dates.includes('16.1.2024')).toBe(true);
+        // Since date headers are removed, we check that dates appear in the table content
+        // The dates should still be present in chronological order within the table
+        expect(result).toContain('15.1.2024');
+        expect(result).toContain('16.1.2024');
+        // Verify the table structure is maintained
+        expect(result).toContain('| Datum | Issue Key | Comment | Time Spent |');
       });
     });
   });
@@ -614,7 +572,7 @@ describe('Output Formatting', () => {
         // Verify file was written using mock-fs
         const fs = await import('fs/promises');
         const content = await fs.readFile('/tmp/test.csv', 'utf-8');
-        expect(content).toContain('User,Date,Issue Key');
+        expect(content).toContain('Date,User,Issue Key');

         consoleSpy.mockRestore();
       });
diff --git a/path/to/project-a/tests/setup.js b/path/to/project-b/tests/setup.js
index 04a3894..f022e51 100644
--- a/path/to/project-a/tests/setup.js
+++ b/path/to/project-b/tests/setup.js
@@ -14,21 +14,13 @@ export const server = setupServer(...handlers);
 // Start MSW server before all tests
 beforeAll(() => {
   server.listen({ onUnhandledRequest: 'warn' });
-
-  // Environment-Isolation: Setze kritische Environment-Variablen für Tests
-  // Diese werden automatisch in afterEach wieder zurückgesetzt
-  vi.stubEnv('NODE_ENV', 'test');
-  vi.stubEnv('JIRA_API_TOKEN', 'mock-api-token');
-  vi.stubEnv('JIRA_CONFIG_FILE', undefined); // Verhindert Host-Einflüsse durch lokale Config-Dateien
 });

-// Reset handlers, mock-fs and environment variables after each test
+// Reset handlers and mock-fs after each test
 afterEach(() => {
   server.resetHandlers();
   mockFs.restore();
   vi.restoreAllMocks();
-  // Environment-Cleanup: Entfernt alle Environment-Variable-Stubs für saubere Test-Isolation
-  vi.unstubAllEnvs();
 });

 // Close MSW server after all tests
@@ -99,6 +91,10 @@ vi.mock('commander', () => {
   };
 });

+// Setup environment variables for tests
+process.env.NODE_ENV = 'test';
+process.env.JIRA_API_TOKEN = 'mock-api-token';
+
 // Global test utilities
 global.createMockResponse = (data, status = 200) => ({
   ok: status >= 200 && status < 300,
